/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Facet
 */
@ApiModel(description = "Representation of a Facet")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class Facet {
  @SerializedName("category")
  private Boolean category = null;

  @SerializedName("multiSelect")
  private Boolean multiSelect = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("topValues")
  private List<FacetValue> topValues = null;

  @SerializedName("values")
  private List<FacetValue> values = null;

  @SerializedName("visible")
  private Boolean visible = null;

  public Facet category(Boolean category) {
    this.category = category;
    return this;
  }

   /**
   * Flag stating if facet is category facet
   * @return category
  **/
  @ApiModelProperty(value = "Flag stating if facet is category facet")
  public Boolean isCategory() {
    return category;
  }

  public void setCategory(Boolean category) {
    this.category = category;
  }

  public Facet multiSelect(Boolean multiSelect) {
    this.multiSelect = multiSelect;
    return this;
  }

   /**
   * Flag stating if facet is multiSelect
   * @return multiSelect
  **/
  @ApiModelProperty(value = "Flag stating if facet is multiSelect")
  public Boolean isMultiSelect() {
    return multiSelect;
  }

  public void setMultiSelect(Boolean multiSelect) {
    this.multiSelect = multiSelect;
  }

  public Facet name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the facet
   * @return name
  **/
  @ApiModelProperty(value = "Name of the facet")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Facet priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority value of the facet
   * @return priority
  **/
  @ApiModelProperty(value = "Priority value of the facet")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Facet topValues(List<FacetValue> topValues) {
    this.topValues = topValues;
    return this;
  }

  public Facet addTopValuesItem(FacetValue topValuesItem) {
    if (this.topValues == null) {
      this.topValues = new ArrayList<FacetValue>();
    }
    this.topValues.add(topValuesItem);
    return this;
  }

   /**
   * List of top facet values
   * @return topValues
  **/
  @ApiModelProperty(value = "List of top facet values")
  public List<FacetValue> getTopValues() {
    return topValues;
  }

  public void setTopValues(List<FacetValue> topValues) {
    this.topValues = topValues;
  }

  public Facet values(List<FacetValue> values) {
    this.values = values;
    return this;
  }

  public Facet addValuesItem(FacetValue valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<FacetValue>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * List of all facet values
   * @return values
  **/
  @ApiModelProperty(value = "List of all facet values")
  public List<FacetValue> getValues() {
    return values;
  }

  public void setValues(List<FacetValue> values) {
    this.values = values;
  }

  public Facet visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Flag stating if facet is visible
   * @return visible
  **/
  @ApiModelProperty(value = "Flag stating if facet is visible")
  public Boolean isVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Facet facet = (Facet) o;
    return Objects.equals(this.category, facet.category) &&
        Objects.equals(this.multiSelect, facet.multiSelect) &&
        Objects.equals(this.name, facet.name) &&
        Objects.equals(this.priority, facet.priority) &&
        Objects.equals(this.topValues, facet.topValues) &&
        Objects.equals(this.values, facet.values) &&
        Objects.equals(this.visible, facet.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, multiSelect, name, priority, topValues, values, visible);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Facet {\n");
    
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    multiSelect: ").append(toIndentedString(multiSelect)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    topValues: ").append(toIndentedString(topValues)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

