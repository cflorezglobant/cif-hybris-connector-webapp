/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Pickup Order Entry Group
 */
@ApiModel(description = "Representation of a Pickup Order Entry Group")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class PickupOrderEntryGroup {
  @SerializedName("deliveryPointOfService")
  private PointOfService deliveryPointOfService = null;

  @SerializedName("distance")
  private Double distance = null;

  @SerializedName("entries")
  private List<OrderEntry> entries = null;

  @SerializedName("quantity")
  private Long quantity = null;

  @SerializedName("totalPriceWithTax")
  private Price totalPriceWithTax = null;

  public PickupOrderEntryGroup deliveryPointOfService(PointOfService deliveryPointOfService) {
    this.deliveryPointOfService = deliveryPointOfService;
    return this;
  }

   /**
   * Delivery point of service
   * @return deliveryPointOfService
  **/
  @ApiModelProperty(value = "Delivery point of service")
  public PointOfService getDeliveryPointOfService() {
    return deliveryPointOfService;
  }

  public void setDeliveryPointOfService(PointOfService deliveryPointOfService) {
    this.deliveryPointOfService = deliveryPointOfService;
  }

  public PickupOrderEntryGroup distance(Double distance) {
    this.distance = distance;
    return this;
  }

   /**
   * Distance calculated to pickup place
   * @return distance
  **/
  @ApiModelProperty(value = "Distance calculated to pickup place")
  public Double getDistance() {
    return distance;
  }

  public void setDistance(Double distance) {
    this.distance = distance;
  }

  public PickupOrderEntryGroup entries(List<OrderEntry> entries) {
    this.entries = entries;
    return this;
  }

  public PickupOrderEntryGroup addEntriesItem(OrderEntry entriesItem) {
    if (this.entries == null) {
      this.entries = new ArrayList<OrderEntry>();
    }
    this.entries.add(entriesItem);
    return this;
  }

   /**
   * List of order entries
   * @return entries
  **/
  @ApiModelProperty(value = "List of order entries")
  public List<OrderEntry> getEntries() {
    return entries;
  }

  public void setEntries(List<OrderEntry> entries) {
    this.entries = entries;
  }

  public PickupOrderEntryGroup quantity(Long quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity of order entries in a group
   * @return quantity
  **/
  @ApiModelProperty(value = "Quantity of order entries in a group")
  public Long getQuantity() {
    return quantity;
  }

  public void setQuantity(Long quantity) {
    this.quantity = quantity;
  }

  public PickupOrderEntryGroup totalPriceWithTax(Price totalPriceWithTax) {
    this.totalPriceWithTax = totalPriceWithTax;
    return this;
  }

   /**
   * Total price with tax
   * @return totalPriceWithTax
  **/
  @ApiModelProperty(value = "Total price with tax")
  public Price getTotalPriceWithTax() {
    return totalPriceWithTax;
  }

  public void setTotalPriceWithTax(Price totalPriceWithTax) {
    this.totalPriceWithTax = totalPriceWithTax;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PickupOrderEntryGroup pickupOrderEntryGroup = (PickupOrderEntryGroup) o;
    return Objects.equals(this.deliveryPointOfService, pickupOrderEntryGroup.deliveryPointOfService) &&
        Objects.equals(this.distance, pickupOrderEntryGroup.distance) &&
        Objects.equals(this.entries, pickupOrderEntryGroup.entries) &&
        Objects.equals(this.quantity, pickupOrderEntryGroup.quantity) &&
        Objects.equals(this.totalPriceWithTax, pickupOrderEntryGroup.totalPriceWithTax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryPointOfService, distance, entries, quantity, totalPriceWithTax);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PickupOrderEntryGroup {\n");
    
    sb.append("    deliveryPointOfService: ").append(toIndentedString(deliveryPointOfService)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    totalPriceWithTax: ").append(toIndentedString(totalPriceWithTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

