/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Request body fields required and optional to operate on address data. The DTO is in XML or .json format
 */
@ApiModel(description = "Request body fields required and optional to operate on address data. The DTO is in XML or .json format")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class Address {
  @SerializedName("cellphone")
  private String cellphone = null;

  @SerializedName("companyName")
  private String companyName = null;

  @SerializedName("country")
  private Country country = null;

  @SerializedName("defaultAddress")
  private Boolean defaultAddress = null;

  @SerializedName("district")
  private String district = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("formattedAddress")
  private String formattedAddress = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("line1")
  private String line1 = null;

  @SerializedName("line2")
  private String line2 = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("region")
  private Region region = null;

  @SerializedName("shippingAddress")
  private Boolean shippingAddress = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("titleCode")
  private String titleCode = null;

  @SerializedName("town")
  private String town = null;

  @SerializedName("visibleInAddressBook")
  private Boolean visibleInAddressBook = null;

  public Address cellphone(String cellphone) {
    this.cellphone = cellphone;
    return this;
  }

   /**
   * Cellphone number
   * @return cellphone
  **/
  @ApiModelProperty(value = "Cellphone number")
  public String getCellphone() {
    return cellphone;
  }

  public void setCellphone(String cellphone) {
    this.cellphone = cellphone;
  }

  public Address companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * Company Name
   * @return companyName
  **/
  @ApiModelProperty(value = "Company Name")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public Address country(Country country) {
    this.country = country;
    return this;
  }

   /**
   * Country where address is located
   * @return country
  **/
  @ApiModelProperty(value = "Country where address is located")
  public Country getCountry() {
    return country;
  }

  public void setCountry(Country country) {
    this.country = country;
  }

  public Address defaultAddress(Boolean defaultAddress) {
    this.defaultAddress = defaultAddress;
    return this;
  }

   /**
   * Boolean flag if address is default
   * @return defaultAddress
  **/
  @ApiModelProperty(value = "Boolean flag if address is default")
  public Boolean isDefaultAddress() {
    return defaultAddress;
  }

  public void setDefaultAddress(Boolean defaultAddress) {
    this.defaultAddress = defaultAddress;
  }

  public Address district(String district) {
    this.district = district;
    return this;
  }

   /**
   * District name
   * @return district
  **/
  @ApiModelProperty(value = "District name")
  public String getDistrict() {
    return district;
  }

  public void setDistrict(String district) {
    this.district = district;
  }

  public Address email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email address
   * @return email
  **/
  @ApiModelProperty(value = "Email address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Address firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of the address person
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "First name of the address person")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Address formattedAddress(String formattedAddress) {
    this.formattedAddress = formattedAddress;
    return this;
  }

   /**
   * Boolean flag if address is formatted
   * @return formattedAddress
  **/
  @ApiModelProperty(value = "Boolean flag if address is formatted")
  public String getFormattedAddress() {
    return formattedAddress;
  }

  public void setFormattedAddress(String formattedAddress) {
    this.formattedAddress = formattedAddress;
  }

  public Address id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique id value of the address which is optional while creating new address. While performing other address operations this value is the key
   * @return id
  **/
  @ApiModelProperty(value = "Unique id value of the address which is optional while creating new address. While performing other address operations this value is the key")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Address lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of the address person
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "Last name of the address person")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Address line1(String line1) {
    this.line1 = line1;
    return this;
  }

   /**
   * First line of the address
   * @return line1
  **/
  @ApiModelProperty(required = true, value = "First line of the address")
  public String getLine1() {
    return line1;
  }

  public void setLine1(String line1) {
    this.line1 = line1;
  }

  public Address line2(String line2) {
    this.line2 = line2;
    return this;
  }

   /**
   * Second line of the address
   * @return line2
  **/
  @ApiModelProperty(value = "Second line of the address")
  public String getLine2() {
    return line2;
  }

  public void setLine2(String line2) {
    this.line2 = line2;
  }

  public Address phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone number
   * @return phone
  **/
  @ApiModelProperty(value = "Phone number")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Address postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal code of the address
   * @return postalCode
  **/
  @ApiModelProperty(required = true, value = "Postal code of the address")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Address region(Region region) {
    this.region = region;
    return this;
  }

   /**
   * Region where address belongs to
   * @return region
  **/
  @ApiModelProperty(value = "Region where address belongs to")
  public Region getRegion() {
    return region;
  }

  public void setRegion(Region region) {
    this.region = region;
  }

  public Address shippingAddress(Boolean shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Boolean flag if address is for shipping
   * @return shippingAddress
  **/
  @ApiModelProperty(value = "Boolean flag if address is for shipping")
  public Boolean isShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(Boolean shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  public Address title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the address person
   * @return title
  **/
  @ApiModelProperty(value = "Title of the address person")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Address titleCode(String titleCode) {
    this.titleCode = titleCode;
    return this;
  }

   /**
   * Code of the title
   * @return titleCode
  **/
  @ApiModelProperty(required = true, value = "Code of the title")
  public String getTitleCode() {
    return titleCode;
  }

  public void setTitleCode(String titleCode) {
    this.titleCode = titleCode;
  }

  public Address town(String town) {
    this.town = town;
    return this;
  }

   /**
   * Town, field required
   * @return town
  **/
  @ApiModelProperty(required = true, value = "Town, field required")
  public String getTown() {
    return town;
  }

  public void setTown(String town) {
    this.town = town;
  }

  public Address visibleInAddressBook(Boolean visibleInAddressBook) {
    this.visibleInAddressBook = visibleInAddressBook;
    return this;
  }

   /**
   * Boolean flag if address is visible in the Address Book
   * @return visibleInAddressBook
  **/
  @ApiModelProperty(value = "Boolean flag if address is visible in the Address Book")
  public Boolean isVisibleInAddressBook() {
    return visibleInAddressBook;
  }

  public void setVisibleInAddressBook(Boolean visibleInAddressBook) {
    this.visibleInAddressBook = visibleInAddressBook;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.cellphone, address.cellphone) &&
        Objects.equals(this.companyName, address.companyName) &&
        Objects.equals(this.country, address.country) &&
        Objects.equals(this.defaultAddress, address.defaultAddress) &&
        Objects.equals(this.district, address.district) &&
        Objects.equals(this.email, address.email) &&
        Objects.equals(this.firstName, address.firstName) &&
        Objects.equals(this.formattedAddress, address.formattedAddress) &&
        Objects.equals(this.id, address.id) &&
        Objects.equals(this.lastName, address.lastName) &&
        Objects.equals(this.line1, address.line1) &&
        Objects.equals(this.line2, address.line2) &&
        Objects.equals(this.phone, address.phone) &&
        Objects.equals(this.postalCode, address.postalCode) &&
        Objects.equals(this.region, address.region) &&
        Objects.equals(this.shippingAddress, address.shippingAddress) &&
        Objects.equals(this.title, address.title) &&
        Objects.equals(this.titleCode, address.titleCode) &&
        Objects.equals(this.town, address.town) &&
        Objects.equals(this.visibleInAddressBook, address.visibleInAddressBook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cellphone, companyName, country, defaultAddress, district, email, firstName, formattedAddress, id, lastName, line1, line2, phone, postalCode, region, shippingAddress, title, titleCode, town, visibleInAddressBook);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    
    sb.append("    cellphone: ").append(toIndentedString(cellphone)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    defaultAddress: ").append(toIndentedString(defaultAddress)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    formattedAddress: ").append(toIndentedString(formattedAddress)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    line1: ").append(toIndentedString(line1)).append("\n");
    sb.append("    line2: ").append(toIndentedString(line2)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    titleCode: ").append(toIndentedString(titleCode)).append("\n");
    sb.append("    town: ").append(toIndentedString(town)).append("\n");
    sb.append("    visibleInAddressBook: ").append(toIndentedString(visibleInAddressBook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

