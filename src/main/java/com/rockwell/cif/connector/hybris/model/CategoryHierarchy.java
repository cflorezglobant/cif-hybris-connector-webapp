/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import com.rockwell.cif.connector.server.graphql.model.CategoryTree;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Category Hierarchy
 */
@ApiModel(description = "Representation of a Category Hierarchy")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class CategoryHierarchy {
  @SerializedName("id")
  private String id = null;

  @SerializedName("lastModified")
  private OffsetDateTime lastModified = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("products")
  private List<Product> products = null;

  @SerializedName("subcategories")
  private List<CategoryHierarchy> subcategories = null;

  @SerializedName("url")
  private String url = null;

  public CategoryHierarchy id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of abstract catalog item
   * @return id
  **/
  @ApiModelProperty(value = "Identifier of abstract catalog item")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CategoryHierarchy lastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
    return this;
  }

   /**
   * Date of last modification
   * @return lastModified
  **/
  @ApiModelProperty(value = "Date of last modification")
  public OffsetDateTime getLastModified() {
    return lastModified;
  }

  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }

  public CategoryHierarchy name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of abstract catalog item
   * @return name
  **/
  @ApiModelProperty(value = "Name of abstract catalog item")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CategoryHierarchy products(List<Product> products) {
    this.products = products;
    return this;
  }

  public CategoryHierarchy addProductsItem(Product productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<Product>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * Get products
   * @return products
  **/
  @ApiModelProperty(value = "")
  public List<Product> getProducts() {
    return products;
  }

  public void setProducts(List<Product> products) {
    this.products = products;
  }

  public CategoryHierarchy subcategories(List<CategoryHierarchy> subcategories) {
    this.subcategories = subcategories;
    return this;
  }

  public CategoryHierarchy addSubcategoriesItem(CategoryHierarchy subcategoriesItem) {
    if (this.subcategories == null) {
      this.subcategories = new ArrayList<CategoryHierarchy>();
    }
    this.subcategories.add(subcategoriesItem);
    return this;
  }

   /**
   * List of subcategory hierarchies
   * @return subcategories
  **/
  @ApiModelProperty(value = "List of subcategory hierarchies")
  public List<CategoryHierarchy> getSubcategories() {
    return subcategories;
  }

  public void setSubcategories(List<CategoryHierarchy> subcategories) {
    this.subcategories = subcategories;
  }

  public CategoryHierarchy url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url address of abstract catalog item
   * @return url
  **/
  @ApiModelProperty(value = "Url address of abstract catalog item")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoryHierarchy categoryHierarchy = (CategoryHierarchy) o;
    return Objects.equals(this.id, categoryHierarchy.id) &&
        Objects.equals(this.lastModified, categoryHierarchy.lastModified) &&
        Objects.equals(this.name, categoryHierarchy.name) &&
        Objects.equals(this.products, categoryHierarchy.products) &&
        Objects.equals(this.subcategories, categoryHierarchy.subcategories) &&
        Objects.equals(this.url, categoryHierarchy.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, lastModified, name, products, subcategories, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategoryHierarchy {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    subcategories: ").append(toIndentedString(subcategories)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public CategoryTree adaptToGrahQL(){
    return new CategoryTree(
            String.valueOf(this.getSubcategories().size()),
            Integer.valueOf(this.getId()),
            this.getName(),
            this.getName(),
            "/", 0, this.getUrl(),
            this.getId());
  }

}

