/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Feature
 */
@ApiModel(description = "Representation of a Feature")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class Feature {
  @SerializedName("code")
  private String code = null;

  @SerializedName("comparable")
  private Boolean comparable = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("featureUnit")
  private FeatureUnit featureUnit = null;

  @SerializedName("featureValues")
  private List<FeatureValue> featureValues = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("range")
  private Boolean range = null;

  @SerializedName("type")
  private String type = null;

  public Feature code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the feature
   * @return code
  **/
  @ApiModelProperty(value = "Code of the feature")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Feature comparable(Boolean comparable) {
    this.comparable = comparable;
    return this;
  }

   /**
   * Flag defining it feature is comparable
   * @return comparable
  **/
  @ApiModelProperty(value = "Flag defining it feature is comparable")
  public Boolean isComparable() {
    return comparable;
  }

  public void setComparable(Boolean comparable) {
    this.comparable = comparable;
  }

  public Feature description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the feature
   * @return description
  **/
  @ApiModelProperty(value = "Description of the feature")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Feature featureUnit(FeatureUnit featureUnit) {
    this.featureUnit = featureUnit;
    return this;
  }

   /**
   * Feature unit
   * @return featureUnit
  **/
  @ApiModelProperty(value = "Feature unit")
  public FeatureUnit getFeatureUnit() {
    return featureUnit;
  }

  public void setFeatureUnit(FeatureUnit featureUnit) {
    this.featureUnit = featureUnit;
  }

  public Feature featureValues(List<FeatureValue> featureValues) {
    this.featureValues = featureValues;
    return this;
  }

  public Feature addFeatureValuesItem(FeatureValue featureValuesItem) {
    if (this.featureValues == null) {
      this.featureValues = new ArrayList<FeatureValue>();
    }
    this.featureValues.add(featureValuesItem);
    return this;
  }

   /**
   * List of feature values
   * @return featureValues
  **/
  @ApiModelProperty(value = "List of feature values")
  public List<FeatureValue> getFeatureValues() {
    return featureValues;
  }

  public void setFeatureValues(List<FeatureValue> featureValues) {
    this.featureValues = featureValues;
  }

  public Feature name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the feature
   * @return name
  **/
  @ApiModelProperty(value = "Name of the feature")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Feature range(Boolean range) {
    this.range = range;
    return this;
  }

   /**
   * Range number of the reature
   * @return range
  **/
  @ApiModelProperty(value = "Range number of the reature")
  public Boolean isRange() {
    return range;
  }

  public void setRange(Boolean range) {
    this.range = range;
  }

  public Feature type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the feature
   * @return type
  **/
  @ApiModelProperty(value = "Type of the feature")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Feature feature = (Feature) o;
    return Objects.equals(this.code, feature.code) &&
        Objects.equals(this.comparable, feature.comparable) &&
        Objects.equals(this.description, feature.description) &&
        Objects.equals(this.featureUnit, feature.featureUnit) &&
        Objects.equals(this.featureValues, feature.featureValues) &&
        Objects.equals(this.name, feature.name) &&
        Objects.equals(this.range, feature.range) &&
        Objects.equals(this.type, feature.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, comparable, description, featureUnit, featureValues, name, range, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Feature {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    comparable: ").append(toIndentedString(comparable)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    featureUnit: ").append(toIndentedString(featureUnit)).append("\n");
    sb.append("    featureValues: ").append(toIndentedString(featureValues)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    range: ").append(toIndentedString(range)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

