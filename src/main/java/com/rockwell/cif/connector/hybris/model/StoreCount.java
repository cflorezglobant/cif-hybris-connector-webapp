/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Store Count
 */
@ApiModel(description = "Representation of a Store Count")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class StoreCount {
  @SerializedName("count")
  private Integer count = null;

  @SerializedName("isoCode")
  private String isoCode = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("storeCountDataList")
  private List<StoreCount> storeCountDataList = null;

  @SerializedName("type")
  private String type = null;

  public StoreCount count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Count
   * @return count
  **/
  @ApiModelProperty(value = "Count")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public StoreCount isoCode(String isoCode) {
    this.isoCode = isoCode;
    return this;
  }

   /**
   * Iso code of store
   * @return isoCode
  **/
  @ApiModelProperty(value = "Iso code of store")
  public String getIsoCode() {
    return isoCode;
  }

  public void setIsoCode(String isoCode) {
    this.isoCode = isoCode;
  }

  public StoreCount name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of store count
   * @return name
  **/
  @ApiModelProperty(value = "Name of store count")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public StoreCount storeCountDataList(List<StoreCount> storeCountDataList) {
    this.storeCountDataList = storeCountDataList;
    return this;
  }

  public StoreCount addStoreCountDataListItem(StoreCount storeCountDataListItem) {
    if (this.storeCountDataList == null) {
      this.storeCountDataList = new ArrayList<StoreCount>();
    }
    this.storeCountDataList.add(storeCountDataListItem);
    return this;
  }

   /**
   * List of store counts
   * @return storeCountDataList
  **/
  @ApiModelProperty(value = "List of store counts")
  public List<StoreCount> getStoreCountDataList() {
    return storeCountDataList;
  }

  public void setStoreCountDataList(List<StoreCount> storeCountDataList) {
    this.storeCountDataList = storeCountDataList;
  }

  public StoreCount type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of store count
   * @return type
  **/
  @ApiModelProperty(value = "Type of store count")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoreCount storeCount = (StoreCount) o;
    return Objects.equals(this.count, storeCount.count) &&
        Objects.equals(this.isoCode, storeCount.isoCode) &&
        Objects.equals(this.name, storeCount.name) &&
        Objects.equals(this.storeCountDataList, storeCount.storeCountDataList) &&
        Objects.equals(this.type, storeCount.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, isoCode, name, storeCountDataList, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoreCount {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    isoCode: ").append(toIndentedString(isoCode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    storeCountDataList: ").append(toIndentedString(storeCountDataList)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

