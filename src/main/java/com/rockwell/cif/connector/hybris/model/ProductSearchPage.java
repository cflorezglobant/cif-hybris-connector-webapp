/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Product Search Page
 */
@ApiModel(description = "Representation of a Product Search Page")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class ProductSearchPage {
  @SerializedName("breadcrumbs")
  private List<Breadcrumb> breadcrumbs = null;

  @SerializedName("categoryCode")
  private String categoryCode = null;

  @SerializedName("currentQuery")
  private SearchState currentQuery = null;

  @SerializedName("facets")
  private List<Facet> facets = null;

  @SerializedName("freeTextSearch")
  private String freeTextSearch = null;

  @SerializedName("keywordRedirectUrl")
  private String keywordRedirectUrl = null;

  @SerializedName("pagination")
  private DeprecatedPagination pagination = null;

  @SerializedName("products")
  private List<Product> products = null;

  @SerializedName("sorts")
  private List<Sort> sorts = null;

  @SerializedName("spellingSuggestion")
  private SpellingSuggestion spellingSuggestion = null;

  public ProductSearchPage breadcrumbs(List<Breadcrumb> breadcrumbs) {
    this.breadcrumbs = breadcrumbs;
    return this;
  }

  public ProductSearchPage addBreadcrumbsItem(Breadcrumb breadcrumbsItem) {
    if (this.breadcrumbs == null) {
      this.breadcrumbs = new ArrayList<Breadcrumb>();
    }
    this.breadcrumbs.add(breadcrumbsItem);
    return this;
  }

   /**
   * List of breadcrumbs info
   * @return breadcrumbs
  **/
  @ApiModelProperty(value = "List of breadcrumbs info")
  public List<Breadcrumb> getBreadcrumbs() {
    return breadcrumbs;
  }

  public void setBreadcrumbs(List<Breadcrumb> breadcrumbs) {
    this.breadcrumbs = breadcrumbs;
  }

  public ProductSearchPage categoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
    return this;
  }

   /**
   * Code of category
   * @return categoryCode
  **/
  @ApiModelProperty(value = "Code of category")
  public String getCategoryCode() {
    return categoryCode;
  }

  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }

  public ProductSearchPage currentQuery(SearchState currentQuery) {
    this.currentQuery = currentQuery;
    return this;
  }

   /**
   * Current query
   * @return currentQuery
  **/
  @ApiModelProperty(value = "Current query")
  public SearchState getCurrentQuery() {
    return currentQuery;
  }

  public void setCurrentQuery(SearchState currentQuery) {
    this.currentQuery = currentQuery;
  }

  public ProductSearchPage facets(List<Facet> facets) {
    this.facets = facets;
    return this;
  }

  public ProductSearchPage addFacetsItem(Facet facetsItem) {
    if (this.facets == null) {
      this.facets = new ArrayList<Facet>();
    }
    this.facets.add(facetsItem);
    return this;
  }

   /**
   * List of facets
   * @return facets
  **/
  @ApiModelProperty(value = "List of facets")
  public List<Facet> getFacets() {
    return facets;
  }

  public void setFacets(List<Facet> facets) {
    this.facets = facets;
  }

  public ProductSearchPage freeTextSearch(String freeTextSearch) {
    this.freeTextSearch = freeTextSearch;
    return this;
  }

   /**
   * Free text search
   * @return freeTextSearch
  **/
  @ApiModelProperty(value = "Free text search")
  public String getFreeTextSearch() {
    return freeTextSearch;
  }

  public void setFreeTextSearch(String freeTextSearch) {
    this.freeTextSearch = freeTextSearch;
  }

  public ProductSearchPage keywordRedirectUrl(String keywordRedirectUrl) {
    this.keywordRedirectUrl = keywordRedirectUrl;
    return this;
  }

   /**
   * Redirect url address keyword
   * @return keywordRedirectUrl
  **/
  @ApiModelProperty(value = "Redirect url address keyword")
  public String getKeywordRedirectUrl() {
    return keywordRedirectUrl;
  }

  public void setKeywordRedirectUrl(String keywordRedirectUrl) {
    this.keywordRedirectUrl = keywordRedirectUrl;
  }

  public ProductSearchPage pagination(DeprecatedPagination pagination) {
    this.pagination = pagination;
    return this;
  }

   /**
   * Pagination number
   * @return pagination
  **/
  @ApiModelProperty(value = "Pagination number")
  public DeprecatedPagination getPagination() {
    return pagination;
  }

  public void setPagination(DeprecatedPagination pagination) {
    this.pagination = pagination;
  }

  public ProductSearchPage products(List<Product> products) {
    this.products = products;
    return this;
  }

  public ProductSearchPage addProductsItem(Product productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<Product>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * List of products
   * @return products
  **/
  @ApiModelProperty(value = "List of products")
  public List<Product> getProducts() {
    return products;
  }

  public void setProducts(List<Product> products) {
    this.products = products;
  }

  public ProductSearchPage sorts(List<Sort> sorts) {
    this.sorts = sorts;
    return this;
  }

  public ProductSearchPage addSortsItem(Sort sortsItem) {
    if (this.sorts == null) {
      this.sorts = new ArrayList<Sort>();
    }
    this.sorts.add(sortsItem);
    return this;
  }

   /**
   * List of sorts
   * @return sorts
  **/
  @ApiModelProperty(value = "List of sorts")
  public List<Sort> getSorts() {
    return sorts;
  }

  public void setSorts(List<Sort> sorts) {
    this.sorts = sorts;
  }

  public ProductSearchPage spellingSuggestion(SpellingSuggestion spellingSuggestion) {
    this.spellingSuggestion = spellingSuggestion;
    return this;
  }

   /**
   * Spelling suggestion
   * @return spellingSuggestion
  **/
  @ApiModelProperty(value = "Spelling suggestion")
  public SpellingSuggestion getSpellingSuggestion() {
    return spellingSuggestion;
  }

  public void setSpellingSuggestion(SpellingSuggestion spellingSuggestion) {
    this.spellingSuggestion = spellingSuggestion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductSearchPage productSearchPage = (ProductSearchPage) o;
    return Objects.equals(this.breadcrumbs, productSearchPage.breadcrumbs) &&
        Objects.equals(this.categoryCode, productSearchPage.categoryCode) &&
        Objects.equals(this.currentQuery, productSearchPage.currentQuery) &&
        Objects.equals(this.facets, productSearchPage.facets) &&
        Objects.equals(this.freeTextSearch, productSearchPage.freeTextSearch) &&
        Objects.equals(this.keywordRedirectUrl, productSearchPage.keywordRedirectUrl) &&
        Objects.equals(this.pagination, productSearchPage.pagination) &&
        Objects.equals(this.products, productSearchPage.products) &&
        Objects.equals(this.sorts, productSearchPage.sorts) &&
        Objects.equals(this.spellingSuggestion, productSearchPage.spellingSuggestion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(breadcrumbs, categoryCode, currentQuery, facets, freeTextSearch, keywordRedirectUrl, pagination, products, sorts, spellingSuggestion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductSearchPage {\n");
    
    sb.append("    breadcrumbs: ").append(toIndentedString(breadcrumbs)).append("\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    currentQuery: ").append(toIndentedString(currentQuery)).append("\n");
    sb.append("    facets: ").append(toIndentedString(facets)).append("\n");
    sb.append("    freeTextSearch: ").append(toIndentedString(freeTextSearch)).append("\n");
    sb.append("    keywordRedirectUrl: ").append(toIndentedString(keywordRedirectUrl)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    sorts: ").append(toIndentedString(sorts)).append("\n");
    sb.append("    spellingSuggestion: ").append(toIndentedString(spellingSuggestion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

