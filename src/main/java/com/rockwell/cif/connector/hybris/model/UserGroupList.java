/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of an User Group List
 */
@ApiModel(description = "Representation of an User Group List")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class UserGroupList {
  @SerializedName("currentPage")
  private Integer currentPage = null;

  @SerializedName("numberOfPages")
  private Integer numberOfPages = null;

  @SerializedName("pageSize")
  private Integer pageSize = null;

  @SerializedName("totalNumber")
  private Integer totalNumber = null;

  @SerializedName("userGroups")
  private List<UserGroup> userGroups = null;

  public UserGroupList currentPage(Integer currentPage) {
    this.currentPage = currentPage;
    return this;
  }

   /**
   * Current page
   * @return currentPage
  **/
  @ApiModelProperty(value = "Current page")
  public Integer getCurrentPage() {
    return currentPage;
  }

  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }

  public UserGroupList numberOfPages(Integer numberOfPages) {
    this.numberOfPages = numberOfPages;
    return this;
  }

   /**
   * Number of pages
   * @return numberOfPages
  **/
  @ApiModelProperty(value = "Number of pages")
  public Integer getNumberOfPages() {
    return numberOfPages;
  }

  public void setNumberOfPages(Integer numberOfPages) {
    this.numberOfPages = numberOfPages;
  }

  public UserGroupList pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Page size
   * @return pageSize
  **/
  @ApiModelProperty(value = "Page size")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public UserGroupList totalNumber(Integer totalNumber) {
    this.totalNumber = totalNumber;
    return this;
  }

   /**
   * Total number
   * @return totalNumber
  **/
  @ApiModelProperty(value = "Total number")
  public Integer getTotalNumber() {
    return totalNumber;
  }

  public void setTotalNumber(Integer totalNumber) {
    this.totalNumber = totalNumber;
  }

  public UserGroupList userGroups(List<UserGroup> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public UserGroupList addUserGroupsItem(UserGroup userGroupsItem) {
    if (this.userGroups == null) {
      this.userGroups = new ArrayList<UserGroup>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

   /**
   * List of user groups
   * @return userGroups
  **/
  @ApiModelProperty(value = "List of user groups")
  public List<UserGroup> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(List<UserGroup> userGroups) {
    this.userGroups = userGroups;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserGroupList userGroupList = (UserGroupList) o;
    return Objects.equals(this.currentPage, userGroupList.currentPage) &&
        Objects.equals(this.numberOfPages, userGroupList.numberOfPages) &&
        Objects.equals(this.pageSize, userGroupList.pageSize) &&
        Objects.equals(this.totalNumber, userGroupList.totalNumber) &&
        Objects.equals(this.userGroups, userGroupList.userGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentPage, numberOfPages, pageSize, totalNumber, userGroups);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserGroupList {\n");
    
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    numberOfPages: ").append(toIndentedString(numberOfPages)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    totalNumber: ").append(toIndentedString(totalNumber)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

