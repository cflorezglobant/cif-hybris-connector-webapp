/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Product List
 */
@ApiModel(description = "Representation of a Product List")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class ProductList {
  @SerializedName("catalog")
  private String catalog = null;

  @SerializedName("currentPage")
  private Integer currentPage = null;

  @SerializedName("products")
  private List<Product> products = null;

  @SerializedName("totalPageCount")
  private Integer totalPageCount = null;

  @SerializedName("totalProductCount")
  private Integer totalProductCount = null;

  @SerializedName("version")
  private String version = null;

  public ProductList catalog(String catalog) {
    this.catalog = catalog;
    return this;
  }

   /**
   * Catalog of product list
   * @return catalog
  **/
  @ApiModelProperty(value = "Catalog of product list")
  public String getCatalog() {
    return catalog;
  }

  public void setCatalog(String catalog) {
    this.catalog = catalog;
  }

  public ProductList currentPage(Integer currentPage) {
    this.currentPage = currentPage;
    return this;
  }

   /**
   * Number of current page
   * @return currentPage
  **/
  @ApiModelProperty(value = "Number of current page")
  public Integer getCurrentPage() {
    return currentPage;
  }

  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }

  public ProductList products(List<Product> products) {
    this.products = products;
    return this;
  }

  public ProductList addProductsItem(Product productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<Product>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * List of products
   * @return products
  **/
  @ApiModelProperty(value = "List of products")
  public List<Product> getProducts() {
    return products;
  }

  public void setProducts(List<Product> products) {
    this.products = products;
  }

  public ProductList totalPageCount(Integer totalPageCount) {
    this.totalPageCount = totalPageCount;
    return this;
  }

   /**
   * Total page count
   * @return totalPageCount
  **/
  @ApiModelProperty(value = "Total page count")
  public Integer getTotalPageCount() {
    return totalPageCount;
  }

  public void setTotalPageCount(Integer totalPageCount) {
    this.totalPageCount = totalPageCount;
  }

  public ProductList totalProductCount(Integer totalProductCount) {
    this.totalProductCount = totalProductCount;
    return this;
  }

   /**
   * Total product count
   * @return totalProductCount
  **/
  @ApiModelProperty(value = "Total product count")
  public Integer getTotalProductCount() {
    return totalProductCount;
  }

  public void setTotalProductCount(Integer totalProductCount) {
    this.totalProductCount = totalProductCount;
  }

  public ProductList version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version of product list
   * @return version
  **/
  @ApiModelProperty(value = "Version of product list")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductList productList = (ProductList) o;
    return Objects.equals(this.catalog, productList.catalog) &&
        Objects.equals(this.currentPage, productList.currentPage) &&
        Objects.equals(this.products, productList.products) &&
        Objects.equals(this.totalPageCount, productList.totalPageCount) &&
        Objects.equals(this.totalProductCount, productList.totalProductCount) &&
        Objects.equals(this.version, productList.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(catalog, currentPage, products, totalPageCount, totalProductCount, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductList {\n");
    
    sb.append("    catalog: ").append(toIndentedString(catalog)).append("\n");
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    totalPageCount: ").append(toIndentedString(totalPageCount)).append("\n");
    sb.append("    totalProductCount: ").append(toIndentedString(totalProductCount)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

