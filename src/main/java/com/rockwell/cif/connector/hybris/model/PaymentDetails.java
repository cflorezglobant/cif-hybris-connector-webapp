/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Representation of a Payment Details
 */
@ApiModel(description = "Representation of a Payment Details")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class PaymentDetails {
  @SerializedName("accountHolderName")
  private String accountHolderName = null;

  @SerializedName("billingAddress")
  private Address billingAddress = null;

  @SerializedName("cardNumber")
  private String cardNumber = null;

  @SerializedName("cardType")
  private CardType cardType = null;

  @SerializedName("defaultPayment")
  private Boolean defaultPayment = null;

  @SerializedName("expiryMonth")
  private String expiryMonth = null;

  @SerializedName("expiryYear")
  private String expiryYear = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("issueNumber")
  private String issueNumber = null;

  @SerializedName("saved")
  private Boolean saved = null;

  @SerializedName("startMonth")
  private String startMonth = null;

  @SerializedName("startYear")
  private String startYear = null;

  @SerializedName("subscriptionId")
  private String subscriptionId = null;

  public PaymentDetails accountHolderName(String accountHolderName) {
    this.accountHolderName = accountHolderName;
    return this;
  }

   /**
   * Name of account holder
   * @return accountHolderName
  **/
  @ApiModelProperty(value = "Name of account holder")
  public String getAccountHolderName() {
    return accountHolderName;
  }

  public void setAccountHolderName(String accountHolderName) {
    this.accountHolderName = accountHolderName;
  }

  public PaymentDetails billingAddress(Address billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Address details to be considered as billing address
   * @return billingAddress
  **/
  @ApiModelProperty(value = "Address details to be considered as billing address")
  public Address getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(Address billingAddress) {
    this.billingAddress = billingAddress;
  }

  public PaymentDetails cardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
    return this;
  }

   /**
   * Payment card number
   * @return cardNumber
  **/
  @ApiModelProperty(value = "Payment card number")
  public String getCardNumber() {
    return cardNumber;
  }

  public void setCardNumber(String cardNumber) {
    this.cardNumber = cardNumber;
  }

  public PaymentDetails cardType(CardType cardType) {
    this.cardType = cardType;
    return this;
  }

   /**
   * Type of payment card
   * @return cardType
  **/
  @ApiModelProperty(value = "Type of payment card")
  public CardType getCardType() {
    return cardType;
  }

  public void setCardType(CardType cardType) {
    this.cardType = cardType;
  }

  public PaymentDetails defaultPayment(Boolean defaultPayment) {
    this.defaultPayment = defaultPayment;
    return this;
  }

   /**
   * Flag to mark if payment the default one
   * @return defaultPayment
  **/
  @ApiModelProperty(value = "Flag to mark if payment the default one")
  public Boolean isDefaultPayment() {
    return defaultPayment;
  }

  public void setDefaultPayment(Boolean defaultPayment) {
    this.defaultPayment = defaultPayment;
  }

  public PaymentDetails expiryMonth(String expiryMonth) {
    this.expiryMonth = expiryMonth;
    return this;
  }

   /**
   * Month of expiration of payment
   * @return expiryMonth
  **/
  @ApiModelProperty(value = "Month of expiration of payment")
  public String getExpiryMonth() {
    return expiryMonth;
  }

  public void setExpiryMonth(String expiryMonth) {
    this.expiryMonth = expiryMonth;
  }

  public PaymentDetails expiryYear(String expiryYear) {
    this.expiryYear = expiryYear;
    return this;
  }

   /**
   * Year of expiration of payment
   * @return expiryYear
  **/
  @ApiModelProperty(value = "Year of expiration of payment")
  public String getExpiryYear() {
    return expiryYear;
  }

  public void setExpiryYear(String expiryYear) {
    this.expiryYear = expiryYear;
  }

  public PaymentDetails id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of payment detail
   * @return id
  **/
  @ApiModelProperty(value = "Unique identifier of payment detail")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PaymentDetails issueNumber(String issueNumber) {
    this.issueNumber = issueNumber;
    return this;
  }

   /**
   * Issue number
   * @return issueNumber
  **/
  @ApiModelProperty(value = "Issue number")
  public String getIssueNumber() {
    return issueNumber;
  }

  public void setIssueNumber(String issueNumber) {
    this.issueNumber = issueNumber;
  }

  public PaymentDetails saved(Boolean saved) {
    this.saved = saved;
    return this;
  }

   /**
   * Flag to mark if payment is saved one
   * @return saved
  **/
  @ApiModelProperty(value = "Flag to mark if payment is saved one")
  public Boolean isSaved() {
    return saved;
  }

  public void setSaved(Boolean saved) {
    this.saved = saved;
  }

  public PaymentDetails startMonth(String startMonth) {
    this.startMonth = startMonth;
    return this;
  }

   /**
   * Start month from which payment is valid
   * @return startMonth
  **/
  @ApiModelProperty(value = "Start month from which payment is valid")
  public String getStartMonth() {
    return startMonth;
  }

  public void setStartMonth(String startMonth) {
    this.startMonth = startMonth;
  }

  public PaymentDetails startYear(String startYear) {
    this.startYear = startYear;
    return this;
  }

   /**
   * Start year from which payment is valid
   * @return startYear
  **/
  @ApiModelProperty(value = "Start year from which payment is valid")
  public String getStartYear() {
    return startYear;
  }

  public void setStartYear(String startYear) {
    this.startYear = startYear;
  }

  public PaymentDetails subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Identifier of subscription
   * @return subscriptionId
  **/
  @ApiModelProperty(value = "Identifier of subscription")
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentDetails paymentDetails = (PaymentDetails) o;
    return Objects.equals(this.accountHolderName, paymentDetails.accountHolderName) &&
        Objects.equals(this.billingAddress, paymentDetails.billingAddress) &&
        Objects.equals(this.cardNumber, paymentDetails.cardNumber) &&
        Objects.equals(this.cardType, paymentDetails.cardType) &&
        Objects.equals(this.defaultPayment, paymentDetails.defaultPayment) &&
        Objects.equals(this.expiryMonth, paymentDetails.expiryMonth) &&
        Objects.equals(this.expiryYear, paymentDetails.expiryYear) &&
        Objects.equals(this.id, paymentDetails.id) &&
        Objects.equals(this.issueNumber, paymentDetails.issueNumber) &&
        Objects.equals(this.saved, paymentDetails.saved) &&
        Objects.equals(this.startMonth, paymentDetails.startMonth) &&
        Objects.equals(this.startYear, paymentDetails.startYear) &&
        Objects.equals(this.subscriptionId, paymentDetails.subscriptionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountHolderName, billingAddress, cardNumber, cardType, defaultPayment, expiryMonth, expiryYear, id, issueNumber, saved, startMonth, startYear, subscriptionId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentDetails {\n");
    
    sb.append("    accountHolderName: ").append(toIndentedString(accountHolderName)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    defaultPayment: ").append(toIndentedString(defaultPayment)).append("\n");
    sb.append("    expiryMonth: ").append(toIndentedString(expiryMonth)).append("\n");
    sb.append("    expiryYear: ").append(toIndentedString(expiryYear)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    issueNumber: ").append(toIndentedString(issueNumber)).append("\n");
    sb.append("    saved: ").append(toIndentedString(saved)).append("\n");
    sb.append("    startMonth: ").append(toIndentedString(startMonth)).append("\n");
    sb.append("    startYear: ").append(toIndentedString(startYear)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

