/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Store finder search page
 */
@ApiModel(description = "Representation of a Store finder search page")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class StoreFinderSearchPage {
  @SerializedName("boundEastLongitude")
  private Double boundEastLongitude = null;

  @SerializedName("boundNorthLatitude")
  private Double boundNorthLatitude = null;

  @SerializedName("boundSouthLatitude")
  private Double boundSouthLatitude = null;

  @SerializedName("boundWestLongitude")
  private Double boundWestLongitude = null;

  @SerializedName("locationText")
  private String locationText = null;

  @SerializedName("pagination")
  private DeprecatedPagination pagination = null;

  @SerializedName("sorts")
  private List<Sort> sorts = null;

  @SerializedName("sourceLatitude")
  private Double sourceLatitude = null;

  @SerializedName("sourceLongitude")
  private Double sourceLongitude = null;

  @SerializedName("stores")
  private List<PointOfService> stores = null;

  public StoreFinderSearchPage boundEastLongitude(Double boundEastLongitude) {
    this.boundEastLongitude = boundEastLongitude;
    return this;
  }

   /**
   * Bound east longitude
   * @return boundEastLongitude
  **/
  @ApiModelProperty(value = "Bound east longitude")
  public Double getBoundEastLongitude() {
    return boundEastLongitude;
  }

  public void setBoundEastLongitude(Double boundEastLongitude) {
    this.boundEastLongitude = boundEastLongitude;
  }

  public StoreFinderSearchPage boundNorthLatitude(Double boundNorthLatitude) {
    this.boundNorthLatitude = boundNorthLatitude;
    return this;
  }

   /**
   * Bound north latitude
   * @return boundNorthLatitude
  **/
  @ApiModelProperty(value = "Bound north latitude")
  public Double getBoundNorthLatitude() {
    return boundNorthLatitude;
  }

  public void setBoundNorthLatitude(Double boundNorthLatitude) {
    this.boundNorthLatitude = boundNorthLatitude;
  }

  public StoreFinderSearchPage boundSouthLatitude(Double boundSouthLatitude) {
    this.boundSouthLatitude = boundSouthLatitude;
    return this;
  }

   /**
   * Bound south latitude
   * @return boundSouthLatitude
  **/
  @ApiModelProperty(value = "Bound south latitude")
  public Double getBoundSouthLatitude() {
    return boundSouthLatitude;
  }

  public void setBoundSouthLatitude(Double boundSouthLatitude) {
    this.boundSouthLatitude = boundSouthLatitude;
  }

  public StoreFinderSearchPage boundWestLongitude(Double boundWestLongitude) {
    this.boundWestLongitude = boundWestLongitude;
    return this;
  }

   /**
   * Bound west longitude
   * @return boundWestLongitude
  **/
  @ApiModelProperty(value = "Bound west longitude")
  public Double getBoundWestLongitude() {
    return boundWestLongitude;
  }

  public void setBoundWestLongitude(Double boundWestLongitude) {
    this.boundWestLongitude = boundWestLongitude;
  }

  public StoreFinderSearchPage locationText(String locationText) {
    this.locationText = locationText;
    return this;
  }

   /**
   * Location text
   * @return locationText
  **/
  @ApiModelProperty(value = "Location text")
  public String getLocationText() {
    return locationText;
  }

  public void setLocationText(String locationText) {
    this.locationText = locationText;
  }

  public StoreFinderSearchPage pagination(DeprecatedPagination pagination) {
    this.pagination = pagination;
    return this;
  }

   /**
   * Pagination
   * @return pagination
  **/
  @ApiModelProperty(value = "Pagination")
  public DeprecatedPagination getPagination() {
    return pagination;
  }

  public void setPagination(DeprecatedPagination pagination) {
    this.pagination = pagination;
  }

  public StoreFinderSearchPage sorts(List<Sort> sorts) {
    this.sorts = sorts;
    return this;
  }

  public StoreFinderSearchPage addSortsItem(Sort sortsItem) {
    if (this.sorts == null) {
      this.sorts = new ArrayList<Sort>();
    }
    this.sorts.add(sortsItem);
    return this;
  }

   /**
   * List of sortings
   * @return sorts
  **/
  @ApiModelProperty(value = "List of sortings")
  public List<Sort> getSorts() {
    return sorts;
  }

  public void setSorts(List<Sort> sorts) {
    this.sorts = sorts;
  }

  public StoreFinderSearchPage sourceLatitude(Double sourceLatitude) {
    this.sourceLatitude = sourceLatitude;
    return this;
  }

   /**
   * Source latitude
   * @return sourceLatitude
  **/
  @ApiModelProperty(value = "Source latitude")
  public Double getSourceLatitude() {
    return sourceLatitude;
  }

  public void setSourceLatitude(Double sourceLatitude) {
    this.sourceLatitude = sourceLatitude;
  }

  public StoreFinderSearchPage sourceLongitude(Double sourceLongitude) {
    this.sourceLongitude = sourceLongitude;
    return this;
  }

   /**
   * Source longitude
   * @return sourceLongitude
  **/
  @ApiModelProperty(value = "Source longitude")
  public Double getSourceLongitude() {
    return sourceLongitude;
  }

  public void setSourceLongitude(Double sourceLongitude) {
    this.sourceLongitude = sourceLongitude;
  }

  public StoreFinderSearchPage stores(List<PointOfService> stores) {
    this.stores = stores;
    return this;
  }

  public StoreFinderSearchPage addStoresItem(PointOfService storesItem) {
    if (this.stores == null) {
      this.stores = new ArrayList<PointOfService>();
    }
    this.stores.add(storesItem);
    return this;
  }

   /**
   * List of stores
   * @return stores
  **/
  @ApiModelProperty(value = "List of stores")
  public List<PointOfService> getStores() {
    return stores;
  }

  public void setStores(List<PointOfService> stores) {
    this.stores = stores;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoreFinderSearchPage storeFinderSearchPage = (StoreFinderSearchPage) o;
    return Objects.equals(this.boundEastLongitude, storeFinderSearchPage.boundEastLongitude) &&
        Objects.equals(this.boundNorthLatitude, storeFinderSearchPage.boundNorthLatitude) &&
        Objects.equals(this.boundSouthLatitude, storeFinderSearchPage.boundSouthLatitude) &&
        Objects.equals(this.boundWestLongitude, storeFinderSearchPage.boundWestLongitude) &&
        Objects.equals(this.locationText, storeFinderSearchPage.locationText) &&
        Objects.equals(this.pagination, storeFinderSearchPage.pagination) &&
        Objects.equals(this.sorts, storeFinderSearchPage.sorts) &&
        Objects.equals(this.sourceLatitude, storeFinderSearchPage.sourceLatitude) &&
        Objects.equals(this.sourceLongitude, storeFinderSearchPage.sourceLongitude) &&
        Objects.equals(this.stores, storeFinderSearchPage.stores);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boundEastLongitude, boundNorthLatitude, boundSouthLatitude, boundWestLongitude, locationText, pagination, sorts, sourceLatitude, sourceLongitude, stores);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoreFinderSearchPage {\n");
    
    sb.append("    boundEastLongitude: ").append(toIndentedString(boundEastLongitude)).append("\n");
    sb.append("    boundNorthLatitude: ").append(toIndentedString(boundNorthLatitude)).append("\n");
    sb.append("    boundSouthLatitude: ").append(toIndentedString(boundSouthLatitude)).append("\n");
    sb.append("    boundWestLongitude: ").append(toIndentedString(boundWestLongitude)).append("\n");
    sb.append("    locationText: ").append(toIndentedString(locationText)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    sorts: ").append(toIndentedString(sorts)).append("\n");
    sb.append("    sourceLatitude: ").append(toIndentedString(sourceLatitude)).append("\n");
    sb.append("    sourceLongitude: ").append(toIndentedString(sourceLongitude)).append("\n");
    sb.append("    stores: ").append(toIndentedString(stores)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

