/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Variant Option
 */
@ApiModel(description = "Representation of a Variant Option")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class VariantOption {
  @SerializedName("code")
  private String code = null;

  @SerializedName("priceData")
  private Price priceData = null;

  @SerializedName("stock")
  private Stock stock = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("variantOptionQualifiers")
  private List<VariantOptionQualifier> variantOptionQualifiers = null;

  public VariantOption code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code of the variant option
   * @return code
  **/
  @ApiModelProperty(value = "Code of the variant option")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public VariantOption priceData(Price priceData) {
    this.priceData = priceData;
    return this;
  }

   /**
   * Price data information of the variant option
   * @return priceData
  **/
  @ApiModelProperty(value = "Price data information of the variant option")
  public Price getPriceData() {
    return priceData;
  }

  public void setPriceData(Price priceData) {
    this.priceData = priceData;
  }

  public VariantOption stock(Stock stock) {
    this.stock = stock;
    return this;
  }

   /**
   * Stock value of the variant option
   * @return stock
  **/
  @ApiModelProperty(value = "Stock value of the variant option")
  public Stock getStock() {
    return stock;
  }

  public void setStock(Stock stock) {
    this.stock = stock;
  }

  public VariantOption url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url address of the variant option
   * @return url
  **/
  @ApiModelProperty(value = "Url address of the variant option")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public VariantOption variantOptionQualifiers(List<VariantOptionQualifier> variantOptionQualifiers) {
    this.variantOptionQualifiers = variantOptionQualifiers;
    return this;
  }

  public VariantOption addVariantOptionQualifiersItem(VariantOptionQualifier variantOptionQualifiersItem) {
    if (this.variantOptionQualifiers == null) {
      this.variantOptionQualifiers = new ArrayList<VariantOptionQualifier>();
    }
    this.variantOptionQualifiers.add(variantOptionQualifiersItem);
    return this;
  }

   /**
   * List of variant option qualifiers
   * @return variantOptionQualifiers
  **/
  @ApiModelProperty(value = "List of variant option qualifiers")
  public List<VariantOptionQualifier> getVariantOptionQualifiers() {
    return variantOptionQualifiers;
  }

  public void setVariantOptionQualifiers(List<VariantOptionQualifier> variantOptionQualifiers) {
    this.variantOptionQualifiers = variantOptionQualifiers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VariantOption variantOption = (VariantOption) o;
    return Objects.equals(this.code, variantOption.code) &&
        Objects.equals(this.priceData, variantOption.priceData) &&
        Objects.equals(this.stock, variantOption.stock) &&
        Objects.equals(this.url, variantOption.url) &&
        Objects.equals(this.variantOptionQualifiers, variantOption.variantOptionQualifiers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, priceData, stock, url, variantOptionQualifiers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VariantOption {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    priceData: ").append(toIndentedString(priceData)).append("\n");
    sb.append("    stock: ").append(toIndentedString(stock)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    variantOptionQualifiers: ").append(toIndentedString(variantOptionQualifiers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

