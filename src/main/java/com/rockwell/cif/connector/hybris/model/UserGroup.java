/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of an User Group
 */
@ApiModel(description = "Representation of an User Group")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class UserGroup {
  @SerializedName("members")
  private List<Principal> members = null;

  @SerializedName("membersCount")
  private Integer membersCount = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("subGroups")
  private List<UserGroup> subGroups = null;

  @SerializedName("uid")
  private String uid = null;

  public UserGroup members(List<Principal> members) {
    this.members = members;
    return this;
  }

  public UserGroup addMembersItem(Principal membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<Principal>();
    }
    this.members.add(membersItem);
    return this;
  }

   /**
   * List of members
   * @return members
  **/
  @ApiModelProperty(value = "List of members")
  public List<Principal> getMembers() {
    return members;
  }

  public void setMembers(List<Principal> members) {
    this.members = members;
  }

  public UserGroup membersCount(Integer membersCount) {
    this.membersCount = membersCount;
    return this;
  }

   /**
   * Number of members
   * @return membersCount
  **/
  @ApiModelProperty(value = "Number of members")
  public Integer getMembersCount() {
    return membersCount;
  }

  public void setMembersCount(Integer membersCount) {
    this.membersCount = membersCount;
  }

  public UserGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the user
   * @return name
  **/
  @ApiModelProperty(value = "Name of the user")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UserGroup subGroups(List<UserGroup> subGroups) {
    this.subGroups = subGroups;
    return this;
  }

  public UserGroup addSubGroupsItem(UserGroup subGroupsItem) {
    if (this.subGroups == null) {
      this.subGroups = new ArrayList<UserGroup>();
    }
    this.subGroups.add(subGroupsItem);
    return this;
  }

   /**
   * List of subgroups
   * @return subGroups
  **/
  @ApiModelProperty(value = "List of subgroups")
  public List<UserGroup> getSubGroups() {
    return subGroups;
  }

  public void setSubGroups(List<UserGroup> subGroups) {
    this.subGroups = subGroups;
  }

  public UserGroup uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Unique user identifier
   * @return uid
  **/
  @ApiModelProperty(value = "Unique user identifier")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserGroup userGroup = (UserGroup) o;
    return Objects.equals(this.members, userGroup.members) &&
        Objects.equals(this.membersCount, userGroup.membersCount) &&
        Objects.equals(this.name, userGroup.name) &&
        Objects.equals(this.subGroups, userGroup.subGroups) &&
        Objects.equals(this.uid, userGroup.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(members, membersCount, name, subGroups, uid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserGroup {\n");
    
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    membersCount: ").append(toIndentedString(membersCount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subGroups: ").append(toIndentedString(subGroups)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

