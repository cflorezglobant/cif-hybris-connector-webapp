/*
 * Commerce Webservices v2
 * These services manage all of the common commerce functionality, and also include customizations from installed AddOns.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockwell.cif.connector.hybris.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Representation of a Catalog Version
 */
@ApiModel(description = "Representation of a Catalog Version")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-23T22:16:40.723Z")



public class CatalogVersion {
  @SerializedName("categories")
  private List<CategoryHierarchy> categories = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("lastModified")
  private OffsetDateTime lastModified = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("url")
  private String url = null;

  public CatalogVersion categories(List<CategoryHierarchy> categories) {
    this.categories = categories;
    return this;
  }

  public CatalogVersion addCategoriesItem(CategoryHierarchy categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<CategoryHierarchy>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * List of category hierarchies
   * @return categories
  **/
  @ApiModelProperty(value = "List of category hierarchies")
  public List<CategoryHierarchy> getCategories() {
    return categories;
  }

  public void setCategories(List<CategoryHierarchy> categories) {
    this.categories = categories;
  }

  public CatalogVersion id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of abstract catalog item
   * @return id
  **/
  @ApiModelProperty(value = "Identifier of abstract catalog item")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CatalogVersion lastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
    return this;
  }

   /**
   * Date of last modification
   * @return lastModified
  **/
  @ApiModelProperty(value = "Date of last modification")
  public OffsetDateTime getLastModified() {
    return lastModified;
  }

  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }

  public CatalogVersion name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of abstract catalog item
   * @return name
  **/
  @ApiModelProperty(value = "Name of abstract catalog item")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CatalogVersion url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url address of abstract catalog item
   * @return url
  **/
  @ApiModelProperty(value = "Url address of abstract catalog item")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogVersion catalogVersion = (CatalogVersion) o;
    return Objects.equals(this.categories, catalogVersion.categories) &&
        Objects.equals(this.id, catalogVersion.id) &&
        Objects.equals(this.lastModified, catalogVersion.lastModified) &&
        Objects.equals(this.name, catalogVersion.name) &&
        Objects.equals(this.url, catalogVersion.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categories, id, lastModified, name, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogVersion {\n");
    
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

