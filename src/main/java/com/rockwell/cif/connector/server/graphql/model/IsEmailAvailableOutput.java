/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("IsEmailAvailableOutput")
public class IsEmailAvailableOutput  {

	public IsEmailAvailableOutput(){
		// No action
	}

	@GraphQLScalar(fieldName = "is_email_available", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean is_email_available;



	public void setIs_email_available(Boolean is_email_available) {
		this.is_email_available = is_email_available;
	}

	public Boolean getIs_email_available() {
		return is_email_available;
	}

    public String toString() {
        return "IsEmailAvailableOutput {"
				+ "is_email_available: " + is_email_available
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Is_email_available("is_email_available");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Boolean is_email_available;


		public Builder withIs_email_available(Boolean is_email_available) {
			this.is_email_available = is_email_available;
			return this;
		}

		public IsEmailAvailableOutput build() {
			IsEmailAvailableOutput _object = new IsEmailAvailableOutput();
			_object.setIs_email_available(is_email_available);
			return _object;
		}
	}
}
