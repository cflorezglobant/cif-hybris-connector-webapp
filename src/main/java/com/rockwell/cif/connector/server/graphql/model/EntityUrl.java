/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("EntityUrl")
public class EntityUrl  {

	public EntityUrl(){
		// No action
	}

	@GraphQLScalar(fieldName = "canonical_url", graphQLTypeName = "String", javaClass = String.class)
	String canonical_url;


	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer id;


	@GraphQLScalar(fieldName = "redirectCode", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer redirectCode;


	@GraphQLScalar(fieldName = "relative_url", graphQLTypeName = "String", javaClass = String.class)
	String relative_url;


	@GraphQLScalar(fieldName = "type", graphQLTypeName = "UrlRewriteEntityTypeEnum", javaClass = UrlRewriteEntityTypeEnum.class)
	UrlRewriteEntityTypeEnum type;



	public void setCanonical_url(String canonical_url) {
		this.canonical_url = canonical_url;
	}

	public String getCanonical_url() {
		return canonical_url;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setRedirectCode(Integer redirectCode) {
		this.redirectCode = redirectCode;
	}

	public Integer getRedirectCode() {
		return redirectCode;
	}

	public void setRelative_url(String relative_url) {
		this.relative_url = relative_url;
	}

	public String getRelative_url() {
		return relative_url;
	}

	public void setType(UrlRewriteEntityTypeEnum type) {
		this.type = type;
	}

	public UrlRewriteEntityTypeEnum getType() {
		return type;
	}

    public String toString() {
        return "EntityUrl {"
				+ "canonical_url: " + canonical_url
				+ ", "
				+ "id: " + id
				+ ", "
				+ "redirectCode: " + redirectCode
				+ ", "
				+ "relative_url: " + relative_url
				+ ", "
				+ "type: " + type
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Canonical_url("canonical_url"),
		Id("id"),
		RedirectCode("redirectCode"),
		Relative_url("relative_url"),
		Type("type");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String canonical_url;
		private Integer id;
		private Integer redirectCode;
		private String relative_url;
		private UrlRewriteEntityTypeEnum type;


		public Builder withCanonical_url(String canonical_url) {
			this.canonical_url = canonical_url;
			return this;
		}
		public Builder withId(Integer id) {
			this.id = id;
			return this;
		}
		public Builder withRedirectCode(Integer redirectCode) {
			this.redirectCode = redirectCode;
			return this;
		}
		public Builder withRelative_url(String relative_url) {
			this.relative_url = relative_url;
			return this;
		}
		public Builder withType(UrlRewriteEntityTypeEnum type) {
			this.type = type;
			return this;
		}

		public EntityUrl build() {
			EntityUrl _object = new EntityUrl();
			_object.setCanonical_url(canonical_url);
			_object.setId(id);
			_object.setRedirectCode(redirectCode);
			_object.setRelative_url(relative_url);
			_object.setType(type);
			return _object;
		}
	}
}
