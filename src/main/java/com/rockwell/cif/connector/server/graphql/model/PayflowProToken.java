/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("PayflowProToken")
public class PayflowProToken  {

	public PayflowProToken(){
		// No action
	}

	@GraphQLScalar(fieldName = "response_message", graphQLTypeName = "String", javaClass = String.class)
	String response_message;


	@GraphQLScalar(fieldName = "result", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer result;


	@GraphQLScalar(fieldName = "result_code", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer result_code;


	@GraphQLScalar(fieldName = "secure_token", graphQLTypeName = "String", javaClass = String.class)
	String secure_token;


	@GraphQLScalar(fieldName = "secure_token_id", graphQLTypeName = "String", javaClass = String.class)
	String secure_token_id;



	public void setResponse_message(String response_message) {
		this.response_message = response_message;
	}

	public String getResponse_message() {
		return response_message;
	}

	public void setResult(Integer result) {
		this.result = result;
	}

	public Integer getResult() {
		return result;
	}

	public void setResult_code(Integer result_code) {
		this.result_code = result_code;
	}

	public Integer getResult_code() {
		return result_code;
	}

	public void setSecure_token(String secure_token) {
		this.secure_token = secure_token;
	}

	public String getSecure_token() {
		return secure_token;
	}

	public void setSecure_token_id(String secure_token_id) {
		this.secure_token_id = secure_token_id;
	}

	public String getSecure_token_id() {
		return secure_token_id;
	}

    public String toString() {
        return "PayflowProToken {"
				+ "response_message: " + response_message
				+ ", "
				+ "result: " + result
				+ ", "
				+ "result_code: " + result_code
				+ ", "
				+ "secure_token: " + secure_token
				+ ", "
				+ "secure_token_id: " + secure_token_id
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Response_message("response_message"),
		Result("result"),
		Result_code("result_code"),
		Secure_token("secure_token"),
		Secure_token_id("secure_token_id");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String response_message;
		private Integer result;
		private Integer result_code;
		private String secure_token;
		private String secure_token_id;


		public Builder withResponse_message(String response_message) {
			this.response_message = response_message;
			return this;
		}
		public Builder withResult(Integer result) {
			this.result = result;
			return this;
		}
		public Builder withResult_code(Integer result_code) {
			this.result_code = result_code;
			return this;
		}
		public Builder withSecure_token(String secure_token) {
			this.secure_token = secure_token;
			return this;
		}
		public Builder withSecure_token_id(String secure_token_id) {
			this.secure_token_id = secure_token_id;
			return this;
		}

		public PayflowProToken build() {
			PayflowProToken _object = new PayflowProToken();
			_object.setResponse_message(response_message);
			_object.setResult(result);
			_object.setResult_code(result_code);
			_object.setSecure_token(secure_token);
			_object.setSecure_token_id(secure_token_id);
			return _object;
		}
	}
}
