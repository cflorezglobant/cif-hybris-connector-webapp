/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.annotation.GraphQLInterfaceType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInterfaceType("CartItemInterface")
public interface CartItemInterface  {

	@GraphQLScalar(fieldName = "id", graphQLTypeName = "String", javaClass = String.class)
	public void setId(String id);

	@GraphQLScalar(fieldName = "id", graphQLTypeName = "String", javaClass = String.class)
	public String getId();

	@GraphQLNonScalar(fieldName = "prices", graphQLTypeName = "CartItemPrices", javaClass = CartItemPrices.class)
	public void setPrices(CartItemPrices prices);

	@GraphQLNonScalar(fieldName = "prices", graphQLTypeName = "CartItemPrices", javaClass = CartItemPrices.class)
	public CartItemPrices getPrices();

	@GraphQLNonScalar(fieldName = "product", graphQLTypeName = "ProductInterface", javaClass = ProductInterface.class)
	public void setProduct(ProductInterface product);

	@GraphQLNonScalar(fieldName = "product", graphQLTypeName = "ProductInterface", javaClass = ProductInterface.class)
	public ProductInterface getProduct();

	@GraphQLScalar(fieldName = "quantity", graphQLTypeName = "Float", javaClass = Double.class)
	public void setQuantity(Double quantity);

	@GraphQLScalar(fieldName = "quantity", graphQLTypeName = "Float", javaClass = Double.class)
	public Double getQuantity();
}
