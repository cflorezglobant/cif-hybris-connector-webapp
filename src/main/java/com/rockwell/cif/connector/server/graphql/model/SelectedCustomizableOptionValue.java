/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("SelectedCustomizableOptionValue")
public class SelectedCustomizableOptionValue  {

	public SelectedCustomizableOptionValue(){
		// No action
	}

	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer id;


	@GraphQLScalar(fieldName = "label", graphQLTypeName = "String", javaClass = String.class)
	String label;


	@GraphQLNonScalar(fieldName = "price", graphQLTypeName = "CartItemSelectedOptionValuePrice", javaClass = CartItemSelectedOptionValuePrice.class)
	CartItemSelectedOptionValuePrice price;


	@GraphQLScalar(fieldName = "value", graphQLTypeName = "String", javaClass = String.class)
	String value;



	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public String getLabel() {
		return label;
	}

	public void setPrice(CartItemSelectedOptionValuePrice price) {
		this.price = price;
	}

	public CartItemSelectedOptionValuePrice getPrice() {
		return price;
	}

	public void setValue(String value) {
		this.value = value;
	}

	public String getValue() {
		return value;
	}

    public String toString() {
        return "SelectedCustomizableOptionValue {"
				+ "id: " + id
				+ ", "
				+ "label: " + label
				+ ", "
				+ "price: " + price
				+ ", "
				+ "value: " + value
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Id("id"),
		Label("label"),
		Price("price"),
		Value("value");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Integer id;
		private String label;
		private CartItemSelectedOptionValuePrice price;
		private String value;


		public Builder withId(Integer id) {
			this.id = id;
			return this;
		}
		public Builder withLabel(String label) {
			this.label = label;
			return this;
		}
		public Builder withPrice(CartItemSelectedOptionValuePrice price) {
			this.price = price;
			return this;
		}
		public Builder withValue(String value) {
			this.value = value;
			return this;
		}

		public SelectedCustomizableOptionValue build() {
			SelectedCustomizableOptionValue _object = new SelectedCustomizableOptionValue();
			_object.setId(id);
			_object.setLabel(label);
			_object.setPrice(price);
			_object.setValue(value);
			return _object;
		}
	}
}
