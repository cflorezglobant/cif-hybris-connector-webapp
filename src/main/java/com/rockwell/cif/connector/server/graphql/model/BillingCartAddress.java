/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("BillingCartAddress")
public class BillingCartAddress implements CartAddressInterface {

	public BillingCartAddress(){
		// No action
	}

	@GraphQLScalar(fieldName = "city", graphQLTypeName = "String", javaClass = String.class)
	String city;


	@GraphQLScalar(fieldName = "company", graphQLTypeName = "String", javaClass = String.class)
	String company;


	@GraphQLNonScalar(fieldName = "country", graphQLTypeName = "CartAddressCountry", javaClass = CartAddressCountry.class)
	CartAddressCountry country;


	@GraphQLScalar(fieldName = "customer_notes", graphQLTypeName = "String", javaClass = String.class)
	String customer_notes;


	@GraphQLScalar(fieldName = "firstname", graphQLTypeName = "String", javaClass = String.class)
	String firstname;


	@GraphQLScalar(fieldName = "lastname", graphQLTypeName = "String", javaClass = String.class)
	String lastname;


	@GraphQLScalar(fieldName = "postcode", graphQLTypeName = "String", javaClass = String.class)
	String postcode;


	@GraphQLNonScalar(fieldName = "region", graphQLTypeName = "CartAddressRegion", javaClass = CartAddressRegion.class)
	CartAddressRegion region;


	@GraphQLScalar(fieldName = "street", graphQLTypeName = "String", javaClass = String.class)
	List<String> street;


	@GraphQLScalar(fieldName = "telephone", graphQLTypeName = "String", javaClass = String.class)
	String telephone;



	public void setCity(String city) {
		this.city = city;
	}

	public String getCity() {
		return city;
	}

	public void setCompany(String company) {
		this.company = company;
	}

	public String getCompany() {
		return company;
	}

	public void setCountry(CartAddressCountry country) {
		this.country = country;
	}

	public CartAddressCountry getCountry() {
		return country;
	}

	public void setCustomer_notes(String customer_notes) {
		this.customer_notes = customer_notes;
	}

	public String getCustomer_notes() {
		return customer_notes;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	public String getFirstname() {
		return firstname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	public String getLastname() {
		return lastname;
	}

	public void setPostcode(String postcode) {
		this.postcode = postcode;
	}

	public String getPostcode() {
		return postcode;
	}

	public void setRegion(CartAddressRegion region) {
		this.region = region;
	}

	public CartAddressRegion getRegion() {
		return region;
	}

	public void setStreet(List<String> street) {
		this.street = street;
	}

	public List<String> getStreet() {
		return street;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	public String getTelephone() {
		return telephone;
	}

    public String toString() {
        return "BillingCartAddress {"
				+ "city: " + city
				+ ", "
				+ "company: " + company
				+ ", "
				+ "country: " + country
				+ ", "
				+ "customer_notes: " + customer_notes
				+ ", "
				+ "firstname: " + firstname
				+ ", "
				+ "lastname: " + lastname
				+ ", "
				+ "postcode: " + postcode
				+ ", "
				+ "region: " + region
				+ ", "
				+ "street: " + street
				+ ", "
				+ "telephone: " + telephone
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		City("city"),
		Company("company"),
		Country("country"),
		Customer_notes("customer_notes"),
		Firstname("firstname"),
		Lastname("lastname"),
		Postcode("postcode"),
		Region("region"),
		Street("street"),
		Telephone("telephone");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String city;
		private String company;
		private CartAddressCountry country;
		private String customer_notes;
		private String firstname;
		private String lastname;
		private String postcode;
		private CartAddressRegion region;
		private List<String> street;
		private String telephone;


		public Builder withCity(String city) {
			this.city = city;
			return this;
		}
		public Builder withCompany(String company) {
			this.company = company;
			return this;
		}
		public Builder withCountry(CartAddressCountry country) {
			this.country = country;
			return this;
		}
		public Builder withCustomer_notes(String customer_notes) {
			this.customer_notes = customer_notes;
			return this;
		}
		public Builder withFirstname(String firstname) {
			this.firstname = firstname;
			return this;
		}
		public Builder withLastname(String lastname) {
			this.lastname = lastname;
			return this;
		}
		public Builder withPostcode(String postcode) {
			this.postcode = postcode;
			return this;
		}
		public Builder withRegion(CartAddressRegion region) {
			this.region = region;
			return this;
		}
		public Builder withStreet(List<String> street) {
			this.street = street;
			return this;
		}
		public Builder withTelephone(String telephone) {
			this.telephone = telephone;
			return this;
		}

		public BillingCartAddress build() {
			BillingCartAddress _object = new BillingCartAddress();
			_object.setCity(city);
			_object.setCompany(company);
			_object.setCountry(country);
			_object.setCustomer_notes(customer_notes);
			_object.setFirstname(firstname);
			_object.setLastname(lastname);
			_object.setPostcode(postcode);
			_object.setRegion(region);
			_object.setStreet(street);
			_object.setTelephone(telephone);
			return _object;
		}
	}
}
