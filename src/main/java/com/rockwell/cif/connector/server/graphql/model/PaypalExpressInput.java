/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("PaypalExpressInput")
public class PaypalExpressInput  {

	public PaypalExpressInput(){
		// No action
	}

	@GraphQLScalar(fieldName = "payer_id", graphQLTypeName = "String", javaClass = String.class)
	String payer_id;


	@GraphQLScalar(fieldName = "token", graphQLTypeName = "String", javaClass = String.class)
	String token;



	public void setPayer_id(String payer_id) {
		this.payer_id = payer_id;
	}

	public String getPayer_id() {
		return payer_id;
	}

	public void setToken(String token) {
		this.token = token;
	}

	public String getToken() {
		return token;
	}

    public String toString() {
        return "PaypalExpressInput {"
				+ "payer_id: " + payer_id
				+ ", "
				+ "token: " + token
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Payer_id("payer_id"),
		Token("token");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String payer_id;
		private String token;


		public Builder withPayer_id(String payer_id) {
			this.payer_id = payer_id;
			return this;
		}
		public Builder withToken(String token) {
			this.token = token;
			return this;
		}

		public PaypalExpressInput build() {
			PaypalExpressInput _object = new PaypalExpressInput();
			_object.setPayer_id(payer_id);
			_object.setToken(token);
			return _object;
		}
	}
}
