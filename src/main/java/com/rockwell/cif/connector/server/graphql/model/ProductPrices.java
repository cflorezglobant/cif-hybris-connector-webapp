/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("ProductPrices")
public class ProductPrices  {

	public ProductPrices(){
		// No action
	}

	public ProductPrices(Price maximalPrice, Price minimalPrice, Price regularPrice) {
		this.maximalPrice = maximalPrice;
		this.minimalPrice = minimalPrice;
		this.regularPrice = regularPrice;
	}

	@GraphQLNonScalar(fieldName = "maximalPrice", graphQLTypeName = "Price", javaClass = Price.class)
	Price maximalPrice;


	@GraphQLNonScalar(fieldName = "minimalPrice", graphQLTypeName = "Price", javaClass = Price.class)
	Price minimalPrice;


	@GraphQLNonScalar(fieldName = "regularPrice", graphQLTypeName = "Price", javaClass = Price.class)
	Price regularPrice;



	public void setMaximalPrice(Price maximalPrice) {
		this.maximalPrice = maximalPrice;
	}

	public Price getMaximalPrice() {
		return maximalPrice;
	}

	public void setMinimalPrice(Price minimalPrice) {
		this.minimalPrice = minimalPrice;
	}

	public Price getMinimalPrice() {
		return minimalPrice;
	}

	public void setRegularPrice(Price regularPrice) {
		this.regularPrice = regularPrice;
	}

	public Price getRegularPrice() {
		return regularPrice;
	}

    public String toString() {
        return "ProductPrices {"
				+ "maximalPrice: " + maximalPrice
				+ ", "
				+ "minimalPrice: " + minimalPrice
				+ ", "
				+ "regularPrice: " + regularPrice
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		MaximalPrice("maximalPrice"),
		MinimalPrice("minimalPrice"),
		RegularPrice("regularPrice");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Price maximalPrice;
		private Price minimalPrice;
		private Price regularPrice;


		public Builder withMaximalPrice(Price maximalPrice) {
			this.maximalPrice = maximalPrice;
			return this;
		}
		public Builder withMinimalPrice(Price minimalPrice) {
			this.minimalPrice = minimalPrice;
			return this;
		}
		public Builder withRegularPrice(Price regularPrice) {
			this.regularPrice = regularPrice;
			return this;
		}

		public ProductPrices build() {
			ProductPrices _object = new ProductPrices();
			_object.setMaximalPrice(maximalPrice);
			_object.setMinimalPrice(minimalPrice);
			_object.setRegularPrice(regularPrice);
			return _object;
		}
	}
}
