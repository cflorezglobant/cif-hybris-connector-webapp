/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Aggregation")
public class Aggregation  {

	public Aggregation(){
		// No action
	}

	@GraphQLScalar(fieldName = "attribute_code", graphQLTypeName = "String", javaClass = String.class)
	String attribute_code;


	@GraphQLScalar(fieldName = "count", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer count;


	@GraphQLScalar(fieldName = "label", graphQLTypeName = "String", javaClass = String.class)
	String label;


	@GraphQLNonScalar(fieldName = "options", graphQLTypeName = "AggregationOption", javaClass = AggregationOption.class)
	List<AggregationOption> options;



	public void setAttribute_code(String attribute_code) {
		this.attribute_code = attribute_code;
	}

	public String getAttribute_code() {
		return attribute_code;
	}

	public void setCount(Integer count) {
		this.count = count;
	}

	public Integer getCount() {
		return count;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public String getLabel() {
		return label;
	}

	public void setOptions(List<AggregationOption> options) {
		this.options = options;
	}

	public List<AggregationOption> getOptions() {
		return options;
	}

    public String toString() {
        return "Aggregation {"
				+ "attribute_code: " + attribute_code
				+ ", "
				+ "count: " + count
				+ ", "
				+ "label: " + label
				+ ", "
				+ "options: " + options
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Attribute_code("attribute_code"),
		Count("count"),
		Label("label"),
		Options("options");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String attribute_code;
		private Integer count;
		private String label;
		private List<AggregationOption> options;


		public Builder withAttribute_code(String attribute_code) {
			this.attribute_code = attribute_code;
			return this;
		}
		public Builder withCount(Integer count) {
			this.count = count;
			return this;
		}
		public Builder withLabel(String label) {
			this.label = label;
			return this;
		}
		public Builder withOptions(List<AggregationOption> options) {
			this.options = options;
			return this;
		}

		public Aggregation build() {
			Aggregation _object = new Aggregation();
			_object.setAttribute_code(attribute_code);
			_object.setCount(count);
			_object.setLabel(label);
			_object.setOptions(options);
			return _object;
		}
	}
}
