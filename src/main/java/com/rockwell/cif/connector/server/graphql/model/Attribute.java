/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Attribute")
public class Attribute  {

	public Attribute(){
		// No action
	}

	@GraphQLScalar(fieldName = "attribute_code", graphQLTypeName = "String", javaClass = String.class)
	String attribute_code;


	@GraphQLNonScalar(fieldName = "attribute_options", graphQLTypeName = "AttributeOption", javaClass = AttributeOption.class)
	List<AttributeOption> attribute_options;


	@GraphQLScalar(fieldName = "attribute_type", graphQLTypeName = "String", javaClass = String.class)
	String attribute_type;


	@GraphQLScalar(fieldName = "entity_type", graphQLTypeName = "String", javaClass = String.class)
	String entity_type;


	@GraphQLScalar(fieldName = "input_type", graphQLTypeName = "String", javaClass = String.class)
	String input_type;



	public void setAttribute_code(String attribute_code) {
		this.attribute_code = attribute_code;
	}

	public String getAttribute_code() {
		return attribute_code;
	}

	public void setAttribute_options(List<AttributeOption> attribute_options) {
		this.attribute_options = attribute_options;
	}

	public List<AttributeOption> getAttribute_options() {
		return attribute_options;
	}

	public void setAttribute_type(String attribute_type) {
		this.attribute_type = attribute_type;
	}

	public String getAttribute_type() {
		return attribute_type;
	}

	public void setEntity_type(String entity_type) {
		this.entity_type = entity_type;
	}

	public String getEntity_type() {
		return entity_type;
	}

	public void setInput_type(String input_type) {
		this.input_type = input_type;
	}

	public String getInput_type() {
		return input_type;
	}

    public String toString() {
        return "Attribute {"
				+ "attribute_code: " + attribute_code
				+ ", "
				+ "attribute_options: " + attribute_options
				+ ", "
				+ "attribute_type: " + attribute_type
				+ ", "
				+ "entity_type: " + entity_type
				+ ", "
				+ "input_type: " + input_type
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Attribute_code("attribute_code"),
		Attribute_options("attribute_options"),
		Attribute_type("attribute_type"),
		Entity_type("entity_type"),
		Input_type("input_type");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String attribute_code;
		private List<AttributeOption> attribute_options;
		private String attribute_type;
		private String entity_type;
		private String input_type;


		public Builder withAttribute_code(String attribute_code) {
			this.attribute_code = attribute_code;
			return this;
		}
		public Builder withAttribute_options(List<AttributeOption> attribute_options) {
			this.attribute_options = attribute_options;
			return this;
		}
		public Builder withAttribute_type(String attribute_type) {
			this.attribute_type = attribute_type;
			return this;
		}
		public Builder withEntity_type(String entity_type) {
			this.entity_type = entity_type;
			return this;
		}
		public Builder withInput_type(String input_type) {
			this.input_type = input_type;
			return this;
		}

		public Attribute build() {
			Attribute _object = new Attribute();
			_object.setAttribute_code(attribute_code);
			_object.setAttribute_options(attribute_options);
			_object.setAttribute_type(attribute_type);
			_object.setEntity_type(entity_type);
			_object.setInput_type(input_type);
			return _object;
		}
	}
}
