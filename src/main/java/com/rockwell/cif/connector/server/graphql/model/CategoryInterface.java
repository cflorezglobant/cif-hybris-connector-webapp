/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.annotation.GraphQLInterfaceType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInterfaceType("CategoryInterface")
public interface CategoryInterface  {

	@GraphQLScalar(fieldName = "available_sort_by", graphQLTypeName = "String", javaClass = String.class)
	public void setAvailable_sort_by(List<String> available_sort_by);

	@GraphQLScalar(fieldName = "available_sort_by", graphQLTypeName = "String", javaClass = String.class)
	public List<String> getAvailable_sort_by();

	@GraphQLNonScalar(fieldName = "breadcrumbs", graphQLTypeName = "Breadcrumb", javaClass = Breadcrumb.class)
	public void setBreadcrumbs(List<Breadcrumb> breadcrumbs);

	@GraphQLNonScalar(fieldName = "breadcrumbs", graphQLTypeName = "Breadcrumb", javaClass = Breadcrumb.class)
	public List<Breadcrumb> getBreadcrumbs();

	@GraphQLScalar(fieldName = "canonical_url", graphQLTypeName = "String", javaClass = String.class)
	public void setCanonical_url(String canonical_url);

	@GraphQLScalar(fieldName = "canonical_url", graphQLTypeName = "String", javaClass = String.class)
	public String getCanonical_url();

	@GraphQLScalar(fieldName = "children_count", graphQLTypeName = "String", javaClass = String.class)
	public void setChildren_count(String children_count);

	@GraphQLScalar(fieldName = "children_count", graphQLTypeName = "String", javaClass = String.class)
	public String getChildren_count();

	@GraphQLNonScalar(fieldName = "cms_block", graphQLTypeName = "CmsBlock", javaClass = CmsBlock.class)
	public void setCms_block(CmsBlock cms_block);

	@GraphQLNonScalar(fieldName = "cms_block", graphQLTypeName = "CmsBlock", javaClass = CmsBlock.class)
	public CmsBlock getCms_block();

	@GraphQLScalar(fieldName = "created_at", graphQLTypeName = "String", javaClass = String.class)
	public void setCreated_at(String created_at);

	@GraphQLScalar(fieldName = "created_at", graphQLTypeName = "String", javaClass = String.class)
	public String getCreated_at();

	@GraphQLScalar(fieldName = "custom_layout_update_file", graphQLTypeName = "String", javaClass = String.class)
	public void setCustom_layout_update_file(String custom_layout_update_file);

	@GraphQLScalar(fieldName = "custom_layout_update_file", graphQLTypeName = "String", javaClass = String.class)
	public String getCustom_layout_update_file();

	@GraphQLScalar(fieldName = "default_sort_by", graphQLTypeName = "String", javaClass = String.class)
	public void setDefault_sort_by(String default_sort_by);

	@GraphQLScalar(fieldName = "default_sort_by", graphQLTypeName = "String", javaClass = String.class)
	public String getDefault_sort_by();

	@GraphQLScalar(fieldName = "description", graphQLTypeName = "String", javaClass = String.class)
	public void setDescription(String description);

	@GraphQLScalar(fieldName = "description", graphQLTypeName = "String", javaClass = String.class)
	public String getDescription();

	@GraphQLScalar(fieldName = "display_mode", graphQLTypeName = "String", javaClass = String.class)
	public void setDisplay_mode(String display_mode);

	@GraphQLScalar(fieldName = "display_mode", graphQLTypeName = "String", javaClass = String.class)
	public String getDisplay_mode();

	@GraphQLScalar(fieldName = "filter_price_range", graphQLTypeName = "Float", javaClass = Double.class)
	public void setFilter_price_range(Double filter_price_range);

	@GraphQLScalar(fieldName = "filter_price_range", graphQLTypeName = "Float", javaClass = Double.class)
	public Double getFilter_price_range();

	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	public void setId(Integer id);

	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	public Integer getId();

	@GraphQLScalar(fieldName = "image", graphQLTypeName = "String", javaClass = String.class)
	public void setImage(String image);

	@GraphQLScalar(fieldName = "image", graphQLTypeName = "String", javaClass = String.class)
	public String getImage();

	@GraphQLScalar(fieldName = "include_in_menu", graphQLTypeName = "Int", javaClass = Integer.class)
	public void setInclude_in_menu(Integer include_in_menu);

	@GraphQLScalar(fieldName = "include_in_menu", graphQLTypeName = "Int", javaClass = Integer.class)
	public Integer getInclude_in_menu();

	@GraphQLScalar(fieldName = "is_anchor", graphQLTypeName = "Int", javaClass = Integer.class)
	public void setIs_anchor(Integer is_anchor);

	@GraphQLScalar(fieldName = "is_anchor", graphQLTypeName = "Int", javaClass = Integer.class)
	public Integer getIs_anchor();

	@GraphQLScalar(fieldName = "landing_page", graphQLTypeName = "Int", javaClass = Integer.class)
	public void setLanding_page(Integer landing_page);

	@GraphQLScalar(fieldName = "landing_page", graphQLTypeName = "Int", javaClass = Integer.class)
	public Integer getLanding_page();

	@GraphQLScalar(fieldName = "level", graphQLTypeName = "Int", javaClass = Integer.class)
	public void setLevel(Integer level);

	@GraphQLScalar(fieldName = "level", graphQLTypeName = "Int", javaClass = Integer.class)
	public Integer getLevel();

	@GraphQLScalar(fieldName = "meta_description", graphQLTypeName = "String", javaClass = String.class)
	public void setMeta_description(String meta_description);

	@GraphQLScalar(fieldName = "meta_description", graphQLTypeName = "String", javaClass = String.class)
	public String getMeta_description();

	@GraphQLScalar(fieldName = "meta_keywords", graphQLTypeName = "String", javaClass = String.class)
	public void setMeta_keywords(String meta_keywords);

	@GraphQLScalar(fieldName = "meta_keywords", graphQLTypeName = "String", javaClass = String.class)
	public String getMeta_keywords();

	@GraphQLScalar(fieldName = "meta_title", graphQLTypeName = "String", javaClass = String.class)
	public void setMeta_title(String meta_title);

	@GraphQLScalar(fieldName = "meta_title", graphQLTypeName = "String", javaClass = String.class)
	public String getMeta_title();

	@GraphQLScalar(fieldName = "name", graphQLTypeName = "String", javaClass = String.class)
	public void setName(String name);

	@GraphQLScalar(fieldName = "name", graphQLTypeName = "String", javaClass = String.class)
	public String getName();

	@GraphQLScalar(fieldName = "path", graphQLTypeName = "String", javaClass = String.class)
	public void setPath(String path);

	@GraphQLScalar(fieldName = "path", graphQLTypeName = "String", javaClass = String.class)
	public String getPath();

	@GraphQLScalar(fieldName = "path_in_store", graphQLTypeName = "String", javaClass = String.class)
	public void setPath_in_store(String path_in_store);

	@GraphQLScalar(fieldName = "path_in_store", graphQLTypeName = "String", javaClass = String.class)
	public String getPath_in_store();

	@GraphQLScalar(fieldName = "position", graphQLTypeName = "Int", javaClass = Integer.class)
	public void setPosition(Integer position);

	@GraphQLScalar(fieldName = "position", graphQLTypeName = "Int", javaClass = Integer.class)
	public Integer getPosition();

	@GraphQLScalar(fieldName = "product_count", graphQLTypeName = "Int", javaClass = Integer.class)
	public void setProduct_count(Integer product_count);

	@GraphQLScalar(fieldName = "product_count", graphQLTypeName = "Int", javaClass = Integer.class)
	public Integer getProduct_count();

	@GraphQLNonScalar(fieldName = "products", graphQLTypeName = "CategoryProducts", javaClass = CategoryProducts.class)
	public void setProducts(CategoryProducts products);

	@GraphQLNonScalar(fieldName = "products", graphQLTypeName = "CategoryProducts", javaClass = CategoryProducts.class)
	public CategoryProducts getProducts();

	@GraphQLScalar(fieldName = "updated_at", graphQLTypeName = "String", javaClass = String.class)
	public void setUpdated_at(String updated_at);

	@GraphQLScalar(fieldName = "updated_at", graphQLTypeName = "String", javaClass = String.class)
	public String getUpdated_at();

	@GraphQLScalar(fieldName = "url_key", graphQLTypeName = "String", javaClass = String.class)
	public void setUrl_key(String url_key);

	@GraphQLScalar(fieldName = "url_key", graphQLTypeName = "String", javaClass = String.class)
	public String getUrl_key();

	@GraphQLScalar(fieldName = "url_path", graphQLTypeName = "String", javaClass = String.class)
	public void setUrl_path(String url_path);

	@GraphQLScalar(fieldName = "url_path", graphQLTypeName = "String", javaClass = String.class)
	public String getUrl_path();

	@GraphQLScalar(fieldName = "url_suffix", graphQLTypeName = "String", javaClass = String.class)
	public void setUrl_suffix(String url_suffix);

	@GraphQLScalar(fieldName = "url_suffix", graphQLTypeName = "String", javaClass = String.class)
	public String getUrl_suffix();
}
