/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("BraintreeCcVaultInput")
public class BraintreeCcVaultInput  {

	public BraintreeCcVaultInput(){
		// No action
	}

	@GraphQLScalar(fieldName = "device_data", graphQLTypeName = "String", javaClass = String.class)
	String device_data;


	@GraphQLScalar(fieldName = "public_hash", graphQLTypeName = "String", javaClass = String.class)
	String public_hash;



	public void setDevice_data(String device_data) {
		this.device_data = device_data;
	}

	public String getDevice_data() {
		return device_data;
	}

	public void setPublic_hash(String public_hash) {
		this.public_hash = public_hash;
	}

	public String getPublic_hash() {
		return public_hash;
	}

    public String toString() {
        return "BraintreeCcVaultInput {"
				+ "device_data: " + device_data
				+ ", "
				+ "public_hash: " + public_hash
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Device_data("device_data"),
		Public_hash("public_hash");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String device_data;
		private String public_hash;


		public Builder withDevice_data(String device_data) {
			this.device_data = device_data;
			return this;
		}
		public Builder withPublic_hash(String public_hash) {
			this.public_hash = public_hash;
			return this;
		}

		public BraintreeCcVaultInput build() {
			BraintreeCcVaultInput _object = new BraintreeCcVaultInput();
			_object.setDevice_data(device_data);
			_object.setPublic_hash(public_hash);
			return _object;
		}
	}
}
