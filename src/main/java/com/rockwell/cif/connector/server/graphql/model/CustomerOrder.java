/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("CustomerOrder")
public class CustomerOrder  {

	public CustomerOrder(){
		// No action
	}

	@GraphQLScalar(fieldName = "created_at", graphQLTypeName = "String", javaClass = String.class)
	String created_at;


	@GraphQLScalar(fieldName = "grand_total", graphQLTypeName = "Float", javaClass = Double.class)
	Double grand_total;


	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer id;


	@GraphQLScalar(fieldName = "increment_id", graphQLTypeName = "String", javaClass = String.class)
	String increment_id;


	@GraphQLScalar(fieldName = "order_number", graphQLTypeName = "String", javaClass = String.class)
	String order_number;


	@GraphQLScalar(fieldName = "status", graphQLTypeName = "String", javaClass = String.class)
	String status;



	public void setCreated_at(String created_at) {
		this.created_at = created_at;
	}

	public String getCreated_at() {
		return created_at;
	}

	public void setGrand_total(Double grand_total) {
		this.grand_total = grand_total;
	}

	public Double getGrand_total() {
		return grand_total;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setIncrement_id(String increment_id) {
		this.increment_id = increment_id;
	}

	public String getIncrement_id() {
		return increment_id;
	}

	public void setOrder_number(String order_number) {
		this.order_number = order_number;
	}

	public String getOrder_number() {
		return order_number;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public String getStatus() {
		return status;
	}

    public String toString() {
        return "CustomerOrder {"
				+ "created_at: " + created_at
				+ ", "
				+ "grand_total: " + grand_total
				+ ", "
				+ "id: " + id
				+ ", "
				+ "increment_id: " + increment_id
				+ ", "
				+ "order_number: " + order_number
				+ ", "
				+ "status: " + status
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Created_at("created_at"),
		Grand_total("grand_total"),
		Id("id"),
		Increment_id("increment_id"),
		Order_number("order_number"),
		Status("status");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String created_at;
		private Double grand_total;
		private Integer id;
		private String increment_id;
		private String order_number;
		private String status;


		public Builder withCreated_at(String created_at) {
			this.created_at = created_at;
			return this;
		}
		public Builder withGrand_total(Double grand_total) {
			this.grand_total = grand_total;
			return this;
		}
		public Builder withId(Integer id) {
			this.id = id;
			return this;
		}
		public Builder withIncrement_id(String increment_id) {
			this.increment_id = increment_id;
			return this;
		}
		public Builder withOrder_number(String order_number) {
			this.order_number = order_number;
			return this;
		}
		public Builder withStatus(String status) {
			this.status = status;
			return this;
		}

		public CustomerOrder build() {
			CustomerOrder _object = new CustomerOrder();
			_object.setCreated_at(created_at);
			_object.setGrand_total(grand_total);
			_object.setId(id);
			_object.setIncrement_id(increment_id);
			_object.setOrder_number(order_number);
			_object.setStatus(status);
			return _object;
		}
	}
}
