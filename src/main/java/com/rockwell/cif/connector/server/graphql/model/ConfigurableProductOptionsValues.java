/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("ConfigurableProductOptionsValues")
public class ConfigurableProductOptionsValues  {

	public ConfigurableProductOptionsValues(){
		// No action
	}

	@GraphQLScalar(fieldName = "default_label", graphQLTypeName = "String", javaClass = String.class)
	String default_label;


	@GraphQLScalar(fieldName = "label", graphQLTypeName = "String", javaClass = String.class)
	String label;


	@GraphQLScalar(fieldName = "store_label", graphQLTypeName = "String", javaClass = String.class)
	String store_label;


	@GraphQLScalar(fieldName = "use_default_value", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean use_default_value;


	@GraphQLScalar(fieldName = "value_index", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer value_index;



	public void setDefault_label(String default_label) {
		this.default_label = default_label;
	}

	public String getDefault_label() {
		return default_label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public String getLabel() {
		return label;
	}

	public void setStore_label(String store_label) {
		this.store_label = store_label;
	}

	public String getStore_label() {
		return store_label;
	}

	public void setUse_default_value(Boolean use_default_value) {
		this.use_default_value = use_default_value;
	}

	public Boolean getUse_default_value() {
		return use_default_value;
	}

	public void setValue_index(Integer value_index) {
		this.value_index = value_index;
	}

	public Integer getValue_index() {
		return value_index;
	}

    public String toString() {
        return "ConfigurableProductOptionsValues {"
				+ "default_label: " + default_label
				+ ", "
				+ "label: " + label
				+ ", "
				+ "store_label: " + store_label
				+ ", "
				+ "use_default_value: " + use_default_value
				+ ", "
				+ "value_index: " + value_index
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Default_label("default_label"),
		Label("label"),
		Store_label("store_label"),
		Use_default_value("use_default_value"),
		Value_index("value_index");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String default_label;
		private String label;
		private String store_label;
		private Boolean use_default_value;
		private Integer value_index;


		public Builder withDefault_label(String default_label) {
			this.default_label = default_label;
			return this;
		}
		public Builder withLabel(String label) {
			this.label = label;
			return this;
		}
		public Builder withStore_label(String store_label) {
			this.store_label = store_label;
			return this;
		}
		public Builder withUse_default_value(Boolean use_default_value) {
			this.use_default_value = use_default_value;
			return this;
		}
		public Builder withValue_index(Integer value_index) {
			this.value_index = value_index;
			return this;
		}

		public ConfigurableProductOptionsValues build() {
			ConfigurableProductOptionsValues _object = new ConfigurableProductOptionsValues();
			_object.setDefault_label(default_label);
			_object.setLabel(label);
			_object.setStore_label(store_label);
			_object.setUse_default_value(use_default_value);
			_object.setValue_index(value_index);
			return _object;
		}
	}
}
