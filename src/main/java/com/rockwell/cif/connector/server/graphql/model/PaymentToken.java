/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("PaymentToken")
public class PaymentToken  {

	public PaymentToken(){
		// No action
	}

	@GraphQLScalar(fieldName = "details", graphQLTypeName = "String", javaClass = String.class)
	String details;


	@GraphQLScalar(fieldName = "payment_method_code", graphQLTypeName = "String", javaClass = String.class)
	String payment_method_code;


	@GraphQLScalar(fieldName = "public_hash", graphQLTypeName = "String", javaClass = String.class)
	String public_hash;


	@GraphQLScalar(fieldName = "type", graphQLTypeName = "PaymentTokenTypeEnum", javaClass = PaymentTokenTypeEnum.class)
	PaymentTokenTypeEnum type;



	public void setDetails(String details) {
		this.details = details;
	}

	public String getDetails() {
		return details;
	}

	public void setPayment_method_code(String payment_method_code) {
		this.payment_method_code = payment_method_code;
	}

	public String getPayment_method_code() {
		return payment_method_code;
	}

	public void setPublic_hash(String public_hash) {
		this.public_hash = public_hash;
	}

	public String getPublic_hash() {
		return public_hash;
	}

	public void setType(PaymentTokenTypeEnum type) {
		this.type = type;
	}

	public PaymentTokenTypeEnum getType() {
		return type;
	}

    public String toString() {
        return "PaymentToken {"
				+ "details: " + details
				+ ", "
				+ "payment_method_code: " + payment_method_code
				+ ", "
				+ "public_hash: " + public_hash
				+ ", "
				+ "type: " + type
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Details("details"),
		Payment_method_code("payment_method_code"),
		Public_hash("public_hash"),
		Type("type");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String details;
		private String payment_method_code;
		private String public_hash;
		private PaymentTokenTypeEnum type;


		public Builder withDetails(String details) {
			this.details = details;
			return this;
		}
		public Builder withPayment_method_code(String payment_method_code) {
			this.payment_method_code = payment_method_code;
			return this;
		}
		public Builder withPublic_hash(String public_hash) {
			this.public_hash = public_hash;
			return this;
		}
		public Builder withType(PaymentTokenTypeEnum type) {
			this.type = type;
			return this;
		}

		public PaymentToken build() {
			PaymentToken _object = new PaymentToken();
			_object.setDetails(details);
			_object.setPayment_method_code(payment_method_code);
			_object.setPublic_hash(public_hash);
			_object.setType(type);
			return _object;
		}
	}
}
