/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("LayerFilter")
public class LayerFilter  {

	public LayerFilter(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "filter_items", graphQLTypeName = "LayerFilterItemInterface", javaClass = LayerFilterItemInterface.class)
	List<LayerFilterItemInterface> filter_items;


	@GraphQLScalar(fieldName = "filter_items_count", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer filter_items_count;


	@GraphQLScalar(fieldName = "name", graphQLTypeName = "String", javaClass = String.class)
	String name;


	@GraphQLScalar(fieldName = "request_var", graphQLTypeName = "String", javaClass = String.class)
	String request_var;



	public void setFilter_items(List<LayerFilterItemInterface> filter_items) {
		this.filter_items = filter_items;
	}

	public List<LayerFilterItemInterface> getFilter_items() {
		return filter_items;
	}

	public void setFilter_items_count(Integer filter_items_count) {
		this.filter_items_count = filter_items_count;
	}

	public Integer getFilter_items_count() {
		return filter_items_count;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return name;
	}

	public void setRequest_var(String request_var) {
		this.request_var = request_var;
	}

	public String getRequest_var() {
		return request_var;
	}

    public String toString() {
        return "LayerFilter {"
				+ "filter_items: " + filter_items
				+ ", "
				+ "filter_items_count: " + filter_items_count
				+ ", "
				+ "name: " + name
				+ ", "
				+ "request_var: " + request_var
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Filter_items("filter_items"),
		Filter_items_count("filter_items_count"),
		Name("name"),
		Request_var("request_var");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private List<LayerFilterItemInterface> filter_items;
		private Integer filter_items_count;
		private String name;
		private String request_var;


		public Builder withFilter_items(List<LayerFilterItemInterface> filter_items) {
			this.filter_items = filter_items;
			return this;
		}
		public Builder withFilter_items_count(Integer filter_items_count) {
			this.filter_items_count = filter_items_count;
			return this;
		}
		public Builder withName(String name) {
			this.name = name;
			return this;
		}
		public Builder withRequest_var(String request_var) {
			this.request_var = request_var;
			return this;
		}

		public LayerFilter build() {
			LayerFilter _object = new LayerFilter();
			_object.setFilter_items(filter_items);
			_object.setFilter_items_count(filter_items_count);
			_object.setName(name);
			_object.setRequest_var(request_var);
			return _object;
		}
	}
}
