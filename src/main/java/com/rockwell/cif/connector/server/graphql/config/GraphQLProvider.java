/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.config;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
import static graphql.schema.idl.TypeRuntimeWiring.newTypeWiring;

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.charset.Charset;

import javax.annotation.PostConstruct;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.dataloader.DataLoader;
import org.dataloader.DataLoaderRegistry;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.Bean;
import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Component;
import org.springframework.util.FileCopyUtils;

import graphql.GraphQL;
import graphql.TypeResolutionEnvironment;
import graphql.schema.GraphQLObjectType;
import graphql.schema.GraphQLSchema;
import graphql.schema.TypeResolver;
import graphql.schema.idl.RuntimeWiring;
import graphql.schema.idl.SchemaGenerator;
import graphql.schema.idl.SchemaParser;
import graphql.schema.idl.TypeDefinitionRegistry;

import com.graphql_java_generator.server.util.BatchLoaderDelegate;

import java.lang.String;

import com.rockwell.cif.connector.server.graphql.model.AggregationOption;
import com.rockwell.cif.connector.server.graphql.model.BillingCartAddress;
import com.rockwell.cif.connector.server.graphql.model.BundleCartItem;
import com.rockwell.cif.connector.server.graphql.model.BundleProduct;
import com.rockwell.cif.connector.server.graphql.model.CategoryTree;
import com.rockwell.cif.connector.server.graphql.model.ConfigurableCartItem;
import com.rockwell.cif.connector.server.graphql.model.ConfigurableProduct;
import com.rockwell.cif.connector.server.graphql.model.CustomizableAreaOption;
import com.rockwell.cif.connector.server.graphql.model.CustomizableCheckboxOption;
import com.rockwell.cif.connector.server.graphql.model.CustomizableDateOption;
import com.rockwell.cif.connector.server.graphql.model.CustomizableDropDownOption;
import com.rockwell.cif.connector.server.graphql.model.CustomizableFieldOption;
import com.rockwell.cif.connector.server.graphql.model.CustomizableFileOption;
import com.rockwell.cif.connector.server.graphql.model.CustomizableMultipleOption;
import com.rockwell.cif.connector.server.graphql.model.CustomizableRadioOption;
import com.rockwell.cif.connector.server.graphql.model.DownloadableCartItem;
import com.rockwell.cif.connector.server.graphql.model.DownloadableProduct;
import com.rockwell.cif.connector.server.graphql.model.GroupedProduct;
import com.rockwell.cif.connector.server.graphql.model.LayerFilterItem;
import com.rockwell.cif.connector.server.graphql.model.ProductImage;
import com.rockwell.cif.connector.server.graphql.model.ProductLinks;
import com.rockwell.cif.connector.server.graphql.model.ProductVideo;
import com.rockwell.cif.connector.server.graphql.model.ShippingCartAddress;
import com.rockwell.cif.connector.server.graphql.model.SimpleCartItem;
import com.rockwell.cif.connector.server.graphql.model.SimpleProduct;
import com.rockwell.cif.connector.server.graphql.model.SwatchLayerFilterItem;
import com.rockwell.cif.connector.server.graphql.model.VirtualCartItem;
import com.rockwell.cif.connector.server.graphql.model.VirtualProduct;

/**
 * This class is responsible for providing all the GraphQL Beans to the graphql-java Spring Boot integration.
 * <BR/><BR/>
 * Based on the https://www.graphql-java.com/tutorials/getting-started-with-spring-boot/ tutorial
 * 
 * @author etienne-sf
 */
@Component
public class GraphQLProvider {

	/** The logger for this instance */
	protected Logger logger = LoggerFactory.getLogger(GraphQLProvider.class);

	@Autowired
	ApplicationContext applicationContext;

	@Autowired
	GraphQLDataFetchers graphQLDataFetchers;

	private GraphQLSchema graphQLSchema;
	private GraphQL graphQL;

	@Bean
	public GraphQL graphQL() {
		return graphQL;
	}

	/**
	 * The {@link DataLoaderRegistry} will be autowired by Spring in the GraphQL Java Spring Boot framework. It will
	 * then be wired for each request execution, as specified in this page:
	 * <A HREF="https://www.graphql-java.com/documentation/master/batching/">graphql-java batching</A>
	 * 
	 * @return
	 */
	@Bean
	public DataLoaderRegistry dataLoaderRegistry() {
		logger.debug("Creating DataLoader registry");
		DataLoaderRegistry registry = new DataLoaderRegistry();
		DataLoader<Object, Object> dl;

		for (BatchLoaderDelegate<?, ?> batchLoaderDelegate : applicationContext
				.getBeansOfType(BatchLoaderDelegate.class).values()) {
			// Let's check that we didn't already register a BatchLoaderDelegate with this name
			if ((dl = registry.getDataLoader(batchLoaderDelegate.getName())) != null) {
				throw new RuntimeException(
						"Only one BatchLoaderDelegate with a given name is allows, but two have been found: "
								+ dl.getClass().getName() + " and " + batchLoaderDelegate.getClass().getName());
			}
			// Ok, let's register this new one.
			registry.register(batchLoaderDelegate.getName(), DataLoader.newDataLoader(batchLoaderDelegate));
		}

		return registry;
	}
	
	@PostConstruct
	public void init() throws IOException {
		Resource res;
		StringBuffer sdl = new StringBuffer();
		res = new ClassPathResource("/schema.graphqls");
		try(Reader reader = new InputStreamReader(res.getInputStream(), Charset.forName("UTF8"))) {
			sdl.append(FileCopyUtils.copyToString(reader));
		}
		this.graphQL = GraphQL.newGraphQL(buildSchema(sdl.toString())).build();
	}

	private GraphQLSchema buildSchema(String sdl) {
		TypeDefinitionRegistry typeRegistry = new SchemaParser().parse(sdl);

		RuntimeWiring runtimeWiring = buildWiring();
		SchemaGenerator schemaGenerator = new SchemaGenerator();
		graphQLSchema = schemaGenerator.makeExecutableSchema(typeRegistry, runtimeWiring);
		return graphQLSchema;
	}
	
	public GraphQLSchema getGraphQLSchema() {
		return graphQLSchema;
	}

	private RuntimeWiring buildWiring() {
		// Thanks to this thread :
		// https:// stackoverflow.com/questions/54251935/graphql-no-resolver-definied-for-interface-union-java
		//
		// Also see sample :
		// https://github.com/graphql-java/graphql-java-examples/tree/master/http-example
		return RuntimeWiring.newRuntimeWiring()
			.scalar(com.graphql_java_generator.customscalars.GraphQLScalarTypeDate.Date)
			// Data fetchers for DataFetchersDelegateAddBundleProductsToCartOutput
			.type(newTypeWiring("AddBundleProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddBundleProductsToCartOutputCart()))
			.type(newTypeWiring("AddBundleProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddBundleProductsToCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateAddConfigurableProductsToCartOutput
			.type(newTypeWiring("AddConfigurableProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddConfigurableProductsToCartOutputCart()))
			.type(newTypeWiring("AddConfigurableProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddConfigurableProductsToCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateAddDownloadableProductsToCartOutput
			.type(newTypeWiring("AddDownloadableProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddDownloadableProductsToCartOutputCart()))
			.type(newTypeWiring("AddDownloadableProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddDownloadableProductsToCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateAddSimpleProductsToCartOutput
			.type(newTypeWiring("AddSimpleProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddSimpleProductsToCartOutputCart()))
			.type(newTypeWiring("AddSimpleProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddSimpleProductsToCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateAddVirtualProductsToCartOutput
			.type(newTypeWiring("AddVirtualProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddVirtualProductsToCartOutputCart()))
			.type(newTypeWiring("AddVirtualProductsToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateAddVirtualProductsToCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateAggregation
			.type(newTypeWiring("Aggregation").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateAggregationOptions()))
			// Data fetchers for DataFetchersDelegateApplyCouponToCartOutput
			.type(newTypeWiring("ApplyCouponToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateApplyCouponToCartOutputCart()))
			.type(newTypeWiring("ApplyCouponToCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateApplyCouponToCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateAttribute
			.type(newTypeWiring("Attribute").dataFetcher("attribute_options", graphQLDataFetchers.dataFetchersDelegateAttributeAttribute_options()))
			// Data fetchers for DataFetchersDelegateAvailableShippingMethod
			.type(newTypeWiring("AvailableShippingMethod").dataFetcher("amount", graphQLDataFetchers.dataFetchersDelegateAvailableShippingMethodAmount()))
			.type(newTypeWiring("AvailableShippingMethod").dataFetcher("base_amount", graphQLDataFetchers.dataFetchersDelegateAvailableShippingMethodBase_amount()))
			.type(newTypeWiring("AvailableShippingMethod").dataFetcher("price_excl_tax", graphQLDataFetchers.dataFetchersDelegateAvailableShippingMethodPrice_excl_tax()))
			.type(newTypeWiring("AvailableShippingMethod").dataFetcher("price_incl_tax", graphQLDataFetchers.dataFetchersDelegateAvailableShippingMethodPrice_incl_tax()))
			// Data fetchers for DataFetchersDelegateBillingCartAddress
			.type(newTypeWiring("BillingCartAddress").dataFetcher("country", graphQLDataFetchers.dataFetchersDelegateBillingCartAddressCountry()))
			.type(newTypeWiring("BillingCartAddress").dataFetcher("region", graphQLDataFetchers.dataFetchersDelegateBillingCartAddressRegion()))
			.type(newTypeWiring("BillingCartAddress").dataFetcher("street", graphQLDataFetchers.dataFetchersDelegateBillingCartAddressStreet()))
			// Data fetchers for DataFetchersDelegateBundleCartItem
			.type(newTypeWiring("BundleCartItem").dataFetcher("bundle_options", graphQLDataFetchers.dataFetchersDelegateBundleCartItemBundle_options()))
			.type(newTypeWiring("BundleCartItem").dataFetcher("customizable_options", graphQLDataFetchers.dataFetchersDelegateBundleCartItemCustomizable_options()))
			.type(newTypeWiring("BundleCartItem").dataFetcher("prices", graphQLDataFetchers.dataFetchersDelegateBundleCartItemPrices()))
			.type(newTypeWiring("BundleCartItem").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateBundleCartItemProduct()))
			// Data fetchers for DataFetchersDelegateBundleItem
			.type(newTypeWiring("BundleItem").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateBundleItemOptions()))
			// Data fetchers for DataFetchersDelegateBundleItemOption
			.type(newTypeWiring("BundleItemOption").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateBundleItemOptionProduct()))
			// Data fetchers for DataFetchersDelegateBundleProduct
			.type(newTypeWiring("BundleProduct").dataFetcher("categories", graphQLDataFetchers.dataFetchersDelegateBundleProductCategories()))
			.type(newTypeWiring("BundleProduct").dataFetcher("crosssell_products", graphQLDataFetchers.dataFetchersDelegateBundleProductCrosssell_products()))
			.type(newTypeWiring("BundleProduct").dataFetcher("description", graphQLDataFetchers.dataFetchersDelegateBundleProductDescription()))
			.type(newTypeWiring("BundleProduct").dataFetcher("image", graphQLDataFetchers.dataFetchersDelegateBundleProductImage()))
			.type(newTypeWiring("BundleProduct").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateBundleProductItems()))
			.type(newTypeWiring("BundleProduct").dataFetcher("media_gallery", graphQLDataFetchers.dataFetchersDelegateBundleProductMedia_gallery()))
			.type(newTypeWiring("BundleProduct").dataFetcher("media_gallery_entries", graphQLDataFetchers.dataFetchersDelegateBundleProductMedia_gallery_entries()))
			.type(newTypeWiring("BundleProduct").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateBundleProductOptions()))
			.type(newTypeWiring("BundleProduct").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateBundleProductPrice()))
			.type(newTypeWiring("BundleProduct").dataFetcher("price_range", graphQLDataFetchers.dataFetchersDelegateBundleProductPrice_range()))
			.type(newTypeWiring("BundleProduct").dataFetcher("price_tiers", graphQLDataFetchers.dataFetchersDelegateBundleProductPrice_tiers()))
			.type(newTypeWiring("BundleProduct").dataFetcher("product_links", graphQLDataFetchers.dataFetchersDelegateBundleProductProduct_links()))
			.type(newTypeWiring("BundleProduct").dataFetcher("related_products", graphQLDataFetchers.dataFetchersDelegateBundleProductRelated_products()))
			.type(newTypeWiring("BundleProduct").dataFetcher("short_description", graphQLDataFetchers.dataFetchersDelegateBundleProductShort_description()))
			.type(newTypeWiring("BundleProduct").dataFetcher("small_image", graphQLDataFetchers.dataFetchersDelegateBundleProductSmall_image()))
			.type(newTypeWiring("BundleProduct").dataFetcher("thumbnail", graphQLDataFetchers.dataFetchersDelegateBundleProductThumbnail()))
			.type(newTypeWiring("BundleProduct").dataFetcher("tier_prices", graphQLDataFetchers.dataFetchersDelegateBundleProductTier_prices()))
			.type(newTypeWiring("BundleProduct").dataFetcher("upsell_products", graphQLDataFetchers.dataFetchersDelegateBundleProductUpsell_products()))
			.type(newTypeWiring("BundleProduct").dataFetcher("url_rewrites", graphQLDataFetchers.dataFetchersDelegateBundleProductUrl_rewrites()))
			.type(newTypeWiring("BundleProduct").dataFetcher("websites", graphQLDataFetchers.dataFetchersDelegateBundleProductWebsites()))
			// Data fetchers for DataFetchersDelegateCart
			.type(newTypeWiring("Cart").dataFetcher("applied_coupon", graphQLDataFetchers.dataFetchersDelegateCartApplied_coupon()))
			.type(newTypeWiring("Cart").dataFetcher("applied_coupons", graphQLDataFetchers.dataFetchersDelegateCartApplied_coupons()))
			.type(newTypeWiring("Cart").dataFetcher("available_payment_methods", graphQLDataFetchers.dataFetchersDelegateCartAvailable_payment_methods()))
			.type(newTypeWiring("Cart").dataFetcher("billing_address", graphQLDataFetchers.dataFetchersDelegateCartBilling_address()))
			.type(newTypeWiring("Cart").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateCartItems()))
			.type(newTypeWiring("Cart").dataFetcher("prices", graphQLDataFetchers.dataFetchersDelegateCartPrices()))
			.type(newTypeWiring("Cart").dataFetcher("selected_payment_method", graphQLDataFetchers.dataFetchersDelegateCartSelected_payment_method()))
			.type(newTypeWiring("Cart").dataFetcher("shipping_addresses", graphQLDataFetchers.dataFetchersDelegateCartShipping_addresses()))
			// Data fetchers for DataFetchersDelegateCartDiscount
			.type(newTypeWiring("CartDiscount").dataFetcher("amount", graphQLDataFetchers.dataFetchersDelegateCartDiscountAmount()))
			.type(newTypeWiring("CartDiscount").dataFetcher("label", graphQLDataFetchers.dataFetchersDelegateCartDiscountLabel()))
			// Data fetchers for DataFetchersDelegateCartItemPrices
			.type(newTypeWiring("CartItemPrices").dataFetcher("discounts", graphQLDataFetchers.dataFetchersDelegateCartItemPricesDiscounts()))
			.type(newTypeWiring("CartItemPrices").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateCartItemPricesPrice()))
			.type(newTypeWiring("CartItemPrices").dataFetcher("row_total", graphQLDataFetchers.dataFetchersDelegateCartItemPricesRow_total()))
			.type(newTypeWiring("CartItemPrices").dataFetcher("row_total_including_tax", graphQLDataFetchers.dataFetchersDelegateCartItemPricesRow_total_including_tax()))
			.type(newTypeWiring("CartItemPrices").dataFetcher("total_item_discount", graphQLDataFetchers.dataFetchersDelegateCartItemPricesTotal_item_discount()))
			// Data fetchers for DataFetchersDelegateCartPrices
			.type(newTypeWiring("CartPrices").dataFetcher("applied_taxes", graphQLDataFetchers.dataFetchersDelegateCartPricesApplied_taxes()))
			.type(newTypeWiring("CartPrices").dataFetcher("discount", graphQLDataFetchers.dataFetchersDelegateCartPricesDiscount()))
			.type(newTypeWiring("CartPrices").dataFetcher("discounts", graphQLDataFetchers.dataFetchersDelegateCartPricesDiscounts()))
			.type(newTypeWiring("CartPrices").dataFetcher("grand_total", graphQLDataFetchers.dataFetchersDelegateCartPricesGrand_total()))
			.type(newTypeWiring("CartPrices").dataFetcher("subtotal_excluding_tax", graphQLDataFetchers.dataFetchersDelegateCartPricesSubtotal_excluding_tax()))
			.type(newTypeWiring("CartPrices").dataFetcher("subtotal_including_tax", graphQLDataFetchers.dataFetchersDelegateCartPricesSubtotal_including_tax()))
			.type(newTypeWiring("CartPrices").dataFetcher("subtotal_with_discount_excluding_tax", graphQLDataFetchers.dataFetchersDelegateCartPricesSubtotal_with_discount_excluding_tax()))
			// Data fetchers for DataFetchersDelegateCartTaxItem
			.type(newTypeWiring("CartTaxItem").dataFetcher("amount", graphQLDataFetchers.dataFetchersDelegateCartTaxItemAmount()))
			// Data fetchers for DataFetchersDelegateCategoryProducts
			.type(newTypeWiring("CategoryProducts").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateCategoryProductsItems()))
			.type(newTypeWiring("CategoryProducts").dataFetcher("page_info", graphQLDataFetchers.dataFetchersDelegateCategoryProductsPage_info()))
			// Data fetchers for DataFetchersDelegateCategoryTree
			.type(newTypeWiring("CategoryTree").dataFetcher("available_sort_by", graphQLDataFetchers.dataFetchersDelegateCategoryTreeAvailable_sort_by()))
			.type(newTypeWiring("CategoryTree").dataFetcher("breadcrumbs", graphQLDataFetchers.dataFetchersDelegateCategoryTreeBreadcrumbs()))
			.type(newTypeWiring("CategoryTree").dataFetcher("children", graphQLDataFetchers.dataFetchersDelegateCategoryTreeChildren()))
			.type(newTypeWiring("CategoryTree").dataFetcher("cms_block", graphQLDataFetchers.dataFetchersDelegateCategoryTreeCms_block()))
			.type(newTypeWiring("CategoryTree").dataFetcher("products", graphQLDataFetchers.dataFetchersDelegateCategoryTreeProducts()))
			// Data fetchers for DataFetchersDelegateCmsBlocks
			.type(newTypeWiring("CmsBlocks").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateCmsBlocksItems()))
			// Data fetchers for DataFetchersDelegateConfigurableCartItem
			.type(newTypeWiring("ConfigurableCartItem").dataFetcher("configurable_options", graphQLDataFetchers.dataFetchersDelegateConfigurableCartItemConfigurable_options()))
			.type(newTypeWiring("ConfigurableCartItem").dataFetcher("customizable_options", graphQLDataFetchers.dataFetchersDelegateConfigurableCartItemCustomizable_options()))
			.type(newTypeWiring("ConfigurableCartItem").dataFetcher("prices", graphQLDataFetchers.dataFetchersDelegateConfigurableCartItemPrices()))
			.type(newTypeWiring("ConfigurableCartItem").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateConfigurableCartItemProduct()))
			// Data fetchers for DataFetchersDelegateConfigurableProduct
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("categories", graphQLDataFetchers.dataFetchersDelegateConfigurableProductCategories()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("configurable_options", graphQLDataFetchers.dataFetchersDelegateConfigurableProductConfigurable_options()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("crosssell_products", graphQLDataFetchers.dataFetchersDelegateConfigurableProductCrosssell_products()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("description", graphQLDataFetchers.dataFetchersDelegateConfigurableProductDescription()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("image", graphQLDataFetchers.dataFetchersDelegateConfigurableProductImage()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("media_gallery", graphQLDataFetchers.dataFetchersDelegateConfigurableProductMedia_gallery()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("media_gallery_entries", graphQLDataFetchers.dataFetchersDelegateConfigurableProductMedia_gallery_entries()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateConfigurableProductOptions()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateConfigurableProductPrice()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("price_range", graphQLDataFetchers.dataFetchersDelegateConfigurableProductPrice_range()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("price_tiers", graphQLDataFetchers.dataFetchersDelegateConfigurableProductPrice_tiers()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("product_links", graphQLDataFetchers.dataFetchersDelegateConfigurableProductProduct_links()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("related_products", graphQLDataFetchers.dataFetchersDelegateConfigurableProductRelated_products()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("short_description", graphQLDataFetchers.dataFetchersDelegateConfigurableProductShort_description()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("small_image", graphQLDataFetchers.dataFetchersDelegateConfigurableProductSmall_image()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("thumbnail", graphQLDataFetchers.dataFetchersDelegateConfigurableProductThumbnail()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("tier_prices", graphQLDataFetchers.dataFetchersDelegateConfigurableProductTier_prices()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("upsell_products", graphQLDataFetchers.dataFetchersDelegateConfigurableProductUpsell_products()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("url_rewrites", graphQLDataFetchers.dataFetchersDelegateConfigurableProductUrl_rewrites()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("variants", graphQLDataFetchers.dataFetchersDelegateConfigurableProductVariants()))
			.type(newTypeWiring("ConfigurableProduct").dataFetcher("websites", graphQLDataFetchers.dataFetchersDelegateConfigurableProductWebsites()))
			// Data fetchers for DataFetchersDelegateConfigurableProductOptions
			.type(newTypeWiring("ConfigurableProductOptions").dataFetcher("values", graphQLDataFetchers.dataFetchersDelegateConfigurableProductOptionsValues()))
			// Data fetchers for DataFetchersDelegateConfigurableVariant
			.type(newTypeWiring("ConfigurableVariant").dataFetcher("attributes", graphQLDataFetchers.dataFetchersDelegateConfigurableVariantAttributes()))
			.type(newTypeWiring("ConfigurableVariant").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateConfigurableVariantProduct()))
			// Data fetchers for DataFetchersDelegateCountry
			.type(newTypeWiring("Country").dataFetcher("available_regions", graphQLDataFetchers.dataFetchersDelegateCountryAvailable_regions()))
			// Data fetchers for DataFetchersDelegateCurrency
			.type(newTypeWiring("Currency").dataFetcher("available_currency_codes", graphQLDataFetchers.dataFetchersDelegateCurrencyAvailable_currency_codes()))
			.type(newTypeWiring("Currency").dataFetcher("exchange_rates", graphQLDataFetchers.dataFetchersDelegateCurrencyExchange_rates()))
			// Data fetchers for DataFetchersDelegateCustomAttributeMetadata
			.type(newTypeWiring("CustomAttributeMetadata").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateCustomAttributeMetadataItems()))
			// Data fetchers for DataFetchersDelegateCustomer
			.type(newTypeWiring("Customer").dataFetcher("addresses", graphQLDataFetchers.dataFetchersDelegateCustomerAddresses()))
			.type(newTypeWiring("Customer").dataFetcher("wishlist", graphQLDataFetchers.dataFetchersDelegateCustomerWishlist()))
			.type(newTypeWiring("Customer").dataFetcher("wishlist", graphQLDataFetchers.dataFetchersDelegateCustomerWishlistWithDataLoader()))
			// Data fetchers for DataFetchersDelegateCustomerAddress
			.type(newTypeWiring("CustomerAddress").dataFetcher("custom_attributes", graphQLDataFetchers.dataFetchersDelegateCustomerAddressCustom_attributes()))
			.type(newTypeWiring("CustomerAddress").dataFetcher("extension_attributes", graphQLDataFetchers.dataFetchersDelegateCustomerAddressExtension_attributes()))
			.type(newTypeWiring("CustomerAddress").dataFetcher("region", graphQLDataFetchers.dataFetchersDelegateCustomerAddressRegion()))
			.type(newTypeWiring("CustomerAddress").dataFetcher("street", graphQLDataFetchers.dataFetchersDelegateCustomerAddressStreet()))
			// Data fetchers for DataFetchersDelegateCustomerDownloadableProducts
			.type(newTypeWiring("CustomerDownloadableProducts").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateCustomerDownloadableProductsItems()))
			// Data fetchers for DataFetchersDelegateCustomerOrders
			.type(newTypeWiring("CustomerOrders").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateCustomerOrdersItems()))
			// Data fetchers for DataFetchersDelegateCustomerOutput
			.type(newTypeWiring("CustomerOutput").dataFetcher("customer", graphQLDataFetchers.dataFetchersDelegateCustomerOutputCustomer()))
			// Data fetchers for DataFetchersDelegateCustomerPaymentTokens
			.type(newTypeWiring("CustomerPaymentTokens").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateCustomerPaymentTokensItems()))
			// Data fetchers for DataFetchersDelegateCustomizableAreaOption
			.type(newTypeWiring("CustomizableAreaOption").dataFetcher("value", graphQLDataFetchers.dataFetchersDelegateCustomizableAreaOptionValue()))
			// Data fetchers for DataFetchersDelegateCustomizableCheckboxOption
			.type(newTypeWiring("CustomizableCheckboxOption").dataFetcher("value", graphQLDataFetchers.dataFetchersDelegateCustomizableCheckboxOptionValue()))
			// Data fetchers for DataFetchersDelegateCustomizableDateOption
			.type(newTypeWiring("CustomizableDateOption").dataFetcher("value", graphQLDataFetchers.dataFetchersDelegateCustomizableDateOptionValue()))
			// Data fetchers for DataFetchersDelegateCustomizableDropDownOption
			.type(newTypeWiring("CustomizableDropDownOption").dataFetcher("value", graphQLDataFetchers.dataFetchersDelegateCustomizableDropDownOptionValue()))
			// Data fetchers for DataFetchersDelegateCustomizableFieldOption
			.type(newTypeWiring("CustomizableFieldOption").dataFetcher("value", graphQLDataFetchers.dataFetchersDelegateCustomizableFieldOptionValue()))
			// Data fetchers for DataFetchersDelegateCustomizableFileOption
			.type(newTypeWiring("CustomizableFileOption").dataFetcher("value", graphQLDataFetchers.dataFetchersDelegateCustomizableFileOptionValue()))
			// Data fetchers for DataFetchersDelegateCustomizableMultipleOption
			.type(newTypeWiring("CustomizableMultipleOption").dataFetcher("value", graphQLDataFetchers.dataFetchersDelegateCustomizableMultipleOptionValue()))
			// Data fetchers for DataFetchersDelegateCustomizableRadioOption
			.type(newTypeWiring("CustomizableRadioOption").dataFetcher("value", graphQLDataFetchers.dataFetchersDelegateCustomizableRadioOptionValue()))
			// Data fetchers for DataFetchersDelegateDeletePaymentTokenOutput
			.type(newTypeWiring("DeletePaymentTokenOutput").dataFetcher("customerPaymentTokens", graphQLDataFetchers.dataFetchersDelegateDeletePaymentTokenOutputCustomerPaymentTokens()))
			// Data fetchers for DataFetchersDelegateDiscount
			.type(newTypeWiring("Discount").dataFetcher("amount", graphQLDataFetchers.dataFetchersDelegateDiscountAmount()))
			// Data fetchers for DataFetchersDelegateDownloadableCartItem
			.type(newTypeWiring("DownloadableCartItem").dataFetcher("customizable_options", graphQLDataFetchers.dataFetchersDelegateDownloadableCartItemCustomizable_options()))
			.type(newTypeWiring("DownloadableCartItem").dataFetcher("links", graphQLDataFetchers.dataFetchersDelegateDownloadableCartItemLinks()))
			.type(newTypeWiring("DownloadableCartItem").dataFetcher("prices", graphQLDataFetchers.dataFetchersDelegateDownloadableCartItemPrices()))
			.type(newTypeWiring("DownloadableCartItem").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateDownloadableCartItemProduct()))
			.type(newTypeWiring("DownloadableCartItem").dataFetcher("samples", graphQLDataFetchers.dataFetchersDelegateDownloadableCartItemSamples()))
			// Data fetchers for DataFetchersDelegateDownloadableProduct
			.type(newTypeWiring("DownloadableProduct").dataFetcher("categories", graphQLDataFetchers.dataFetchersDelegateDownloadableProductCategories()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("crosssell_products", graphQLDataFetchers.dataFetchersDelegateDownloadableProductCrosssell_products()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("description", graphQLDataFetchers.dataFetchersDelegateDownloadableProductDescription()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("downloadable_product_links", graphQLDataFetchers.dataFetchersDelegateDownloadableProductDownloadable_product_links()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("downloadable_product_samples", graphQLDataFetchers.dataFetchersDelegateDownloadableProductDownloadable_product_samples()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("image", graphQLDataFetchers.dataFetchersDelegateDownloadableProductImage()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("media_gallery", graphQLDataFetchers.dataFetchersDelegateDownloadableProductMedia_gallery()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("media_gallery_entries", graphQLDataFetchers.dataFetchersDelegateDownloadableProductMedia_gallery_entries()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateDownloadableProductOptions()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateDownloadableProductPrice()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("price_range", graphQLDataFetchers.dataFetchersDelegateDownloadableProductPrice_range()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("price_tiers", graphQLDataFetchers.dataFetchersDelegateDownloadableProductPrice_tiers()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("product_links", graphQLDataFetchers.dataFetchersDelegateDownloadableProductProduct_links()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("related_products", graphQLDataFetchers.dataFetchersDelegateDownloadableProductRelated_products()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("short_description", graphQLDataFetchers.dataFetchersDelegateDownloadableProductShort_description()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("small_image", graphQLDataFetchers.dataFetchersDelegateDownloadableProductSmall_image()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("thumbnail", graphQLDataFetchers.dataFetchersDelegateDownloadableProductThumbnail()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("tier_prices", graphQLDataFetchers.dataFetchersDelegateDownloadableProductTier_prices()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("upsell_products", graphQLDataFetchers.dataFetchersDelegateDownloadableProductUpsell_products()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("url_rewrites", graphQLDataFetchers.dataFetchersDelegateDownloadableProductUrl_rewrites()))
			.type(newTypeWiring("DownloadableProduct").dataFetcher("websites", graphQLDataFetchers.dataFetchersDelegateDownloadableProductWebsites()))
			// Data fetchers for DataFetchersDelegateFixedProductTax
			.type(newTypeWiring("FixedProductTax").dataFetcher("amount", graphQLDataFetchers.dataFetchersDelegateFixedProductTaxAmount()))
			// Data fetchers for DataFetchersDelegateGroupedProduct
			.type(newTypeWiring("GroupedProduct").dataFetcher("categories", graphQLDataFetchers.dataFetchersDelegateGroupedProductCategories()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("crosssell_products", graphQLDataFetchers.dataFetchersDelegateGroupedProductCrosssell_products()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("description", graphQLDataFetchers.dataFetchersDelegateGroupedProductDescription()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("image", graphQLDataFetchers.dataFetchersDelegateGroupedProductImage()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateGroupedProductItems()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("media_gallery", graphQLDataFetchers.dataFetchersDelegateGroupedProductMedia_gallery()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("media_gallery_entries", graphQLDataFetchers.dataFetchersDelegateGroupedProductMedia_gallery_entries()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateGroupedProductPrice()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("price_range", graphQLDataFetchers.dataFetchersDelegateGroupedProductPrice_range()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("price_tiers", graphQLDataFetchers.dataFetchersDelegateGroupedProductPrice_tiers()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("product_links", graphQLDataFetchers.dataFetchersDelegateGroupedProductProduct_links()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("related_products", graphQLDataFetchers.dataFetchersDelegateGroupedProductRelated_products()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("short_description", graphQLDataFetchers.dataFetchersDelegateGroupedProductShort_description()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("small_image", graphQLDataFetchers.dataFetchersDelegateGroupedProductSmall_image()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("thumbnail", graphQLDataFetchers.dataFetchersDelegateGroupedProductThumbnail()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("tier_prices", graphQLDataFetchers.dataFetchersDelegateGroupedProductTier_prices()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("upsell_products", graphQLDataFetchers.dataFetchersDelegateGroupedProductUpsell_products()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("url_rewrites", graphQLDataFetchers.dataFetchersDelegateGroupedProductUrl_rewrites()))
			.type(newTypeWiring("GroupedProduct").dataFetcher("websites", graphQLDataFetchers.dataFetchersDelegateGroupedProductWebsites()))
			// Data fetchers for DataFetchersDelegateGroupedProductItem
			.type(newTypeWiring("GroupedProductItem").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateGroupedProductItemProduct()))
			// Data fetchers for DataFetchersDelegateLayerFilter
			.type(newTypeWiring("LayerFilter").dataFetcher("filter_items", graphQLDataFetchers.dataFetchersDelegateLayerFilterFilter_items()))
			// Data fetchers for DataFetchersDelegateMediaGalleryEntry
			.type(newTypeWiring("MediaGalleryEntry").dataFetcher("content", graphQLDataFetchers.dataFetchersDelegateMediaGalleryEntryContent()))
			.type(newTypeWiring("MediaGalleryEntry").dataFetcher("types", graphQLDataFetchers.dataFetchersDelegateMediaGalleryEntryTypes()))
			.type(newTypeWiring("MediaGalleryEntry").dataFetcher("video_content", graphQLDataFetchers.dataFetchersDelegateMediaGalleryEntryVideo_content()))
			// Data fetchers for DataFetchersDelegateMutation
			.type(newTypeWiring("Mutation").dataFetcher("addBundleProductsToCart", graphQLDataFetchers.dataFetchersDelegateMutationAddBundleProductsToCart()))
			.type(newTypeWiring("Mutation").dataFetcher("addConfigurableProductsToCart", graphQLDataFetchers.dataFetchersDelegateMutationAddConfigurableProductsToCart()))
			.type(newTypeWiring("Mutation").dataFetcher("addDownloadableProductsToCart", graphQLDataFetchers.dataFetchersDelegateMutationAddDownloadableProductsToCart()))
			.type(newTypeWiring("Mutation").dataFetcher("addSimpleProductsToCart", graphQLDataFetchers.dataFetchersDelegateMutationAddSimpleProductsToCart()))
			.type(newTypeWiring("Mutation").dataFetcher("addVirtualProductsToCart", graphQLDataFetchers.dataFetchersDelegateMutationAddVirtualProductsToCart()))
			.type(newTypeWiring("Mutation").dataFetcher("applyCouponToCart", graphQLDataFetchers.dataFetchersDelegateMutationApplyCouponToCart()))
			.type(newTypeWiring("Mutation").dataFetcher("changeCustomerPassword", graphQLDataFetchers.dataFetchersDelegateMutationChangeCustomerPassword()))
			.type(newTypeWiring("Mutation").dataFetcher("createBraintreeClientToken", graphQLDataFetchers.dataFetchersDelegateMutationCreateBraintreeClientToken()))
			.type(newTypeWiring("Mutation").dataFetcher("createCustomer", graphQLDataFetchers.dataFetchersDelegateMutationCreateCustomer()))
			.type(newTypeWiring("Mutation").dataFetcher("createCustomerAddress", graphQLDataFetchers.dataFetchersDelegateMutationCreateCustomerAddress()))
			.type(newTypeWiring("Mutation").dataFetcher("createEmptyCart", graphQLDataFetchers.dataFetchersDelegateMutationCreateEmptyCart()))
			.type(newTypeWiring("Mutation").dataFetcher("createPayflowProToken", graphQLDataFetchers.dataFetchersDelegateMutationCreatePayflowProToken()))
			.type(newTypeWiring("Mutation").dataFetcher("createPaypalExpressToken", graphQLDataFetchers.dataFetchersDelegateMutationCreatePaypalExpressToken()))
			.type(newTypeWiring("Mutation").dataFetcher("deleteCustomerAddress", graphQLDataFetchers.dataFetchersDelegateMutationDeleteCustomerAddress()))
			.type(newTypeWiring("Mutation").dataFetcher("deletePaymentToken", graphQLDataFetchers.dataFetchersDelegateMutationDeletePaymentToken()))
			.type(newTypeWiring("Mutation").dataFetcher("generateCustomerToken", graphQLDataFetchers.dataFetchersDelegateMutationGenerateCustomerToken()))
			.type(newTypeWiring("Mutation").dataFetcher("handlePayflowProResponse", graphQLDataFetchers.dataFetchersDelegateMutationHandlePayflowProResponse()))
			.type(newTypeWiring("Mutation").dataFetcher("mergeCarts", graphQLDataFetchers.dataFetchersDelegateMutationMergeCarts()))
			.type(newTypeWiring("Mutation").dataFetcher("placeOrder", graphQLDataFetchers.dataFetchersDelegateMutationPlaceOrder()))
			.type(newTypeWiring("Mutation").dataFetcher("removeCouponFromCart", graphQLDataFetchers.dataFetchersDelegateMutationRemoveCouponFromCart()))
			.type(newTypeWiring("Mutation").dataFetcher("removeItemFromCart", graphQLDataFetchers.dataFetchersDelegateMutationRemoveItemFromCart()))
			.type(newTypeWiring("Mutation").dataFetcher("revokeCustomerToken", graphQLDataFetchers.dataFetchersDelegateMutationRevokeCustomerToken()))
			.type(newTypeWiring("Mutation").dataFetcher("sendEmailToFriend", graphQLDataFetchers.dataFetchersDelegateMutationSendEmailToFriend()))
			.type(newTypeWiring("Mutation").dataFetcher("setBillingAddressOnCart", graphQLDataFetchers.dataFetchersDelegateMutationSetBillingAddressOnCart()))
			.type(newTypeWiring("Mutation").dataFetcher("setGuestEmailOnCart", graphQLDataFetchers.dataFetchersDelegateMutationSetGuestEmailOnCart()))
			.type(newTypeWiring("Mutation").dataFetcher("setPaymentMethodAndPlaceOrder", graphQLDataFetchers.dataFetchersDelegateMutationSetPaymentMethodAndPlaceOrder()))
			.type(newTypeWiring("Mutation").dataFetcher("setPaymentMethodOnCart", graphQLDataFetchers.dataFetchersDelegateMutationSetPaymentMethodOnCart()))
			.type(newTypeWiring("Mutation").dataFetcher("setShippingAddressesOnCart", graphQLDataFetchers.dataFetchersDelegateMutationSetShippingAddressesOnCart()))
			.type(newTypeWiring("Mutation").dataFetcher("setShippingMethodsOnCart", graphQLDataFetchers.dataFetchersDelegateMutationSetShippingMethodsOnCart()))
			.type(newTypeWiring("Mutation").dataFetcher("updateCartItems", graphQLDataFetchers.dataFetchersDelegateMutationUpdateCartItems()))
			.type(newTypeWiring("Mutation").dataFetcher("updateCustomer", graphQLDataFetchers.dataFetchersDelegateMutationUpdateCustomer()))
			.type(newTypeWiring("Mutation").dataFetcher("updateCustomerAddress", graphQLDataFetchers.dataFetchersDelegateMutationUpdateCustomerAddress()))
			// Data fetchers for DataFetchersDelegatePayflowProResponseOutput
			.type(newTypeWiring("PayflowProResponseOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegatePayflowProResponseOutputCart()))
			.type(newTypeWiring("PayflowProResponseOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegatePayflowProResponseOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegatePaypalExpressToken
			.type(newTypeWiring("PaypalExpressToken").dataFetcher("paypal_urls", graphQLDataFetchers.dataFetchersDelegatePaypalExpressTokenPaypal_urls()))
			// Data fetchers for DataFetchersDelegatePaypalExpressTokenOutput
			.type(newTypeWiring("PaypalExpressTokenOutput").dataFetcher("paypal_urls", graphQLDataFetchers.dataFetchersDelegatePaypalExpressTokenOutputPaypal_urls()))
			// Data fetchers for DataFetchersDelegatePlaceOrderOutput
			.type(newTypeWiring("PlaceOrderOutput").dataFetcher("order", graphQLDataFetchers.dataFetchersDelegatePlaceOrderOutputOrder()))
			// Data fetchers for DataFetchersDelegatePrice
			.type(newTypeWiring("Price").dataFetcher("adjustments", graphQLDataFetchers.dataFetchersDelegatePriceAdjustments()))
			.type(newTypeWiring("Price").dataFetcher("amount", graphQLDataFetchers.dataFetchersDelegatePriceAmount()))
			// Data fetchers for DataFetchersDelegatePriceAdjustment
			.type(newTypeWiring("PriceAdjustment").dataFetcher("amount", graphQLDataFetchers.dataFetchersDelegatePriceAdjustmentAmount()))
			// Data fetchers for DataFetchersDelegatePriceRange
			.type(newTypeWiring("PriceRange").dataFetcher("maximum_price", graphQLDataFetchers.dataFetchersDelegatePriceRangeMaximum_price()))
			.type(newTypeWiring("PriceRange").dataFetcher("minimum_price", graphQLDataFetchers.dataFetchersDelegatePriceRangeMinimum_price()))
			// Data fetchers for DataFetchersDelegateProductPrice
			.type(newTypeWiring("ProductPrice").dataFetcher("discount", graphQLDataFetchers.dataFetchersDelegateProductPriceDiscount()))
			.type(newTypeWiring("ProductPrice").dataFetcher("final_price", graphQLDataFetchers.dataFetchersDelegateProductPriceFinal_price()))
			.type(newTypeWiring("ProductPrice").dataFetcher("fixed_product_taxes", graphQLDataFetchers.dataFetchersDelegateProductPriceFixed_product_taxes()))
			.type(newTypeWiring("ProductPrice").dataFetcher("regular_price", graphQLDataFetchers.dataFetchersDelegateProductPriceRegular_price()))
			// Data fetchers for DataFetchersDelegateProductPrices
			.type(newTypeWiring("ProductPrices").dataFetcher("maximalPrice", graphQLDataFetchers.dataFetchersDelegateProductPricesMaximalPrice()))
			.type(newTypeWiring("ProductPrices").dataFetcher("minimalPrice", graphQLDataFetchers.dataFetchersDelegateProductPricesMinimalPrice()))
			.type(newTypeWiring("ProductPrices").dataFetcher("regularPrice", graphQLDataFetchers.dataFetchersDelegateProductPricesRegularPrice()))
			// Data fetchers for DataFetchersDelegateProducts
			.type(newTypeWiring("Products").dataFetcher("aggregations", graphQLDataFetchers.dataFetchersDelegateProductsAggregations()))
			.type(newTypeWiring("Products").dataFetcher("filters", graphQLDataFetchers.dataFetchersDelegateProductsFilters()))
			.type(newTypeWiring("Products").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateProductsItems()))
			.type(newTypeWiring("Products").dataFetcher("page_info", graphQLDataFetchers.dataFetchersDelegateProductsPage_info()))
			.type(newTypeWiring("Products").dataFetcher("sort_fields", graphQLDataFetchers.dataFetchersDelegateProductsSort_fields()))
			// Data fetchers for DataFetchersDelegateProductVideo
			.type(newTypeWiring("ProductVideo").dataFetcher("video_content", graphQLDataFetchers.dataFetchersDelegateProductVideoVideo_content()))
			// Data fetchers for DataFetchersDelegateQuery
			.type(newTypeWiring("Query").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateQueryCart()))
			.type(newTypeWiring("Query").dataFetcher("category", graphQLDataFetchers.dataFetchersDelegateQueryCategory()))
			.type(newTypeWiring("Query").dataFetcher("categoryList", graphQLDataFetchers.dataFetchersDelegateQueryCategoryList()))
			.type(newTypeWiring("Query").dataFetcher("checkoutAgreements", graphQLDataFetchers.dataFetchersDelegateQueryCheckoutAgreements()))
			.type(newTypeWiring("Query").dataFetcher("cmsBlocks", graphQLDataFetchers.dataFetchersDelegateQueryCmsBlocks()))
			.type(newTypeWiring("Query").dataFetcher("cmsPage", graphQLDataFetchers.dataFetchersDelegateQueryCmsPage()))
			.type(newTypeWiring("Query").dataFetcher("countries", graphQLDataFetchers.dataFetchersDelegateQueryCountries()))
			.type(newTypeWiring("Query").dataFetcher("country", graphQLDataFetchers.dataFetchersDelegateQueryCountry()))
			.type(newTypeWiring("Query").dataFetcher("currency", graphQLDataFetchers.dataFetchersDelegateQueryCurrency()))
			.type(newTypeWiring("Query").dataFetcher("customAttributeMetadata", graphQLDataFetchers.dataFetchersDelegateQueryCustomAttributeMetadata()))
			.type(newTypeWiring("Query").dataFetcher("customer", graphQLDataFetchers.dataFetchersDelegateQueryCustomer()))
			.type(newTypeWiring("Query").dataFetcher("customerCart", graphQLDataFetchers.dataFetchersDelegateQueryCustomerCart()))
			.type(newTypeWiring("Query").dataFetcher("customerDownloadableProducts", graphQLDataFetchers.dataFetchersDelegateQueryCustomerDownloadableProducts()))
			.type(newTypeWiring("Query").dataFetcher("customerOrders", graphQLDataFetchers.dataFetchersDelegateQueryCustomerOrders()))
			.type(newTypeWiring("Query").dataFetcher("customerPaymentTokens", graphQLDataFetchers.dataFetchersDelegateQueryCustomerPaymentTokens()))
			.type(newTypeWiring("Query").dataFetcher("getHostedProUrl", graphQLDataFetchers.dataFetchersDelegateQueryGetHostedProUrl()))
			.type(newTypeWiring("Query").dataFetcher("getPayflowLinkToken", graphQLDataFetchers.dataFetchersDelegateQueryGetPayflowLinkToken()))
			.type(newTypeWiring("Query").dataFetcher("isEmailAvailable", graphQLDataFetchers.dataFetchersDelegateQueryIsEmailAvailable()))
			.type(newTypeWiring("Query").dataFetcher("products", graphQLDataFetchers.dataFetchersDelegateQueryProducts()))
			.type(newTypeWiring("Query").dataFetcher("storeConfig", graphQLDataFetchers.dataFetchersDelegateQueryStoreConfig()))
			.type(newTypeWiring("Query").dataFetcher("urlResolver", graphQLDataFetchers.dataFetchersDelegateQueryUrlResolver()))
			.type(newTypeWiring("Query").dataFetcher("wishlist", graphQLDataFetchers.dataFetchersDelegateQueryWishlist()))
			// Data fetchers for DataFetchersDelegateRemoveCouponFromCartOutput
			.type(newTypeWiring("RemoveCouponFromCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateRemoveCouponFromCartOutputCart()))
			.type(newTypeWiring("RemoveCouponFromCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateRemoveCouponFromCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateRemoveItemFromCartOutput
			.type(newTypeWiring("RemoveItemFromCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateRemoveItemFromCartOutputCart()))
			.type(newTypeWiring("RemoveItemFromCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateRemoveItemFromCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateSelectedBundleOption
			.type(newTypeWiring("SelectedBundleOption").dataFetcher("values", graphQLDataFetchers.dataFetchersDelegateSelectedBundleOptionValues()))
			// Data fetchers for DataFetchersDelegateSelectedCustomizableOption
			.type(newTypeWiring("SelectedCustomizableOption").dataFetcher("values", graphQLDataFetchers.dataFetchersDelegateSelectedCustomizableOptionValues()))
			// Data fetchers for DataFetchersDelegateSelectedCustomizableOptionValue
			.type(newTypeWiring("SelectedCustomizableOptionValue").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateSelectedCustomizableOptionValuePrice()))
			// Data fetchers for DataFetchersDelegateSelectedShippingMethod
			.type(newTypeWiring("SelectedShippingMethod").dataFetcher("amount", graphQLDataFetchers.dataFetchersDelegateSelectedShippingMethodAmount()))
			.type(newTypeWiring("SelectedShippingMethod").dataFetcher("base_amount", graphQLDataFetchers.dataFetchersDelegateSelectedShippingMethodBase_amount()))
			// Data fetchers for DataFetchersDelegateSendEmailToFriendOutput
			.type(newTypeWiring("SendEmailToFriendOutput").dataFetcher("recipients", graphQLDataFetchers.dataFetchersDelegateSendEmailToFriendOutputRecipients()))
			.type(newTypeWiring("SendEmailToFriendOutput").dataFetcher("sender", graphQLDataFetchers.dataFetchersDelegateSendEmailToFriendOutputSender()))
			// Data fetchers for DataFetchersDelegateSetBillingAddressOnCartOutput
			.type(newTypeWiring("SetBillingAddressOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetBillingAddressOnCartOutputCart()))
			.type(newTypeWiring("SetBillingAddressOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetBillingAddressOnCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateSetGuestEmailOnCartOutput
			.type(newTypeWiring("SetGuestEmailOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetGuestEmailOnCartOutputCart()))
			.type(newTypeWiring("SetGuestEmailOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetGuestEmailOnCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateSetPaymentMethodOnCartOutput
			.type(newTypeWiring("SetPaymentMethodOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetPaymentMethodOnCartOutputCart()))
			.type(newTypeWiring("SetPaymentMethodOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetPaymentMethodOnCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateSetShippingAddressesOnCartOutput
			.type(newTypeWiring("SetShippingAddressesOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetShippingAddressesOnCartOutputCart()))
			.type(newTypeWiring("SetShippingAddressesOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetShippingAddressesOnCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateSetShippingMethodsOnCartOutput
			.type(newTypeWiring("SetShippingMethodsOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetShippingMethodsOnCartOutputCart()))
			.type(newTypeWiring("SetShippingMethodsOnCartOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateSetShippingMethodsOnCartOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateShippingCartAddress
			.type(newTypeWiring("ShippingCartAddress").dataFetcher("available_shipping_methods", graphQLDataFetchers.dataFetchersDelegateShippingCartAddressAvailable_shipping_methods()))
			.type(newTypeWiring("ShippingCartAddress").dataFetcher("cart_items", graphQLDataFetchers.dataFetchersDelegateShippingCartAddressCart_items()))
			.type(newTypeWiring("ShippingCartAddress").dataFetcher("cart_items_v2", graphQLDataFetchers.dataFetchersDelegateShippingCartAddressCart_items_v2()))
			.type(newTypeWiring("ShippingCartAddress").dataFetcher("country", graphQLDataFetchers.dataFetchersDelegateShippingCartAddressCountry()))
			.type(newTypeWiring("ShippingCartAddress").dataFetcher("region", graphQLDataFetchers.dataFetchersDelegateShippingCartAddressRegion()))
			.type(newTypeWiring("ShippingCartAddress").dataFetcher("selected_shipping_method", graphQLDataFetchers.dataFetchersDelegateShippingCartAddressSelected_shipping_method()))
			.type(newTypeWiring("ShippingCartAddress").dataFetcher("street", graphQLDataFetchers.dataFetchersDelegateShippingCartAddressStreet()))
			// Data fetchers for DataFetchersDelegateSimpleCartItem
			.type(newTypeWiring("SimpleCartItem").dataFetcher("customizable_options", graphQLDataFetchers.dataFetchersDelegateSimpleCartItemCustomizable_options()))
			.type(newTypeWiring("SimpleCartItem").dataFetcher("prices", graphQLDataFetchers.dataFetchersDelegateSimpleCartItemPrices()))
			.type(newTypeWiring("SimpleCartItem").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateSimpleCartItemProduct()))
			// Data fetchers for DataFetchersDelegateSimpleProduct
			.type(newTypeWiring("SimpleProduct").dataFetcher("categories", graphQLDataFetchers.dataFetchersDelegateSimpleProductCategories()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("crosssell_products", graphQLDataFetchers.dataFetchersDelegateSimpleProductCrosssell_products()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("description", graphQLDataFetchers.dataFetchersDelegateSimpleProductDescription()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("image", graphQLDataFetchers.dataFetchersDelegateSimpleProductImage()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("media_gallery", graphQLDataFetchers.dataFetchersDelegateSimpleProductMedia_gallery()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("media_gallery_entries", graphQLDataFetchers.dataFetchersDelegateSimpleProductMedia_gallery_entries()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateSimpleProductOptions()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateSimpleProductPrice()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("price_range", graphQLDataFetchers.dataFetchersDelegateSimpleProductPrice_range()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("price_tiers", graphQLDataFetchers.dataFetchersDelegateSimpleProductPrice_tiers()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("product_links", graphQLDataFetchers.dataFetchersDelegateSimpleProductProduct_links()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("related_products", graphQLDataFetchers.dataFetchersDelegateSimpleProductRelated_products()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("short_description", graphQLDataFetchers.dataFetchersDelegateSimpleProductShort_description()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("small_image", graphQLDataFetchers.dataFetchersDelegateSimpleProductSmall_image()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("thumbnail", graphQLDataFetchers.dataFetchersDelegateSimpleProductThumbnail()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("tier_prices", graphQLDataFetchers.dataFetchersDelegateSimpleProductTier_prices()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("upsell_products", graphQLDataFetchers.dataFetchersDelegateSimpleProductUpsell_products()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("url_rewrites", graphQLDataFetchers.dataFetchersDelegateSimpleProductUrl_rewrites()))
			.type(newTypeWiring("SimpleProduct").dataFetcher("websites", graphQLDataFetchers.dataFetchersDelegateSimpleProductWebsites()))
			// Data fetchers for DataFetchersDelegateSortFields
			.type(newTypeWiring("SortFields").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateSortFieldsOptions()))
			// Data fetchers for DataFetchersDelegateSwatchLayerFilterItem
			.type(newTypeWiring("SwatchLayerFilterItem").dataFetcher("swatch_data", graphQLDataFetchers.dataFetchersDelegateSwatchLayerFilterItemSwatch_data()))
			// Data fetchers for DataFetchersDelegateTierPrice
			.type(newTypeWiring("TierPrice").dataFetcher("discount", graphQLDataFetchers.dataFetchersDelegateTierPriceDiscount()))
			.type(newTypeWiring("TierPrice").dataFetcher("final_price", graphQLDataFetchers.dataFetchersDelegateTierPriceFinal_price()))
			// Data fetchers for DataFetchersDelegateUpdateCartItemsOutput
			.type(newTypeWiring("UpdateCartItemsOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateUpdateCartItemsOutputCart()))
			.type(newTypeWiring("UpdateCartItemsOutput").dataFetcher("cart", graphQLDataFetchers.dataFetchersDelegateUpdateCartItemsOutputCartWithDataLoader()))
			// Data fetchers for DataFetchersDelegateUrlRewrite
			.type(newTypeWiring("UrlRewrite").dataFetcher("parameters", graphQLDataFetchers.dataFetchersDelegateUrlRewriteParameters()))
			// Data fetchers for DataFetchersDelegateVirtualCartItem
			.type(newTypeWiring("VirtualCartItem").dataFetcher("customizable_options", graphQLDataFetchers.dataFetchersDelegateVirtualCartItemCustomizable_options()))
			.type(newTypeWiring("VirtualCartItem").dataFetcher("prices", graphQLDataFetchers.dataFetchersDelegateVirtualCartItemPrices()))
			.type(newTypeWiring("VirtualCartItem").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateVirtualCartItemProduct()))
			// Data fetchers for DataFetchersDelegateVirtualProduct
			.type(newTypeWiring("VirtualProduct").dataFetcher("categories", graphQLDataFetchers.dataFetchersDelegateVirtualProductCategories()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("crosssell_products", graphQLDataFetchers.dataFetchersDelegateVirtualProductCrosssell_products()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("description", graphQLDataFetchers.dataFetchersDelegateVirtualProductDescription()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("image", graphQLDataFetchers.dataFetchersDelegateVirtualProductImage()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("media_gallery", graphQLDataFetchers.dataFetchersDelegateVirtualProductMedia_gallery()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("media_gallery_entries", graphQLDataFetchers.dataFetchersDelegateVirtualProductMedia_gallery_entries()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateVirtualProductOptions()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateVirtualProductPrice()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("price_range", graphQLDataFetchers.dataFetchersDelegateVirtualProductPrice_range()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("price_tiers", graphQLDataFetchers.dataFetchersDelegateVirtualProductPrice_tiers()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("product_links", graphQLDataFetchers.dataFetchersDelegateVirtualProductProduct_links()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("related_products", graphQLDataFetchers.dataFetchersDelegateVirtualProductRelated_products()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("short_description", graphQLDataFetchers.dataFetchersDelegateVirtualProductShort_description()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("small_image", graphQLDataFetchers.dataFetchersDelegateVirtualProductSmall_image()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("thumbnail", graphQLDataFetchers.dataFetchersDelegateVirtualProductThumbnail()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("tier_prices", graphQLDataFetchers.dataFetchersDelegateVirtualProductTier_prices()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("upsell_products", graphQLDataFetchers.dataFetchersDelegateVirtualProductUpsell_products()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("url_rewrites", graphQLDataFetchers.dataFetchersDelegateVirtualProductUrl_rewrites()))
			.type(newTypeWiring("VirtualProduct").dataFetcher("websites", graphQLDataFetchers.dataFetchersDelegateVirtualProductWebsites()))
			// Data fetchers for DataFetchersDelegateWishlist
			.type(newTypeWiring("Wishlist").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateWishlistItems()))
			// Data fetchers for DataFetchersDelegateWishlistItem
			.type(newTypeWiring("WishlistItem").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateWishlistItemProduct()))
			// Data fetchers for DataFetchersDelegateWishlistOutput
			.type(newTypeWiring("WishlistOutput").dataFetcher("items", graphQLDataFetchers.dataFetchersDelegateWishlistOutputItems()))
			// Data fetchers for DataFetchersDelegateCartAddressInterface
			.type(newTypeWiring("CartAddressInterface").dataFetcher("country", graphQLDataFetchers.dataFetchersDelegateCartAddressInterfaceCountry()))
			.type(newTypeWiring("CartAddressInterface").dataFetcher("country", graphQLDataFetchers.dataFetchersDelegateCartAddressInterfaceCountry()))
			.type(newTypeWiring("CartAddressInterface").dataFetcher("region", graphQLDataFetchers.dataFetchersDelegateCartAddressInterfaceRegion()))
			.type(newTypeWiring("CartAddressInterface").dataFetcher("region", graphQLDataFetchers.dataFetchersDelegateCartAddressInterfaceRegion()))
			.type(newTypeWiring("CartAddressInterface").dataFetcher("street", graphQLDataFetchers.dataFetchersDelegateCartAddressInterfaceStreet()))
			.type(newTypeWiring("CartAddressInterface").dataFetcher("street", graphQLDataFetchers.dataFetchersDelegateCartAddressInterfaceStreet()))
			// Data fetchers for DataFetchersDelegateCartItemInterface
			.type(newTypeWiring("CartItemInterface").dataFetcher("prices", graphQLDataFetchers.dataFetchersDelegateCartItemInterfacePrices()))
			.type(newTypeWiring("CartItemInterface").dataFetcher("prices", graphQLDataFetchers.dataFetchersDelegateCartItemInterfacePrices()))
			.type(newTypeWiring("CartItemInterface").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateCartItemInterfaceProduct()))
			.type(newTypeWiring("CartItemInterface").dataFetcher("product", graphQLDataFetchers.dataFetchersDelegateCartItemInterfaceProduct()))
			// Data fetchers for DataFetchersDelegateCategoryInterface
			.type(newTypeWiring("CategoryInterface").dataFetcher("available_sort_by", graphQLDataFetchers.dataFetchersDelegateCategoryInterfaceAvailable_sort_by()))
			.type(newTypeWiring("CategoryInterface").dataFetcher("available_sort_by", graphQLDataFetchers.dataFetchersDelegateCategoryInterfaceAvailable_sort_by()))
			.type(newTypeWiring("CategoryInterface").dataFetcher("breadcrumbs", graphQLDataFetchers.dataFetchersDelegateCategoryInterfaceBreadcrumbs()))
			.type(newTypeWiring("CategoryInterface").dataFetcher("breadcrumbs", graphQLDataFetchers.dataFetchersDelegateCategoryInterfaceBreadcrumbs()))
			.type(newTypeWiring("CategoryInterface").dataFetcher("cms_block", graphQLDataFetchers.dataFetchersDelegateCategoryInterfaceCms_block()))
			.type(newTypeWiring("CategoryInterface").dataFetcher("cms_block", graphQLDataFetchers.dataFetchersDelegateCategoryInterfaceCms_block()))
			.type(newTypeWiring("CategoryInterface").dataFetcher("products", graphQLDataFetchers.dataFetchersDelegateCategoryInterfaceProducts()))
			.type(newTypeWiring("CategoryInterface").dataFetcher("products", graphQLDataFetchers.dataFetchersDelegateCategoryInterfaceProducts()))
			// Data fetchers for DataFetchersDelegateCustomizableProductInterface
			.type(newTypeWiring("CustomizableProductInterface").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateCustomizableProductInterfaceOptions()))
			.type(newTypeWiring("CustomizableProductInterface").dataFetcher("options", graphQLDataFetchers.dataFetchersDelegateCustomizableProductInterfaceOptions()))
			// Data fetchers for DataFetchersDelegateProductInterface
			.type(newTypeWiring("ProductInterface").dataFetcher("categories", graphQLDataFetchers.dataFetchersDelegateProductInterfaceCategories()))
			.type(newTypeWiring("ProductInterface").dataFetcher("categories", graphQLDataFetchers.dataFetchersDelegateProductInterfaceCategories()))
			.type(newTypeWiring("ProductInterface").dataFetcher("crosssell_products", graphQLDataFetchers.dataFetchersDelegateProductInterfaceCrosssell_products()))
			.type(newTypeWiring("ProductInterface").dataFetcher("crosssell_products", graphQLDataFetchers.dataFetchersDelegateProductInterfaceCrosssell_products()))
			.type(newTypeWiring("ProductInterface").dataFetcher("description", graphQLDataFetchers.dataFetchersDelegateProductInterfaceDescription()))
			.type(newTypeWiring("ProductInterface").dataFetcher("description", graphQLDataFetchers.dataFetchersDelegateProductInterfaceDescription()))
			.type(newTypeWiring("ProductInterface").dataFetcher("image", graphQLDataFetchers.dataFetchersDelegateProductInterfaceImage()))
			.type(newTypeWiring("ProductInterface").dataFetcher("image", graphQLDataFetchers.dataFetchersDelegateProductInterfaceImage()))
			.type(newTypeWiring("ProductInterface").dataFetcher("media_gallery", graphQLDataFetchers.dataFetchersDelegateProductInterfaceMedia_gallery()))
			.type(newTypeWiring("ProductInterface").dataFetcher("media_gallery", graphQLDataFetchers.dataFetchersDelegateProductInterfaceMedia_gallery()))
			.type(newTypeWiring("ProductInterface").dataFetcher("media_gallery_entries", graphQLDataFetchers.dataFetchersDelegateProductInterfaceMedia_gallery_entries()))
			.type(newTypeWiring("ProductInterface").dataFetcher("media_gallery_entries", graphQLDataFetchers.dataFetchersDelegateProductInterfaceMedia_gallery_entries()))
			.type(newTypeWiring("ProductInterface").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateProductInterfacePrice()))
			.type(newTypeWiring("ProductInterface").dataFetcher("price", graphQLDataFetchers.dataFetchersDelegateProductInterfacePrice()))
			.type(newTypeWiring("ProductInterface").dataFetcher("price_range", graphQLDataFetchers.dataFetchersDelegateProductInterfacePrice_range()))
			.type(newTypeWiring("ProductInterface").dataFetcher("price_range", graphQLDataFetchers.dataFetchersDelegateProductInterfacePrice_range()))
			.type(newTypeWiring("ProductInterface").dataFetcher("price_tiers", graphQLDataFetchers.dataFetchersDelegateProductInterfacePrice_tiers()))
			.type(newTypeWiring("ProductInterface").dataFetcher("price_tiers", graphQLDataFetchers.dataFetchersDelegateProductInterfacePrice_tiers()))
			.type(newTypeWiring("ProductInterface").dataFetcher("product_links", graphQLDataFetchers.dataFetchersDelegateProductInterfaceProduct_links()))
			.type(newTypeWiring("ProductInterface").dataFetcher("product_links", graphQLDataFetchers.dataFetchersDelegateProductInterfaceProduct_links()))
			.type(newTypeWiring("ProductInterface").dataFetcher("related_products", graphQLDataFetchers.dataFetchersDelegateProductInterfaceRelated_products()))
			.type(newTypeWiring("ProductInterface").dataFetcher("related_products", graphQLDataFetchers.dataFetchersDelegateProductInterfaceRelated_products()))
			.type(newTypeWiring("ProductInterface").dataFetcher("short_description", graphQLDataFetchers.dataFetchersDelegateProductInterfaceShort_description()))
			.type(newTypeWiring("ProductInterface").dataFetcher("short_description", graphQLDataFetchers.dataFetchersDelegateProductInterfaceShort_description()))
			.type(newTypeWiring("ProductInterface").dataFetcher("small_image", graphQLDataFetchers.dataFetchersDelegateProductInterfaceSmall_image()))
			.type(newTypeWiring("ProductInterface").dataFetcher("small_image", graphQLDataFetchers.dataFetchersDelegateProductInterfaceSmall_image()))
			.type(newTypeWiring("ProductInterface").dataFetcher("thumbnail", graphQLDataFetchers.dataFetchersDelegateProductInterfaceThumbnail()))
			.type(newTypeWiring("ProductInterface").dataFetcher("thumbnail", graphQLDataFetchers.dataFetchersDelegateProductInterfaceThumbnail()))
			.type(newTypeWiring("ProductInterface").dataFetcher("tier_prices", graphQLDataFetchers.dataFetchersDelegateProductInterfaceTier_prices()))
			.type(newTypeWiring("ProductInterface").dataFetcher("tier_prices", graphQLDataFetchers.dataFetchersDelegateProductInterfaceTier_prices()))
			.type(newTypeWiring("ProductInterface").dataFetcher("upsell_products", graphQLDataFetchers.dataFetchersDelegateProductInterfaceUpsell_products()))
			.type(newTypeWiring("ProductInterface").dataFetcher("upsell_products", graphQLDataFetchers.dataFetchersDelegateProductInterfaceUpsell_products()))
			.type(newTypeWiring("ProductInterface").dataFetcher("url_rewrites", graphQLDataFetchers.dataFetchersDelegateProductInterfaceUrl_rewrites()))
			.type(newTypeWiring("ProductInterface").dataFetcher("url_rewrites", graphQLDataFetchers.dataFetchersDelegateProductInterfaceUrl_rewrites()))
			.type(newTypeWiring("ProductInterface").dataFetcher("websites", graphQLDataFetchers.dataFetchersDelegateProductInterfaceWebsites()))
			.type(newTypeWiring("ProductInterface").dataFetcher("websites", graphQLDataFetchers.dataFetchersDelegateProductInterfaceWebsites()))
			// Data fetchers for DataFetchersDelegateSwatchLayerFilterItemInterface
			.type(newTypeWiring("SwatchLayerFilterItemInterface").dataFetcher("swatch_data", graphQLDataFetchers.dataFetchersDelegateSwatchLayerFilterItemInterfaceSwatch_data()))
			.type(newTypeWiring("SwatchLayerFilterItemInterface").dataFetcher("swatch_data", graphQLDataFetchers.dataFetchersDelegateSwatchLayerFilterItemInterfaceSwatch_data()))
			//
			// Let's link the interface types to the concrete types
			.type("AggregationOptionInterface", typeWiring -> typeWiring.typeResolver(getAggregationOptionInterfaceResolver()))
			.type("CartAddressInterface", typeWiring -> typeWiring.typeResolver(getCartAddressInterfaceResolver()))
			.type("CartItemInterface", typeWiring -> typeWiring.typeResolver(getCartItemInterfaceResolver()))
			.type("CategoryInterface", typeWiring -> typeWiring.typeResolver(getCategoryInterfaceResolver()))
			.type("CustomizableOptionInterface", typeWiring -> typeWiring.typeResolver(getCustomizableOptionInterfaceResolver()))
			.type("CustomizableProductInterface", typeWiring -> typeWiring.typeResolver(getCustomizableProductInterfaceResolver()))
			.type("LayerFilterItemInterface", typeWiring -> typeWiring.typeResolver(getLayerFilterItemInterfaceResolver()))
			.type("MediaGalleryInterface", typeWiring -> typeWiring.typeResolver(getMediaGalleryInterfaceResolver()))
			.type("PhysicalProductInterface", typeWiring -> typeWiring.typeResolver(getPhysicalProductInterfaceResolver()))
			.type("ProductInterface", typeWiring -> typeWiring.typeResolver(getProductInterfaceResolver()))
			.type("ProductLinksInterface", typeWiring -> typeWiring.typeResolver(getProductLinksInterfaceResolver()))
			.type("SwatchLayerFilterItemInterface", typeWiring -> typeWiring.typeResolver(getSwatchLayerFilterItemInterfaceResolver()))
			.build();
	}

	private TypeResolver getAggregationOptionInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof AggregationOption) {
					ret = "AggregationOption";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getCartAddressInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof BillingCartAddress) {
					ret = "BillingCartAddress";
				} else
				if (javaObject instanceof ShippingCartAddress) {
					ret = "ShippingCartAddress";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getCartItemInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof BundleCartItem) {
					ret = "BundleCartItem";
				} else
				if (javaObject instanceof ConfigurableCartItem) {
					ret = "ConfigurableCartItem";
				} else
				if (javaObject instanceof DownloadableCartItem) {
					ret = "DownloadableCartItem";
				} else
				if (javaObject instanceof SimpleCartItem) {
					ret = "SimpleCartItem";
				} else
				if (javaObject instanceof VirtualCartItem) {
					ret = "VirtualCartItem";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getCategoryInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof CategoryTree) {
					ret = "CategoryTree";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getCustomizableOptionInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof CustomizableAreaOption) {
					ret = "CustomizableAreaOption";
				} else
				if (javaObject instanceof CustomizableCheckboxOption) {
					ret = "CustomizableCheckboxOption";
				} else
				if (javaObject instanceof CustomizableDateOption) {
					ret = "CustomizableDateOption";
				} else
				if (javaObject instanceof CustomizableDropDownOption) {
					ret = "CustomizableDropDownOption";
				} else
				if (javaObject instanceof CustomizableFieldOption) {
					ret = "CustomizableFieldOption";
				} else
				if (javaObject instanceof CustomizableFileOption) {
					ret = "CustomizableFileOption";
				} else
				if (javaObject instanceof CustomizableMultipleOption) {
					ret = "CustomizableMultipleOption";
				} else
				if (javaObject instanceof CustomizableRadioOption) {
					ret = "CustomizableRadioOption";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getCustomizableProductInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof BundleProduct) {
					ret = "BundleProduct";
				} else
				if (javaObject instanceof ConfigurableProduct) {
					ret = "ConfigurableProduct";
				} else
				if (javaObject instanceof DownloadableProduct) {
					ret = "DownloadableProduct";
				} else
				if (javaObject instanceof SimpleProduct) {
					ret = "SimpleProduct";
				} else
				if (javaObject instanceof VirtualProduct) {
					ret = "VirtualProduct";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getLayerFilterItemInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof LayerFilterItem) {
					ret = "LayerFilterItem";
				} else
				if (javaObject instanceof SwatchLayerFilterItem) {
					ret = "SwatchLayerFilterItem";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getMediaGalleryInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof ProductImage) {
					ret = "ProductImage";
				} else
				if (javaObject instanceof ProductVideo) {
					ret = "ProductVideo";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getPhysicalProductInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof BundleProduct) {
					ret = "BundleProduct";
				} else
				if (javaObject instanceof ConfigurableProduct) {
					ret = "ConfigurableProduct";
				} else
				if (javaObject instanceof GroupedProduct) {
					ret = "GroupedProduct";
				} else
				if (javaObject instanceof SimpleProduct) {
					ret = "SimpleProduct";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getProductInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof BundleProduct) {
					ret = "BundleProduct";
				} else
				if (javaObject instanceof ConfigurableProduct) {
					ret = "ConfigurableProduct";
				} else
				if (javaObject instanceof DownloadableProduct) {
					ret = "DownloadableProduct";
				} else
				if (javaObject instanceof GroupedProduct) {
					ret = "GroupedProduct";
				} else
				if (javaObject instanceof SimpleProduct) {
					ret = "SimpleProduct";
				} else
				if (javaObject instanceof VirtualProduct) {
					ret = "VirtualProduct";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getProductLinksInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof ProductLinks) {
					ret = "ProductLinks";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

	private TypeResolver getSwatchLayerFilterItemInterfaceResolver() {
		return new TypeResolver() {
			@Override
			public GraphQLObjectType getType(TypeResolutionEnvironment env) {
				Object javaObject = env.getObject();
				String ret = null;

				if (javaObject instanceof SwatchLayerFilterItem) {
					ret = "SwatchLayerFilterItem";
				} else
				{
					throw new RuntimeException("Can't resolve javaObject " + javaObject.getClass().getName());
				}
				logger.trace("Resolved type for javaObject {} is {}", javaObject.getClass().getName());
				return env.getSchema().getObjectType(ret);
			}
		};
	}

}
