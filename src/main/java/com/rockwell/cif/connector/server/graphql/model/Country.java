/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Country")
public class Country  {

	public Country(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "available_regions", graphQLTypeName = "Region", javaClass = Region.class)
	List<Region> available_regions;


	@GraphQLScalar(fieldName = "full_name_english", graphQLTypeName = "String", javaClass = String.class)
	String full_name_english;


	@GraphQLScalar(fieldName = "full_name_locale", graphQLTypeName = "String", javaClass = String.class)
	String full_name_locale;


	@GraphQLScalar(fieldName = "id", graphQLTypeName = "String", javaClass = String.class)
	String id;


	@GraphQLScalar(fieldName = "three_letter_abbreviation", graphQLTypeName = "String", javaClass = String.class)
	String three_letter_abbreviation;


	@GraphQLScalar(fieldName = "two_letter_abbreviation", graphQLTypeName = "String", javaClass = String.class)
	String two_letter_abbreviation;



	public void setAvailable_regions(List<Region> available_regions) {
		this.available_regions = available_regions;
	}

	public List<Region> getAvailable_regions() {
		return available_regions;
	}

	public void setFull_name_english(String full_name_english) {
		this.full_name_english = full_name_english;
	}

	public String getFull_name_english() {
		return full_name_english;
	}

	public void setFull_name_locale(String full_name_locale) {
		this.full_name_locale = full_name_locale;
	}

	public String getFull_name_locale() {
		return full_name_locale;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getId() {
		return id;
	}

	public void setThree_letter_abbreviation(String three_letter_abbreviation) {
		this.three_letter_abbreviation = three_letter_abbreviation;
	}

	public String getThree_letter_abbreviation() {
		return three_letter_abbreviation;
	}

	public void setTwo_letter_abbreviation(String two_letter_abbreviation) {
		this.two_letter_abbreviation = two_letter_abbreviation;
	}

	public String getTwo_letter_abbreviation() {
		return two_letter_abbreviation;
	}

    public String toString() {
        return "Country {"
				+ "available_regions: " + available_regions
				+ ", "
				+ "full_name_english: " + full_name_english
				+ ", "
				+ "full_name_locale: " + full_name_locale
				+ ", "
				+ "id: " + id
				+ ", "
				+ "three_letter_abbreviation: " + three_letter_abbreviation
				+ ", "
				+ "two_letter_abbreviation: " + two_letter_abbreviation
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Available_regions("available_regions"),
		Full_name_english("full_name_english"),
		Full_name_locale("full_name_locale"),
		Id("id"),
		Three_letter_abbreviation("three_letter_abbreviation"),
		Two_letter_abbreviation("two_letter_abbreviation");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private List<Region> available_regions;
		private String full_name_english;
		private String full_name_locale;
		private String id;
		private String three_letter_abbreviation;
		private String two_letter_abbreviation;


		public Builder withAvailable_regions(List<Region> available_regions) {
			this.available_regions = available_regions;
			return this;
		}
		public Builder withFull_name_english(String full_name_english) {
			this.full_name_english = full_name_english;
			return this;
		}
		public Builder withFull_name_locale(String full_name_locale) {
			this.full_name_locale = full_name_locale;
			return this;
		}
		public Builder withId(String id) {
			this.id = id;
			return this;
		}
		public Builder withThree_letter_abbreviation(String three_letter_abbreviation) {
			this.three_letter_abbreviation = three_letter_abbreviation;
			return this;
		}
		public Builder withTwo_letter_abbreviation(String two_letter_abbreviation) {
			this.two_letter_abbreviation = two_letter_abbreviation;
			return this;
		}

		public Country build() {
			Country _object = new Country();
			_object.setAvailable_regions(available_regions);
			_object.setFull_name_english(full_name_english);
			_object.setFull_name_locale(full_name_locale);
			_object.setId(id);
			_object.setThree_letter_abbreviation(three_letter_abbreviation);
			_object.setTwo_letter_abbreviation(two_letter_abbreviation);
			return _object;
		}
	}
}
