/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("ProductLinks")
public class ProductLinks implements ProductLinksInterface {

	public ProductLinks(){
		// No action
	}

	@GraphQLScalar(fieldName = "link_type", graphQLTypeName = "String", javaClass = String.class)
	String link_type;


	@GraphQLScalar(fieldName = "linked_product_sku", graphQLTypeName = "String", javaClass = String.class)
	String linked_product_sku;


	@GraphQLScalar(fieldName = "linked_product_type", graphQLTypeName = "String", javaClass = String.class)
	String linked_product_type;


	@GraphQLScalar(fieldName = "position", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer position;


	@GraphQLScalar(fieldName = "sku", graphQLTypeName = "String", javaClass = String.class)
	String sku;



	public void setLink_type(String link_type) {
		this.link_type = link_type;
	}

	public String getLink_type() {
		return link_type;
	}

	public void setLinked_product_sku(String linked_product_sku) {
		this.linked_product_sku = linked_product_sku;
	}

	public String getLinked_product_sku() {
		return linked_product_sku;
	}

	public void setLinked_product_type(String linked_product_type) {
		this.linked_product_type = linked_product_type;
	}

	public String getLinked_product_type() {
		return linked_product_type;
	}

	public void setPosition(Integer position) {
		this.position = position;
	}

	public Integer getPosition() {
		return position;
	}

	public void setSku(String sku) {
		this.sku = sku;
	}

	public String getSku() {
		return sku;
	}

    public String toString() {
        return "ProductLinks {"
				+ "link_type: " + link_type
				+ ", "
				+ "linked_product_sku: " + linked_product_sku
				+ ", "
				+ "linked_product_type: " + linked_product_type
				+ ", "
				+ "position: " + position
				+ ", "
				+ "sku: " + sku
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Link_type("link_type"),
		Linked_product_sku("linked_product_sku"),
		Linked_product_type("linked_product_type"),
		Position("position"),
		Sku("sku");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String link_type;
		private String linked_product_sku;
		private String linked_product_type;
		private Integer position;
		private String sku;


		public Builder withLink_type(String link_type) {
			this.link_type = link_type;
			return this;
		}
		public Builder withLinked_product_sku(String linked_product_sku) {
			this.linked_product_sku = linked_product_sku;
			return this;
		}
		public Builder withLinked_product_type(String linked_product_type) {
			this.linked_product_type = linked_product_type;
			return this;
		}
		public Builder withPosition(Integer position) {
			this.position = position;
			return this;
		}
		public Builder withSku(String sku) {
			this.sku = sku;
			return this;
		}

		public ProductLinks build() {
			ProductLinks _object = new ProductLinks();
			_object.setLink_type(link_type);
			_object.setLinked_product_sku(linked_product_sku);
			_object.setLinked_product_type(linked_product_type);
			_object.setPosition(position);
			_object.setSku(sku);
			return _object;
		}
	}
}
