/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("MediaGalleryEntry")
public class MediaGalleryEntry  {

	public MediaGalleryEntry(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "content", graphQLTypeName = "ProductMediaGalleryEntriesContent", javaClass = ProductMediaGalleryEntriesContent.class)
	ProductMediaGalleryEntriesContent content;


	@GraphQLScalar(fieldName = "disabled", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean disabled;


	@GraphQLScalar(fieldName = "file", graphQLTypeName = "String", javaClass = String.class)
	String file;


	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer id;


	@GraphQLScalar(fieldName = "label", graphQLTypeName = "String", javaClass = String.class)
	String label;


	@GraphQLScalar(fieldName = "media_type", graphQLTypeName = "String", javaClass = String.class)
	String media_type;


	@GraphQLScalar(fieldName = "position", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer position;


	@GraphQLScalar(fieldName = "types", graphQLTypeName = "String", javaClass = String.class)
	List<String> types;


	@GraphQLNonScalar(fieldName = "video_content", graphQLTypeName = "ProductMediaGalleryEntriesVideoContent", javaClass = ProductMediaGalleryEntriesVideoContent.class)
	ProductMediaGalleryEntriesVideoContent video_content;



	public void setContent(ProductMediaGalleryEntriesContent content) {
		this.content = content;
	}

	public ProductMediaGalleryEntriesContent getContent() {
		return content;
	}

	public void setDisabled(Boolean disabled) {
		this.disabled = disabled;
	}

	public Boolean getDisabled() {
		return disabled;
	}

	public void setFile(String file) {
		this.file = file;
	}

	public String getFile() {
		return file;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public String getLabel() {
		return label;
	}

	public void setMedia_type(String media_type) {
		this.media_type = media_type;
	}

	public String getMedia_type() {
		return media_type;
	}

	public void setPosition(Integer position) {
		this.position = position;
	}

	public Integer getPosition() {
		return position;
	}

	public void setTypes(List<String> types) {
		this.types = types;
	}

	public List<String> getTypes() {
		return types;
	}

	public void setVideo_content(ProductMediaGalleryEntriesVideoContent video_content) {
		this.video_content = video_content;
	}

	public ProductMediaGalleryEntriesVideoContent getVideo_content() {
		return video_content;
	}

    public String toString() {
        return "MediaGalleryEntry {"
				+ "content: " + content
				+ ", "
				+ "disabled: " + disabled
				+ ", "
				+ "file: " + file
				+ ", "
				+ "id: " + id
				+ ", "
				+ "label: " + label
				+ ", "
				+ "media_type: " + media_type
				+ ", "
				+ "position: " + position
				+ ", "
				+ "types: " + types
				+ ", "
				+ "video_content: " + video_content
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Content("content"),
		Disabled("disabled"),
		File("file"),
		Id("id"),
		Label("label"),
		Media_type("media_type"),
		Position("position"),
		Types("types"),
		Video_content("video_content");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private ProductMediaGalleryEntriesContent content;
		private Boolean disabled;
		private String file;
		private Integer id;
		private String label;
		private String media_type;
		private Integer position;
		private List<String> types;
		private ProductMediaGalleryEntriesVideoContent video_content;


		public Builder withContent(ProductMediaGalleryEntriesContent content) {
			this.content = content;
			return this;
		}
		public Builder withDisabled(Boolean disabled) {
			this.disabled = disabled;
			return this;
		}
		public Builder withFile(String file) {
			this.file = file;
			return this;
		}
		public Builder withId(Integer id) {
			this.id = id;
			return this;
		}
		public Builder withLabel(String label) {
			this.label = label;
			return this;
		}
		public Builder withMedia_type(String media_type) {
			this.media_type = media_type;
			return this;
		}
		public Builder withPosition(Integer position) {
			this.position = position;
			return this;
		}
		public Builder withTypes(List<String> types) {
			this.types = types;
			return this;
		}
		public Builder withVideo_content(ProductMediaGalleryEntriesVideoContent video_content) {
			this.video_content = video_content;
			return this;
		}

		public MediaGalleryEntry build() {
			MediaGalleryEntry _object = new MediaGalleryEntry();
			_object.setContent(content);
			_object.setDisabled(disabled);
			_object.setFile(file);
			_object.setId(id);
			_object.setLabel(label);
			_object.setMedia_type(media_type);
			_object.setPosition(position);
			_object.setTypes(types);
			_object.setVideo_content(video_content);
			return _object;
		}
	}
}
