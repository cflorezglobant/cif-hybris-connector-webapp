/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("SimpleProduct")
public class SimpleProduct implements ProductInterface, PhysicalProductInterface, CustomizableProductInterface {

	public SimpleProduct(){
		// No action
	}

	@GraphQLScalar(fieldName = "activity", graphQLTypeName = "String", javaClass = String.class)
	String activity;


	@GraphQLScalar(fieldName = "attribute_set_id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer attribute_set_id;


	@GraphQLScalar(fieldName = "canonical_url", graphQLTypeName = "String", javaClass = String.class)
	String canonical_url;


	@GraphQLNonScalar(fieldName = "categories", graphQLTypeName = "CategoryInterface", javaClass = CategoryInterface.class)
	List<CategoryInterface> categories;


	@GraphQLScalar(fieldName = "category_gear", graphQLTypeName = "String", javaClass = String.class)
	String category_gear;


	@GraphQLScalar(fieldName = "climate", graphQLTypeName = "String", javaClass = String.class)
	String climate;


	@GraphQLScalar(fieldName = "collar", graphQLTypeName = "String", javaClass = String.class)
	String collar;


	@GraphQLScalar(fieldName = "color", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer color;


	@GraphQLScalar(fieldName = "country_of_manufacture", graphQLTypeName = "String", javaClass = String.class)
	String country_of_manufacture;


	@GraphQLScalar(fieldName = "created_at", graphQLTypeName = "String", javaClass = String.class)
	String created_at;


	@GraphQLNonScalar(fieldName = "crosssell_products", graphQLTypeName = "ProductInterface", javaClass = ProductInterface.class)
	List<ProductInterface> crosssell_products;


	@GraphQLNonScalar(fieldName = "description", graphQLTypeName = "ComplexTextValue", javaClass = ComplexTextValue.class)
	ComplexTextValue description;


	@GraphQLScalar(fieldName = "eco_collection", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer eco_collection;


	@GraphQLScalar(fieldName = "erin_recommends", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer erin_recommends;


	@GraphQLScalar(fieldName = "features_bags", graphQLTypeName = "String", javaClass = String.class)
	String features_bags;


	@GraphQLScalar(fieldName = "format", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer format;


	@GraphQLScalar(fieldName = "gender", graphQLTypeName = "String", javaClass = String.class)
	String gender;


	@GraphQLScalar(fieldName = "gift_message_available", graphQLTypeName = "String", javaClass = String.class)
	String gift_message_available;


	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer id;


	@GraphQLNonScalar(fieldName = "image", graphQLTypeName = "ProductImage", javaClass = ProductImage.class)
	ProductImage image;


	@GraphQLScalar(fieldName = "manufacturer", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer manufacturer;


	@GraphQLScalar(fieldName = "material", graphQLTypeName = "String", javaClass = String.class)
	String material;


	@GraphQLNonScalar(fieldName = "media_gallery", graphQLTypeName = "MediaGalleryInterface", javaClass = MediaGalleryInterface.class)
	List<MediaGalleryInterface> media_gallery;


	@GraphQLNonScalar(fieldName = "media_gallery_entries", graphQLTypeName = "MediaGalleryEntry", javaClass = MediaGalleryEntry.class)
	List<MediaGalleryEntry> media_gallery_entries;


	@GraphQLScalar(fieldName = "meta_description", graphQLTypeName = "String", javaClass = String.class)
	String meta_description;


	@GraphQLScalar(fieldName = "meta_keyword", graphQLTypeName = "String", javaClass = String.class)
	String meta_keyword;


	@GraphQLScalar(fieldName = "meta_title", graphQLTypeName = "String", javaClass = String.class)
	String meta_title;


	@GraphQLScalar(fieldName = "name", graphQLTypeName = "String", javaClass = String.class)
	String name;


	@GraphQLScalar(fieldName = "new", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer _new;


	@GraphQLScalar(fieldName = "new_from_date", graphQLTypeName = "String", javaClass = String.class)
	String new_from_date;


	@GraphQLScalar(fieldName = "new_to_date", graphQLTypeName = "String", javaClass = String.class)
	String new_to_date;


	@GraphQLScalar(fieldName = "only_x_left_in_stock", graphQLTypeName = "Float", javaClass = Double.class)
	Double only_x_left_in_stock;


	@GraphQLNonScalar(fieldName = "options", graphQLTypeName = "CustomizableOptionInterface", javaClass = CustomizableOptionInterface.class)
	List<CustomizableOptionInterface> options;


	@GraphQLScalar(fieldName = "options_container", graphQLTypeName = "String", javaClass = String.class)
	String options_container;


	@GraphQLScalar(fieldName = "pattern", graphQLTypeName = "String", javaClass = String.class)
	String pattern;


	@GraphQLScalar(fieldName = "performance_fabric", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer performance_fabric;


	@GraphQLNonScalar(fieldName = "price", graphQLTypeName = "ProductPrices", javaClass = ProductPrices.class)
	ProductPrices price;


	@GraphQLNonScalar(fieldName = "price_range", graphQLTypeName = "PriceRange", javaClass = PriceRange.class)
	PriceRange price_range;


	@GraphQLNonScalar(fieldName = "price_tiers", graphQLTypeName = "TierPrice", javaClass = TierPrice.class)
	List<TierPrice> price_tiers;


	@GraphQLNonScalar(fieldName = "product_links", graphQLTypeName = "ProductLinksInterface", javaClass = ProductLinksInterface.class)
	List<ProductLinksInterface> product_links;


	@GraphQLNonScalar(fieldName = "related_products", graphQLTypeName = "ProductInterface", javaClass = ProductInterface.class)
	List<ProductInterface> related_products;


	@GraphQLScalar(fieldName = "sale", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer sale;


	@GraphQLNonScalar(fieldName = "short_description", graphQLTypeName = "ComplexTextValue", javaClass = ComplexTextValue.class)
	ComplexTextValue short_description;


	@GraphQLScalar(fieldName = "size", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer size;


	@GraphQLScalar(fieldName = "sku", graphQLTypeName = "String", javaClass = String.class)
	String sku;


	@GraphQLScalar(fieldName = "sleeve", graphQLTypeName = "String", javaClass = String.class)
	String sleeve;


	@GraphQLNonScalar(fieldName = "small_image", graphQLTypeName = "ProductImage", javaClass = ProductImage.class)
	ProductImage small_image;


	@GraphQLScalar(fieldName = "special_from_date", graphQLTypeName = "String", javaClass = String.class)
	String special_from_date;


	@GraphQLScalar(fieldName = "special_price", graphQLTypeName = "Float", javaClass = Double.class)
	Double special_price;


	@GraphQLScalar(fieldName = "special_to_date", graphQLTypeName = "String", javaClass = String.class)
	String special_to_date;


	@GraphQLScalar(fieldName = "stock_status", graphQLTypeName = "ProductStockStatus", javaClass = ProductStockStatus.class)
	ProductStockStatus stock_status;


	@GraphQLScalar(fieldName = "strap_bags", graphQLTypeName = "String", javaClass = String.class)
	String strap_bags;


	@GraphQLScalar(fieldName = "style_bags", graphQLTypeName = "String", javaClass = String.class)
	String style_bags;


	@GraphQLScalar(fieldName = "style_bottom", graphQLTypeName = "String", javaClass = String.class)
	String style_bottom;


	@GraphQLScalar(fieldName = "style_general", graphQLTypeName = "String", javaClass = String.class)
	String style_general;


	@GraphQLScalar(fieldName = "swatch_image", graphQLTypeName = "String", javaClass = String.class)
	String swatch_image;


	@GraphQLNonScalar(fieldName = "thumbnail", graphQLTypeName = "ProductImage", javaClass = ProductImage.class)
	ProductImage thumbnail;


	@GraphQLScalar(fieldName = "tier_price", graphQLTypeName = "Float", javaClass = Double.class)
	Double tier_price;


	@GraphQLNonScalar(fieldName = "tier_prices", graphQLTypeName = "ProductTierPrices", javaClass = ProductTierPrices.class)
	List<ProductTierPrices> tier_prices;


	@GraphQLScalar(fieldName = "type_id", graphQLTypeName = "String", javaClass = String.class)
	String type_id;


	@GraphQLScalar(fieldName = "updated_at", graphQLTypeName = "String", javaClass = String.class)
	String updated_at;


	@GraphQLNonScalar(fieldName = "upsell_products", graphQLTypeName = "ProductInterface", javaClass = ProductInterface.class)
	List<ProductInterface> upsell_products;


	@GraphQLScalar(fieldName = "url_key", graphQLTypeName = "String", javaClass = String.class)
	String url_key;


	@GraphQLScalar(fieldName = "url_path", graphQLTypeName = "String", javaClass = String.class)
	String url_path;


	@GraphQLNonScalar(fieldName = "url_rewrites", graphQLTypeName = "UrlRewrite", javaClass = UrlRewrite.class)
	List<UrlRewrite> url_rewrites;


	@GraphQLScalar(fieldName = "url_suffix", graphQLTypeName = "String", javaClass = String.class)
	String url_suffix;


	@GraphQLNonScalar(fieldName = "websites", graphQLTypeName = "Website", javaClass = Website.class)
	List<Website> websites;


	@GraphQLScalar(fieldName = "weight", graphQLTypeName = "Float", javaClass = Double.class)
	Double weight;



	public void setActivity(String activity) {
		this.activity = activity;
	}

	public String getActivity() {
		return activity;
	}

	public void setAttribute_set_id(Integer attribute_set_id) {
		this.attribute_set_id = attribute_set_id;
	}

	public Integer getAttribute_set_id() {
		return attribute_set_id;
	}

	public void setCanonical_url(String canonical_url) {
		this.canonical_url = canonical_url;
	}

	public String getCanonical_url() {
		return canonical_url;
	}

	public void setCategories(List<CategoryInterface> categories) {
		this.categories = categories;
	}

	public List<CategoryInterface> getCategories() {
		return categories;
	}

	public void setCategory_gear(String category_gear) {
		this.category_gear = category_gear;
	}

	public String getCategory_gear() {
		return category_gear;
	}

	public void setClimate(String climate) {
		this.climate = climate;
	}

	public String getClimate() {
		return climate;
	}

	public void setCollar(String collar) {
		this.collar = collar;
	}

	public String getCollar() {
		return collar;
	}

	public void setColor(Integer color) {
		this.color = color;
	}

	public Integer getColor() {
		return color;
	}

	public void setCountry_of_manufacture(String country_of_manufacture) {
		this.country_of_manufacture = country_of_manufacture;
	}

	public String getCountry_of_manufacture() {
		return country_of_manufacture;
	}

	public void setCreated_at(String created_at) {
		this.created_at = created_at;
	}

	public String getCreated_at() {
		return created_at;
	}

	public void setCrosssell_products(List<ProductInterface> crosssell_products) {
		this.crosssell_products = crosssell_products;
	}

	public List<ProductInterface> getCrosssell_products() {
		return crosssell_products;
	}

	public void setDescription(ComplexTextValue description) {
		this.description = description;
	}

	public ComplexTextValue getDescription() {
		return description;
	}

	public void setEco_collection(Integer eco_collection) {
		this.eco_collection = eco_collection;
	}

	public Integer getEco_collection() {
		return eco_collection;
	}

	public void setErin_recommends(Integer erin_recommends) {
		this.erin_recommends = erin_recommends;
	}

	public Integer getErin_recommends() {
		return erin_recommends;
	}

	public void setFeatures_bags(String features_bags) {
		this.features_bags = features_bags;
	}

	public String getFeatures_bags() {
		return features_bags;
	}

	public void setFormat(Integer format) {
		this.format = format;
	}

	public Integer getFormat() {
		return format;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	public String getGender() {
		return gender;
	}

	public void setGift_message_available(String gift_message_available) {
		this.gift_message_available = gift_message_available;
	}

	public String getGift_message_available() {
		return gift_message_available;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setImage(ProductImage image) {
		this.image = image;
	}

	public ProductImage getImage() {
		return image;
	}

	public void setManufacturer(Integer manufacturer) {
		this.manufacturer = manufacturer;
	}

	public Integer getManufacturer() {
		return manufacturer;
	}

	public void setMaterial(String material) {
		this.material = material;
	}

	public String getMaterial() {
		return material;
	}

	public void setMedia_gallery(List<MediaGalleryInterface> media_gallery) {
		this.media_gallery = media_gallery;
	}

	public List<MediaGalleryInterface> getMedia_gallery() {
		return media_gallery;
	}

	public void setMedia_gallery_entries(List<MediaGalleryEntry> media_gallery_entries) {
		this.media_gallery_entries = media_gallery_entries;
	}

	public List<MediaGalleryEntry> getMedia_gallery_entries() {
		return media_gallery_entries;
	}

	public void setMeta_description(String meta_description) {
		this.meta_description = meta_description;
	}

	public String getMeta_description() {
		return meta_description;
	}

	public void setMeta_keyword(String meta_keyword) {
		this.meta_keyword = meta_keyword;
	}

	public String getMeta_keyword() {
		return meta_keyword;
	}

	public void setMeta_title(String meta_title) {
		this.meta_title = meta_title;
	}

	public String getMeta_title() {
		return meta_title;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return name;
	}

	public void setNew(Integer _new) {
		this._new = _new;
	}

	public Integer getNew() {
		return _new;
	}

	public void setNew_from_date(String new_from_date) {
		this.new_from_date = new_from_date;
	}

	public String getNew_from_date() {
		return new_from_date;
	}

	public void setNew_to_date(String new_to_date) {
		this.new_to_date = new_to_date;
	}

	public String getNew_to_date() {
		return new_to_date;
	}

	public void setOnly_x_left_in_stock(Double only_x_left_in_stock) {
		this.only_x_left_in_stock = only_x_left_in_stock;
	}

	public Double getOnly_x_left_in_stock() {
		return only_x_left_in_stock;
	}

	public void setOptions(List<CustomizableOptionInterface> options) {
		this.options = options;
	}

	public List<CustomizableOptionInterface> getOptions() {
		return options;
	}

	public void setOptions_container(String options_container) {
		this.options_container = options_container;
	}

	public String getOptions_container() {
		return options_container;
	}

	public void setPattern(String pattern) {
		this.pattern = pattern;
	}

	public String getPattern() {
		return pattern;
	}

	public void setPerformance_fabric(Integer performance_fabric) {
		this.performance_fabric = performance_fabric;
	}

	public Integer getPerformance_fabric() {
		return performance_fabric;
	}

	public void setPrice(ProductPrices price) {
		this.price = price;
	}

	public ProductPrices getPrice() {
		return price;
	}

	public void setPrice_range(PriceRange price_range) {
		this.price_range = price_range;
	}

	public PriceRange getPrice_range() {
		return price_range;
	}

	public void setPrice_tiers(List<TierPrice> price_tiers) {
		this.price_tiers = price_tiers;
	}

	public List<TierPrice> getPrice_tiers() {
		return price_tiers;
	}

	public void setProduct_links(List<ProductLinksInterface> product_links) {
		this.product_links = product_links;
	}

	public List<ProductLinksInterface> getProduct_links() {
		return product_links;
	}

	public void setRelated_products(List<ProductInterface> related_products) {
		this.related_products = related_products;
	}

	public List<ProductInterface> getRelated_products() {
		return related_products;
	}

	public void setSale(Integer sale) {
		this.sale = sale;
	}

	public Integer getSale() {
		return sale;
	}

	public void setShort_description(ComplexTextValue short_description) {
		this.short_description = short_description;
	}

	public ComplexTextValue getShort_description() {
		return short_description;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

	public Integer getSize() {
		return size;
	}

	public void setSku(String sku) {
		this.sku = sku;
	}

	public String getSku() {
		return sku;
	}

	public void setSleeve(String sleeve) {
		this.sleeve = sleeve;
	}

	public String getSleeve() {
		return sleeve;
	}

	public void setSmall_image(ProductImage small_image) {
		this.small_image = small_image;
	}

	public ProductImage getSmall_image() {
		return small_image;
	}

	public void setSpecial_from_date(String special_from_date) {
		this.special_from_date = special_from_date;
	}

	public String getSpecial_from_date() {
		return special_from_date;
	}

	public void setSpecial_price(Double special_price) {
		this.special_price = special_price;
	}

	public Double getSpecial_price() {
		return special_price;
	}

	public void setSpecial_to_date(String special_to_date) {
		this.special_to_date = special_to_date;
	}

	public String getSpecial_to_date() {
		return special_to_date;
	}

	public void setStock_status(ProductStockStatus stock_status) {
		this.stock_status = stock_status;
	}

	public ProductStockStatus getStock_status() {
		return stock_status;
	}

	public void setStrap_bags(String strap_bags) {
		this.strap_bags = strap_bags;
	}

	public String getStrap_bags() {
		return strap_bags;
	}

	public void setStyle_bags(String style_bags) {
		this.style_bags = style_bags;
	}

	public String getStyle_bags() {
		return style_bags;
	}

	public void setStyle_bottom(String style_bottom) {
		this.style_bottom = style_bottom;
	}

	public String getStyle_bottom() {
		return style_bottom;
	}

	public void setStyle_general(String style_general) {
		this.style_general = style_general;
	}

	public String getStyle_general() {
		return style_general;
	}

	public void setSwatch_image(String swatch_image) {
		this.swatch_image = swatch_image;
	}

	public String getSwatch_image() {
		return swatch_image;
	}

	public void setThumbnail(ProductImage thumbnail) {
		this.thumbnail = thumbnail;
	}

	public ProductImage getThumbnail() {
		return thumbnail;
	}

	public void setTier_price(Double tier_price) {
		this.tier_price = tier_price;
	}

	public Double getTier_price() {
		return tier_price;
	}

	public void setTier_prices(List<ProductTierPrices> tier_prices) {
		this.tier_prices = tier_prices;
	}

	public List<ProductTierPrices> getTier_prices() {
		return tier_prices;
	}

	public void setType_id(String type_id) {
		this.type_id = type_id;
	}

	public String getType_id() {
		return type_id;
	}

	public void setUpdated_at(String updated_at) {
		this.updated_at = updated_at;
	}

	public String getUpdated_at() {
		return updated_at;
	}

	public void setUpsell_products(List<ProductInterface> upsell_products) {
		this.upsell_products = upsell_products;
	}

	public List<ProductInterface> getUpsell_products() {
		return upsell_products;
	}

	public void setUrl_key(String url_key) {
		this.url_key = url_key;
	}

	public String getUrl_key() {
		return url_key;
	}

	public void setUrl_path(String url_path) {
		this.url_path = url_path;
	}

	public String getUrl_path() {
		return url_path;
	}

	public void setUrl_rewrites(List<UrlRewrite> url_rewrites) {
		this.url_rewrites = url_rewrites;
	}

	public List<UrlRewrite> getUrl_rewrites() {
		return url_rewrites;
	}

	public void setUrl_suffix(String url_suffix) {
		this.url_suffix = url_suffix;
	}

	public String getUrl_suffix() {
		return url_suffix;
	}

	public void setWebsites(List<Website> websites) {
		this.websites = websites;
	}

	public List<Website> getWebsites() {
		return websites;
	}

	public void setWeight(Double weight) {
		this.weight = weight;
	}

	public Double getWeight() {
		return weight;
	}

    public String toString() {
        return "SimpleProduct {"
				+ "activity: " + activity
				+ ", "
				+ "attribute_set_id: " + attribute_set_id
				+ ", "
				+ "canonical_url: " + canonical_url
				+ ", "
				+ "categories: " + categories
				+ ", "
				+ "category_gear: " + category_gear
				+ ", "
				+ "climate: " + climate
				+ ", "
				+ "collar: " + collar
				+ ", "
				+ "color: " + color
				+ ", "
				+ "country_of_manufacture: " + country_of_manufacture
				+ ", "
				+ "created_at: " + created_at
				+ ", "
				+ "crosssell_products: " + crosssell_products
				+ ", "
				+ "description: " + description
				+ ", "
				+ "eco_collection: " + eco_collection
				+ ", "
				+ "erin_recommends: " + erin_recommends
				+ ", "
				+ "features_bags: " + features_bags
				+ ", "
				+ "format: " + format
				+ ", "
				+ "gender: " + gender
				+ ", "
				+ "gift_message_available: " + gift_message_available
				+ ", "
				+ "id: " + id
				+ ", "
				+ "image: " + image
				+ ", "
				+ "manufacturer: " + manufacturer
				+ ", "
				+ "material: " + material
				+ ", "
				+ "media_gallery: " + media_gallery
				+ ", "
				+ "media_gallery_entries: " + media_gallery_entries
				+ ", "
				+ "meta_description: " + meta_description
				+ ", "
				+ "meta_keyword: " + meta_keyword
				+ ", "
				+ "meta_title: " + meta_title
				+ ", "
				+ "name: " + name
				+ ", "
				+ "_new: " + _new
				+ ", "
				+ "new_from_date: " + new_from_date
				+ ", "
				+ "new_to_date: " + new_to_date
				+ ", "
				+ "only_x_left_in_stock: " + only_x_left_in_stock
				+ ", "
				+ "options: " + options
				+ ", "
				+ "options_container: " + options_container
				+ ", "
				+ "pattern: " + pattern
				+ ", "
				+ "performance_fabric: " + performance_fabric
				+ ", "
				+ "price: " + price
				+ ", "
				+ "price_range: " + price_range
				+ ", "
				+ "price_tiers: " + price_tiers
				+ ", "
				+ "product_links: " + product_links
				+ ", "
				+ "related_products: " + related_products
				+ ", "
				+ "sale: " + sale
				+ ", "
				+ "short_description: " + short_description
				+ ", "
				+ "size: " + size
				+ ", "
				+ "sku: " + sku
				+ ", "
				+ "sleeve: " + sleeve
				+ ", "
				+ "small_image: " + small_image
				+ ", "
				+ "special_from_date: " + special_from_date
				+ ", "
				+ "special_price: " + special_price
				+ ", "
				+ "special_to_date: " + special_to_date
				+ ", "
				+ "stock_status: " + stock_status
				+ ", "
				+ "strap_bags: " + strap_bags
				+ ", "
				+ "style_bags: " + style_bags
				+ ", "
				+ "style_bottom: " + style_bottom
				+ ", "
				+ "style_general: " + style_general
				+ ", "
				+ "swatch_image: " + swatch_image
				+ ", "
				+ "thumbnail: " + thumbnail
				+ ", "
				+ "tier_price: " + tier_price
				+ ", "
				+ "tier_prices: " + tier_prices
				+ ", "
				+ "type_id: " + type_id
				+ ", "
				+ "updated_at: " + updated_at
				+ ", "
				+ "upsell_products: " + upsell_products
				+ ", "
				+ "url_key: " + url_key
				+ ", "
				+ "url_path: " + url_path
				+ ", "
				+ "url_rewrites: " + url_rewrites
				+ ", "
				+ "url_suffix: " + url_suffix
				+ ", "
				+ "websites: " + websites
				+ ", "
				+ "weight: " + weight
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Activity("activity"),
		Attribute_set_id("attribute_set_id"),
		Canonical_url("canonical_url"),
		Categories("categories"),
		Category_gear("category_gear"),
		Climate("climate"),
		Collar("collar"),
		Color("color"),
		Country_of_manufacture("country_of_manufacture"),
		Created_at("created_at"),
		Crosssell_products("crosssell_products"),
		Description("description"),
		Eco_collection("eco_collection"),
		Erin_recommends("erin_recommends"),
		Features_bags("features_bags"),
		Format("format"),
		Gender("gender"),
		Gift_message_available("gift_message_available"),
		Id("id"),
		Image("image"),
		Manufacturer("manufacturer"),
		Material("material"),
		Media_gallery("media_gallery"),
		Media_gallery_entries("media_gallery_entries"),
		Meta_description("meta_description"),
		Meta_keyword("meta_keyword"),
		Meta_title("meta_title"),
		Name("name"),
		New("new"),
		New_from_date("new_from_date"),
		New_to_date("new_to_date"),
		Only_x_left_in_stock("only_x_left_in_stock"),
		Options("options"),
		Options_container("options_container"),
		Pattern("pattern"),
		Performance_fabric("performance_fabric"),
		Price("price"),
		Price_range("price_range"),
		Price_tiers("price_tiers"),
		Product_links("product_links"),
		Related_products("related_products"),
		Sale("sale"),
		Short_description("short_description"),
		Size("size"),
		Sku("sku"),
		Sleeve("sleeve"),
		Small_image("small_image"),
		Special_from_date("special_from_date"),
		Special_price("special_price"),
		Special_to_date("special_to_date"),
		Stock_status("stock_status"),
		Strap_bags("strap_bags"),
		Style_bags("style_bags"),
		Style_bottom("style_bottom"),
		Style_general("style_general"),
		Swatch_image("swatch_image"),
		Thumbnail("thumbnail"),
		Tier_price("tier_price"),
		Tier_prices("tier_prices"),
		Type_id("type_id"),
		Updated_at("updated_at"),
		Upsell_products("upsell_products"),
		Url_key("url_key"),
		Url_path("url_path"),
		Url_rewrites("url_rewrites"),
		Url_suffix("url_suffix"),
		Websites("websites"),
		Weight("weight");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String activity;
		private Integer attribute_set_id;
		private String canonical_url;
		private List<CategoryInterface> categories;
		private String category_gear;
		private String climate;
		private String collar;
		private Integer color;
		private String country_of_manufacture;
		private String created_at;
		private List<ProductInterface> crosssell_products;
		private ComplexTextValue description;
		private Integer eco_collection;
		private Integer erin_recommends;
		private String features_bags;
		private Integer format;
		private String gender;
		private String gift_message_available;
		private Integer id;
		private ProductImage image;
		private Integer manufacturer;
		private String material;
		private List<MediaGalleryInterface> media_gallery;
		private List<MediaGalleryEntry> media_gallery_entries;
		private String meta_description;
		private String meta_keyword;
		private String meta_title;
		private String name;
		private Integer _new;
		private String new_from_date;
		private String new_to_date;
		private Double only_x_left_in_stock;
		private List<CustomizableOptionInterface> options;
		private String options_container;
		private String pattern;
		private Integer performance_fabric;
		private ProductPrices price;
		private PriceRange price_range;
		private List<TierPrice> price_tiers;
		private List<ProductLinksInterface> product_links;
		private List<ProductInterface> related_products;
		private Integer sale;
		private ComplexTextValue short_description;
		private Integer size;
		private String sku;
		private String sleeve;
		private ProductImage small_image;
		private String special_from_date;
		private Double special_price;
		private String special_to_date;
		private ProductStockStatus stock_status;
		private String strap_bags;
		private String style_bags;
		private String style_bottom;
		private String style_general;
		private String swatch_image;
		private ProductImage thumbnail;
		private Double tier_price;
		private List<ProductTierPrices> tier_prices;
		private String type_id;
		private String updated_at;
		private List<ProductInterface> upsell_products;
		private String url_key;
		private String url_path;
		private List<UrlRewrite> url_rewrites;
		private String url_suffix;
		private List<Website> websites;
		private Double weight;


		public Builder withActivity(String activity) {
			this.activity = activity;
			return this;
		}
		public Builder withAttribute_set_id(Integer attribute_set_id) {
			this.attribute_set_id = attribute_set_id;
			return this;
		}
		public Builder withCanonical_url(String canonical_url) {
			this.canonical_url = canonical_url;
			return this;
		}
		public Builder withCategories(List<CategoryInterface> categories) {
			this.categories = categories;
			return this;
		}
		public Builder withCategory_gear(String category_gear) {
			this.category_gear = category_gear;
			return this;
		}
		public Builder withClimate(String climate) {
			this.climate = climate;
			return this;
		}
		public Builder withCollar(String collar) {
			this.collar = collar;
			return this;
		}
		public Builder withColor(Integer color) {
			this.color = color;
			return this;
		}
		public Builder withCountry_of_manufacture(String country_of_manufacture) {
			this.country_of_manufacture = country_of_manufacture;
			return this;
		}
		public Builder withCreated_at(String created_at) {
			this.created_at = created_at;
			return this;
		}
		public Builder withCrosssell_products(List<ProductInterface> crosssell_products) {
			this.crosssell_products = crosssell_products;
			return this;
		}
		public Builder withDescription(ComplexTextValue description) {
			this.description = description;
			return this;
		}
		public Builder withEco_collection(Integer eco_collection) {
			this.eco_collection = eco_collection;
			return this;
		}
		public Builder withErin_recommends(Integer erin_recommends) {
			this.erin_recommends = erin_recommends;
			return this;
		}
		public Builder withFeatures_bags(String features_bags) {
			this.features_bags = features_bags;
			return this;
		}
		public Builder withFormat(Integer format) {
			this.format = format;
			return this;
		}
		public Builder withGender(String gender) {
			this.gender = gender;
			return this;
		}
		public Builder withGift_message_available(String gift_message_available) {
			this.gift_message_available = gift_message_available;
			return this;
		}
		public Builder withId(Integer id) {
			this.id = id;
			return this;
		}
		public Builder withImage(ProductImage image) {
			this.image = image;
			return this;
		}
		public Builder withManufacturer(Integer manufacturer) {
			this.manufacturer = manufacturer;
			return this;
		}
		public Builder withMaterial(String material) {
			this.material = material;
			return this;
		}
		public Builder withMedia_gallery(List<MediaGalleryInterface> media_gallery) {
			this.media_gallery = media_gallery;
			return this;
		}
		public Builder withMedia_gallery_entries(List<MediaGalleryEntry> media_gallery_entries) {
			this.media_gallery_entries = media_gallery_entries;
			return this;
		}
		public Builder withMeta_description(String meta_description) {
			this.meta_description = meta_description;
			return this;
		}
		public Builder withMeta_keyword(String meta_keyword) {
			this.meta_keyword = meta_keyword;
			return this;
		}
		public Builder withMeta_title(String meta_title) {
			this.meta_title = meta_title;
			return this;
		}
		public Builder withName(String name) {
			this.name = name;
			return this;
		}
		public Builder withNew(Integer _new) {
			this._new = _new;
			return this;
		}
		public Builder withNew_from_date(String new_from_date) {
			this.new_from_date = new_from_date;
			return this;
		}
		public Builder withNew_to_date(String new_to_date) {
			this.new_to_date = new_to_date;
			return this;
		}
		public Builder withOnly_x_left_in_stock(Double only_x_left_in_stock) {
			this.only_x_left_in_stock = only_x_left_in_stock;
			return this;
		}
		public Builder withOptions(List<CustomizableOptionInterface> options) {
			this.options = options;
			return this;
		}
		public Builder withOptions_container(String options_container) {
			this.options_container = options_container;
			return this;
		}
		public Builder withPattern(String pattern) {
			this.pattern = pattern;
			return this;
		}
		public Builder withPerformance_fabric(Integer performance_fabric) {
			this.performance_fabric = performance_fabric;
			return this;
		}
		public Builder withPrice(ProductPrices price) {
			this.price = price;
			return this;
		}
		public Builder withPrice_range(PriceRange price_range) {
			this.price_range = price_range;
			return this;
		}
		public Builder withPrice_tiers(List<TierPrice> price_tiers) {
			this.price_tiers = price_tiers;
			return this;
		}
		public Builder withProduct_links(List<ProductLinksInterface> product_links) {
			this.product_links = product_links;
			return this;
		}
		public Builder withRelated_products(List<ProductInterface> related_products) {
			this.related_products = related_products;
			return this;
		}
		public Builder withSale(Integer sale) {
			this.sale = sale;
			return this;
		}
		public Builder withShort_description(ComplexTextValue short_description) {
			this.short_description = short_description;
			return this;
		}
		public Builder withSize(Integer size) {
			this.size = size;
			return this;
		}
		public Builder withSku(String sku) {
			this.sku = sku;
			return this;
		}
		public Builder withSleeve(String sleeve) {
			this.sleeve = sleeve;
			return this;
		}
		public Builder withSmall_image(ProductImage small_image) {
			this.small_image = small_image;
			return this;
		}
		public Builder withSpecial_from_date(String special_from_date) {
			this.special_from_date = special_from_date;
			return this;
		}
		public Builder withSpecial_price(Double special_price) {
			this.special_price = special_price;
			return this;
		}
		public Builder withSpecial_to_date(String special_to_date) {
			this.special_to_date = special_to_date;
			return this;
		}
		public Builder withStock_status(ProductStockStatus stock_status) {
			this.stock_status = stock_status;
			return this;
		}
		public Builder withStrap_bags(String strap_bags) {
			this.strap_bags = strap_bags;
			return this;
		}
		public Builder withStyle_bags(String style_bags) {
			this.style_bags = style_bags;
			return this;
		}
		public Builder withStyle_bottom(String style_bottom) {
			this.style_bottom = style_bottom;
			return this;
		}
		public Builder withStyle_general(String style_general) {
			this.style_general = style_general;
			return this;
		}
		public Builder withSwatch_image(String swatch_image) {
			this.swatch_image = swatch_image;
			return this;
		}
		public Builder withThumbnail(ProductImage thumbnail) {
			this.thumbnail = thumbnail;
			return this;
		}
		public Builder withTier_price(Double tier_price) {
			this.tier_price = tier_price;
			return this;
		}
		public Builder withTier_prices(List<ProductTierPrices> tier_prices) {
			this.tier_prices = tier_prices;
			return this;
		}
		public Builder withType_id(String type_id) {
			this.type_id = type_id;
			return this;
		}
		public Builder withUpdated_at(String updated_at) {
			this.updated_at = updated_at;
			return this;
		}
		public Builder withUpsell_products(List<ProductInterface> upsell_products) {
			this.upsell_products = upsell_products;
			return this;
		}
		public Builder withUrl_key(String url_key) {
			this.url_key = url_key;
			return this;
		}
		public Builder withUrl_path(String url_path) {
			this.url_path = url_path;
			return this;
		}
		public Builder withUrl_rewrites(List<UrlRewrite> url_rewrites) {
			this.url_rewrites = url_rewrites;
			return this;
		}
		public Builder withUrl_suffix(String url_suffix) {
			this.url_suffix = url_suffix;
			return this;
		}
		public Builder withWebsites(List<Website> websites) {
			this.websites = websites;
			return this;
		}
		public Builder withWeight(Double weight) {
			this.weight = weight;
			return this;
		}

		public SimpleProduct build() {
			SimpleProduct _object = new SimpleProduct();
			_object.setActivity(activity);
			_object.setAttribute_set_id(attribute_set_id);
			_object.setCanonical_url(canonical_url);
			_object.setCategories(categories);
			_object.setCategory_gear(category_gear);
			_object.setClimate(climate);
			_object.setCollar(collar);
			_object.setColor(color);
			_object.setCountry_of_manufacture(country_of_manufacture);
			_object.setCreated_at(created_at);
			_object.setCrosssell_products(crosssell_products);
			_object.setDescription(description);
			_object.setEco_collection(eco_collection);
			_object.setErin_recommends(erin_recommends);
			_object.setFeatures_bags(features_bags);
			_object.setFormat(format);
			_object.setGender(gender);
			_object.setGift_message_available(gift_message_available);
			_object.setId(id);
			_object.setImage(image);
			_object.setManufacturer(manufacturer);
			_object.setMaterial(material);
			_object.setMedia_gallery(media_gallery);
			_object.setMedia_gallery_entries(media_gallery_entries);
			_object.setMeta_description(meta_description);
			_object.setMeta_keyword(meta_keyword);
			_object.setMeta_title(meta_title);
			_object.setName(name);
			_object.setNew(_new);
			_object.setNew_from_date(new_from_date);
			_object.setNew_to_date(new_to_date);
			_object.setOnly_x_left_in_stock(only_x_left_in_stock);
			_object.setOptions(options);
			_object.setOptions_container(options_container);
			_object.setPattern(pattern);
			_object.setPerformance_fabric(performance_fabric);
			_object.setPrice(price);
			_object.setPrice_range(price_range);
			_object.setPrice_tiers(price_tiers);
			_object.setProduct_links(product_links);
			_object.setRelated_products(related_products);
			_object.setSale(sale);
			_object.setShort_description(short_description);
			_object.setSize(size);
			_object.setSku(sku);
			_object.setSleeve(sleeve);
			_object.setSmall_image(small_image);
			_object.setSpecial_from_date(special_from_date);
			_object.setSpecial_price(special_price);
			_object.setSpecial_to_date(special_to_date);
			_object.setStock_status(stock_status);
			_object.setStrap_bags(strap_bags);
			_object.setStyle_bags(style_bags);
			_object.setStyle_bottom(style_bottom);
			_object.setStyle_general(style_general);
			_object.setSwatch_image(swatch_image);
			_object.setThumbnail(thumbnail);
			_object.setTier_price(tier_price);
			_object.setTier_prices(tier_prices);
			_object.setType_id(type_id);
			_object.setUpdated_at(updated_at);
			_object.setUpsell_products(upsell_products);
			_object.setUrl_key(url_key);
			_object.setUrl_path(url_path);
			_object.setUrl_rewrites(url_rewrites);
			_object.setUrl_suffix(url_suffix);
			_object.setWebsites(websites);
			_object.setWeight(weight);
			return _object;
		}
	}
}
