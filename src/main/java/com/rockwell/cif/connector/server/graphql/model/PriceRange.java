/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("PriceRange")
public class PriceRange  {

	public PriceRange(){
		// No action
	}

	public PriceRange(ProductPrice maximum_price, ProductPrice minimum_price) {
		this.maximum_price = maximum_price;
		this.minimum_price = minimum_price;
	}

	@GraphQLNonScalar(fieldName = "maximum_price", graphQLTypeName = "ProductPrice", javaClass = ProductPrice.class)
	ProductPrice maximum_price;


	@GraphQLNonScalar(fieldName = "minimum_price", graphQLTypeName = "ProductPrice", javaClass = ProductPrice.class)
	ProductPrice minimum_price;



	public void setMaximum_price(ProductPrice maximum_price) {
		this.maximum_price = maximum_price;
	}

	public ProductPrice getMaximum_price() {
		return maximum_price;
	}

	public void setMinimum_price(ProductPrice minimum_price) {
		this.minimum_price = minimum_price;
	}

	public ProductPrice getMinimum_price() {
		return minimum_price;
	}

    public String toString() {
        return "PriceRange {"
				+ "maximum_price: " + maximum_price
				+ ", "
				+ "minimum_price: " + minimum_price
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Maximum_price("maximum_price"),
		Minimum_price("minimum_price");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private ProductPrice maximum_price;
		private ProductPrice minimum_price;


		public Builder withMaximum_price(ProductPrice maximum_price) {
			this.maximum_price = maximum_price;
			return this;
		}
		public Builder withMinimum_price(ProductPrice minimum_price) {
			this.minimum_price = minimum_price;
			return this;
		}

		public PriceRange build() {
			PriceRange _object = new PriceRange();
			_object.setMaximum_price(maximum_price);
			_object.setMinimum_price(minimum_price);
			return _object;
		}
	}
}
