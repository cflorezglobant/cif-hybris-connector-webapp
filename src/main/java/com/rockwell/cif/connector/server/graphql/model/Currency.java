/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Currency")
public class Currency  {

	public Currency(){
		// No action
	}

	@GraphQLScalar(fieldName = "available_currency_codes", graphQLTypeName = "String", javaClass = String.class)
	List<String> available_currency_codes;


	@GraphQLScalar(fieldName = "base_currency_code", graphQLTypeName = "String", javaClass = String.class)
	String base_currency_code;


	@GraphQLScalar(fieldName = "base_currency_symbol", graphQLTypeName = "String", javaClass = String.class)
	String base_currency_symbol;


	@GraphQLScalar(fieldName = "default_display_currecy_code", graphQLTypeName = "String", javaClass = String.class)
	String default_display_currecy_code;


	@GraphQLScalar(fieldName = "default_display_currecy_symbol", graphQLTypeName = "String", javaClass = String.class)
	String default_display_currecy_symbol;


	@GraphQLScalar(fieldName = "default_display_currency_code", graphQLTypeName = "String", javaClass = String.class)
	String default_display_currency_code;


	@GraphQLScalar(fieldName = "default_display_currency_symbol", graphQLTypeName = "String", javaClass = String.class)
	String default_display_currency_symbol;


	@GraphQLNonScalar(fieldName = "exchange_rates", graphQLTypeName = "ExchangeRate", javaClass = ExchangeRate.class)
	List<ExchangeRate> exchange_rates;



	public void setAvailable_currency_codes(List<String> available_currency_codes) {
		this.available_currency_codes = available_currency_codes;
	}

	public List<String> getAvailable_currency_codes() {
		return available_currency_codes;
	}

	public void setBase_currency_code(String base_currency_code) {
		this.base_currency_code = base_currency_code;
	}

	public String getBase_currency_code() {
		return base_currency_code;
	}

	public void setBase_currency_symbol(String base_currency_symbol) {
		this.base_currency_symbol = base_currency_symbol;
	}

	public String getBase_currency_symbol() {
		return base_currency_symbol;
	}

	public void setDefault_display_currecy_code(String default_display_currecy_code) {
		this.default_display_currecy_code = default_display_currecy_code;
	}

	public String getDefault_display_currecy_code() {
		return default_display_currecy_code;
	}

	public void setDefault_display_currecy_symbol(String default_display_currecy_symbol) {
		this.default_display_currecy_symbol = default_display_currecy_symbol;
	}

	public String getDefault_display_currecy_symbol() {
		return default_display_currecy_symbol;
	}

	public void setDefault_display_currency_code(String default_display_currency_code) {
		this.default_display_currency_code = default_display_currency_code;
	}

	public String getDefault_display_currency_code() {
		return default_display_currency_code;
	}

	public void setDefault_display_currency_symbol(String default_display_currency_symbol) {
		this.default_display_currency_symbol = default_display_currency_symbol;
	}

	public String getDefault_display_currency_symbol() {
		return default_display_currency_symbol;
	}

	public void setExchange_rates(List<ExchangeRate> exchange_rates) {
		this.exchange_rates = exchange_rates;
	}

	public List<ExchangeRate> getExchange_rates() {
		return exchange_rates;
	}

    public String toString() {
        return "Currency {"
				+ "available_currency_codes: " + available_currency_codes
				+ ", "
				+ "base_currency_code: " + base_currency_code
				+ ", "
				+ "base_currency_symbol: " + base_currency_symbol
				+ ", "
				+ "default_display_currecy_code: " + default_display_currecy_code
				+ ", "
				+ "default_display_currecy_symbol: " + default_display_currecy_symbol
				+ ", "
				+ "default_display_currency_code: " + default_display_currency_code
				+ ", "
				+ "default_display_currency_symbol: " + default_display_currency_symbol
				+ ", "
				+ "exchange_rates: " + exchange_rates
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Available_currency_codes("available_currency_codes"),
		Base_currency_code("base_currency_code"),
		Base_currency_symbol("base_currency_symbol"),
		Default_display_currecy_code("default_display_currecy_code"),
		Default_display_currecy_symbol("default_display_currecy_symbol"),
		Default_display_currency_code("default_display_currency_code"),
		Default_display_currency_symbol("default_display_currency_symbol"),
		Exchange_rates("exchange_rates");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private List<String> available_currency_codes;
		private String base_currency_code;
		private String base_currency_symbol;
		private String default_display_currecy_code;
		private String default_display_currecy_symbol;
		private String default_display_currency_code;
		private String default_display_currency_symbol;
		private List<ExchangeRate> exchange_rates;


		public Builder withAvailable_currency_codes(List<String> available_currency_codes) {
			this.available_currency_codes = available_currency_codes;
			return this;
		}
		public Builder withBase_currency_code(String base_currency_code) {
			this.base_currency_code = base_currency_code;
			return this;
		}
		public Builder withBase_currency_symbol(String base_currency_symbol) {
			this.base_currency_symbol = base_currency_symbol;
			return this;
		}
		public Builder withDefault_display_currecy_code(String default_display_currecy_code) {
			this.default_display_currecy_code = default_display_currecy_code;
			return this;
		}
		public Builder withDefault_display_currecy_symbol(String default_display_currecy_symbol) {
			this.default_display_currecy_symbol = default_display_currecy_symbol;
			return this;
		}
		public Builder withDefault_display_currency_code(String default_display_currency_code) {
			this.default_display_currency_code = default_display_currency_code;
			return this;
		}
		public Builder withDefault_display_currency_symbol(String default_display_currency_symbol) {
			this.default_display_currency_symbol = default_display_currency_symbol;
			return this;
		}
		public Builder withExchange_rates(List<ExchangeRate> exchange_rates) {
			this.exchange_rates = exchange_rates;
			return this;
		}

		public Currency build() {
			Currency _object = new Currency();
			_object.setAvailable_currency_codes(available_currency_codes);
			_object.setBase_currency_code(base_currency_code);
			_object.setBase_currency_symbol(base_currency_symbol);
			_object.setDefault_display_currecy_code(default_display_currecy_code);
			_object.setDefault_display_currecy_symbol(default_display_currecy_symbol);
			_object.setDefault_display_currency_code(default_display_currency_code);
			_object.setDefault_display_currency_symbol(default_display_currency_symbol);
			_object.setExchange_rates(exchange_rates);
			return _object;
		}
	}
}
