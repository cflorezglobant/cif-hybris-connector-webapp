/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("ShippingAddressInput")
public class ShippingAddressInput  {

	public ShippingAddressInput(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "address", graphQLTypeName = "CartAddressInput", javaClass = CartAddressInput.class)
	CartAddressInput address;


	@GraphQLScalar(fieldName = "customer_address_id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer customer_address_id;


	@GraphQLScalar(fieldName = "customer_notes", graphQLTypeName = "String", javaClass = String.class)
	String customer_notes;



	public void setAddress(CartAddressInput address) {
		this.address = address;
	}

	public CartAddressInput getAddress() {
		return address;
	}

	public void setCustomer_address_id(Integer customer_address_id) {
		this.customer_address_id = customer_address_id;
	}

	public Integer getCustomer_address_id() {
		return customer_address_id;
	}

	public void setCustomer_notes(String customer_notes) {
		this.customer_notes = customer_notes;
	}

	public String getCustomer_notes() {
		return customer_notes;
	}

    public String toString() {
        return "ShippingAddressInput {"
				+ "address: " + address
				+ ", "
				+ "customer_address_id: " + customer_address_id
				+ ", "
				+ "customer_notes: " + customer_notes
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Address("address"),
		Customer_address_id("customer_address_id"),
		Customer_notes("customer_notes");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private CartAddressInput address;
		private Integer customer_address_id;
		private String customer_notes;


		public Builder withAddress(CartAddressInput address) {
			this.address = address;
			return this;
		}
		public Builder withCustomer_address_id(Integer customer_address_id) {
			this.customer_address_id = customer_address_id;
			return this;
		}
		public Builder withCustomer_notes(String customer_notes) {
			this.customer_notes = customer_notes;
			return this;
		}

		public ShippingAddressInput build() {
			ShippingAddressInput _object = new ShippingAddressInput();
			_object.setAddress(address);
			_object.setCustomer_address_id(customer_address_id);
			_object.setCustomer_notes(customer_notes);
			return _object;
		}
	}
}
