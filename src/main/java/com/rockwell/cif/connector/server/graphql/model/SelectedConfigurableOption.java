/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("SelectedConfigurableOption")
public class SelectedConfigurableOption  {

	public SelectedConfigurableOption(){
		// No action
	}

	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer id;


	@GraphQLScalar(fieldName = "option_label", graphQLTypeName = "String", javaClass = String.class)
	String option_label;


	@GraphQLScalar(fieldName = "value_id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer value_id;


	@GraphQLScalar(fieldName = "value_label", graphQLTypeName = "String", javaClass = String.class)
	String value_label;



	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setOption_label(String option_label) {
		this.option_label = option_label;
	}

	public String getOption_label() {
		return option_label;
	}

	public void setValue_id(Integer value_id) {
		this.value_id = value_id;
	}

	public Integer getValue_id() {
		return value_id;
	}

	public void setValue_label(String value_label) {
		this.value_label = value_label;
	}

	public String getValue_label() {
		return value_label;
	}

    public String toString() {
        return "SelectedConfigurableOption {"
				+ "id: " + id
				+ ", "
				+ "option_label: " + option_label
				+ ", "
				+ "value_id: " + value_id
				+ ", "
				+ "value_label: " + value_label
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Id("id"),
		Option_label("option_label"),
		Value_id("value_id"),
		Value_label("value_label");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Integer id;
		private String option_label;
		private Integer value_id;
		private String value_label;


		public Builder withId(Integer id) {
			this.id = id;
			return this;
		}
		public Builder withOption_label(String option_label) {
			this.option_label = option_label;
			return this;
		}
		public Builder withValue_id(Integer value_id) {
			this.value_id = value_id;
			return this;
		}
		public Builder withValue_label(String value_label) {
			this.value_label = value_label;
			return this;
		}

		public SelectedConfigurableOption build() {
			SelectedConfigurableOption _object = new SelectedConfigurableOption();
			_object.setId(id);
			_object.setOption_label(option_label);
			_object.setValue_id(value_id);
			_object.setValue_label(value_label);
			return _object;
		}
	}
}
