/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("BundleItemOption")
public class BundleItemOption  {

	public BundleItemOption(){
		// No action
	}

	@GraphQLScalar(fieldName = "can_change_quantity", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean can_change_quantity;


	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer id;


	@GraphQLScalar(fieldName = "is_default", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean is_default;


	@GraphQLScalar(fieldName = "label", graphQLTypeName = "String", javaClass = String.class)
	String label;


	@GraphQLScalar(fieldName = "position", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer position;


	@GraphQLScalar(fieldName = "price", graphQLTypeName = "Float", javaClass = Double.class)
	Double price;


	@GraphQLScalar(fieldName = "price_type", graphQLTypeName = "PriceTypeEnum", javaClass = PriceTypeEnum.class)
	PriceTypeEnum price_type;


	@GraphQLNonScalar(fieldName = "product", graphQLTypeName = "ProductInterface", javaClass = ProductInterface.class)
	ProductInterface product;


	@GraphQLScalar(fieldName = "qty", graphQLTypeName = "Float", javaClass = Double.class)
	Double qty;


	@GraphQLScalar(fieldName = "quantity", graphQLTypeName = "Float", javaClass = Double.class)
	Double quantity;



	public void setCan_change_quantity(Boolean can_change_quantity) {
		this.can_change_quantity = can_change_quantity;
	}

	public Boolean getCan_change_quantity() {
		return can_change_quantity;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setIs_default(Boolean is_default) {
		this.is_default = is_default;
	}

	public Boolean getIs_default() {
		return is_default;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public String getLabel() {
		return label;
	}

	public void setPosition(Integer position) {
		this.position = position;
	}

	public Integer getPosition() {
		return position;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	public Double getPrice() {
		return price;
	}

	public void setPrice_type(PriceTypeEnum price_type) {
		this.price_type = price_type;
	}

	public PriceTypeEnum getPrice_type() {
		return price_type;
	}

	public void setProduct(ProductInterface product) {
		this.product = product;
	}

	public ProductInterface getProduct() {
		return product;
	}

	public void setQty(Double qty) {
		this.qty = qty;
	}

	public Double getQty() {
		return qty;
	}

	public void setQuantity(Double quantity) {
		this.quantity = quantity;
	}

	public Double getQuantity() {
		return quantity;
	}

    public String toString() {
        return "BundleItemOption {"
				+ "can_change_quantity: " + can_change_quantity
				+ ", "
				+ "id: " + id
				+ ", "
				+ "is_default: " + is_default
				+ ", "
				+ "label: " + label
				+ ", "
				+ "position: " + position
				+ ", "
				+ "price: " + price
				+ ", "
				+ "price_type: " + price_type
				+ ", "
				+ "product: " + product
				+ ", "
				+ "qty: " + qty
				+ ", "
				+ "quantity: " + quantity
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Can_change_quantity("can_change_quantity"),
		Id("id"),
		Is_default("is_default"),
		Label("label"),
		Position("position"),
		Price("price"),
		Price_type("price_type"),
		Product("product"),
		Qty("qty"),
		Quantity("quantity");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Boolean can_change_quantity;
		private Integer id;
		private Boolean is_default;
		private String label;
		private Integer position;
		private Double price;
		private PriceTypeEnum price_type;
		private ProductInterface product;
		private Double qty;
		private Double quantity;


		public Builder withCan_change_quantity(Boolean can_change_quantity) {
			this.can_change_quantity = can_change_quantity;
			return this;
		}
		public Builder withId(Integer id) {
			this.id = id;
			return this;
		}
		public Builder withIs_default(Boolean is_default) {
			this.is_default = is_default;
			return this;
		}
		public Builder withLabel(String label) {
			this.label = label;
			return this;
		}
		public Builder withPosition(Integer position) {
			this.position = position;
			return this;
		}
		public Builder withPrice(Double price) {
			this.price = price;
			return this;
		}
		public Builder withPrice_type(PriceTypeEnum price_type) {
			this.price_type = price_type;
			return this;
		}
		public Builder withProduct(ProductInterface product) {
			this.product = product;
			return this;
		}
		public Builder withQty(Double qty) {
			this.qty = qty;
			return this;
		}
		public Builder withQuantity(Double quantity) {
			this.quantity = quantity;
			return this;
		}

		public BundleItemOption build() {
			BundleItemOption _object = new BundleItemOption();
			_object.setCan_change_quantity(can_change_quantity);
			_object.setId(id);
			_object.setIs_default(is_default);
			_object.setLabel(label);
			_object.setPosition(position);
			_object.setPrice(price);
			_object.setPrice_type(price_type);
			_object.setProduct(product);
			_object.setQty(qty);
			_object.setQuantity(quantity);
			return _object;
		}
	}
}
