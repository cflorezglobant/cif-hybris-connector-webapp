/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("PaypalExpressTokenInput")
public class PaypalExpressTokenInput  {

	public PaypalExpressTokenInput(){
		// No action
	}

	@GraphQLScalar(fieldName = "cart_id", graphQLTypeName = "String", javaClass = String.class)
	String cart_id;


	@GraphQLScalar(fieldName = "code", graphQLTypeName = "String", javaClass = String.class)
	String code;


	@GraphQLScalar(fieldName = "express_button", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean express_button;


	@GraphQLNonScalar(fieldName = "urls", graphQLTypeName = "PaypalExpressUrlsInput", javaClass = PaypalExpressUrlsInput.class)
	PaypalExpressUrlsInput urls;


	@GraphQLScalar(fieldName = "use_paypal_credit", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean use_paypal_credit;



	public void setCart_id(String cart_id) {
		this.cart_id = cart_id;
	}

	public String getCart_id() {
		return cart_id;
	}

	public void setCode(String code) {
		this.code = code;
	}

	public String getCode() {
		return code;
	}

	public void setExpress_button(Boolean express_button) {
		this.express_button = express_button;
	}

	public Boolean getExpress_button() {
		return express_button;
	}

	public void setUrls(PaypalExpressUrlsInput urls) {
		this.urls = urls;
	}

	public PaypalExpressUrlsInput getUrls() {
		return urls;
	}

	public void setUse_paypal_credit(Boolean use_paypal_credit) {
		this.use_paypal_credit = use_paypal_credit;
	}

	public Boolean getUse_paypal_credit() {
		return use_paypal_credit;
	}

    public String toString() {
        return "PaypalExpressTokenInput {"
				+ "cart_id: " + cart_id
				+ ", "
				+ "code: " + code
				+ ", "
				+ "express_button: " + express_button
				+ ", "
				+ "urls: " + urls
				+ ", "
				+ "use_paypal_credit: " + use_paypal_credit
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Cart_id("cart_id"),
		Code("code"),
		Express_button("express_button"),
		Urls("urls"),
		Use_paypal_credit("use_paypal_credit");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String cart_id;
		private String code;
		private Boolean express_button;
		private PaypalExpressUrlsInput urls;
		private Boolean use_paypal_credit;


		public Builder withCart_id(String cart_id) {
			this.cart_id = cart_id;
			return this;
		}
		public Builder withCode(String code) {
			this.code = code;
			return this;
		}
		public Builder withExpress_button(Boolean express_button) {
			this.express_button = express_button;
			return this;
		}
		public Builder withUrls(PaypalExpressUrlsInput urls) {
			this.urls = urls;
			return this;
		}
		public Builder withUse_paypal_credit(Boolean use_paypal_credit) {
			this.use_paypal_credit = use_paypal_credit;
			return this;
		}

		public PaypalExpressTokenInput build() {
			PaypalExpressTokenInput _object = new PaypalExpressTokenInput();
			_object.setCart_id(cart_id);
			_object.setCode(code);
			_object.setExpress_button(express_button);
			_object.setUrls(urls);
			_object.setUse_paypal_credit(use_paypal_credit);
			return _object;
		}
	}
}
