/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Price")
public class Price  {

	public Price(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "adjustments", graphQLTypeName = "PriceAdjustment", javaClass = PriceAdjustment.class)
	List<PriceAdjustment> adjustments;


	@GraphQLNonScalar(fieldName = "amount", graphQLTypeName = "Money", javaClass = Money.class)
	Money amount;



	public void setAdjustments(List<PriceAdjustment> adjustments) {
		this.adjustments = adjustments;
	}

	public List<PriceAdjustment> getAdjustments() {
		return adjustments;
	}

	public void setAmount(Money amount) {
		this.amount = amount;
	}

	public Money getAmount() {
		return amount;
	}

    public String toString() {
        return "Price {"
				+ "adjustments: " + adjustments
				+ ", "
				+ "amount: " + amount
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Adjustments("adjustments"),
		Amount("amount");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private List<PriceAdjustment> adjustments;
		private Money amount;


		public Builder withAdjustments(List<PriceAdjustment> adjustments) {
			this.adjustments = adjustments;
			return this;
		}
		public Builder withAmount(Money amount) {
			this.amount = amount;
			return this;
		}

		public Price build() {
			Price _object = new Price();
			_object.setAdjustments(adjustments);
			_object.setAmount(amount);
			return _object;
		}
	}
}
