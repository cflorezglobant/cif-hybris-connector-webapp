/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Customer")
public class Customer  {

	public Customer(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "addresses", graphQLTypeName = "CustomerAddress", javaClass = CustomerAddress.class)
	List<CustomerAddress> addresses;


	@GraphQLScalar(fieldName = "created_at", graphQLTypeName = "String", javaClass = String.class)
	String created_at;


	@GraphQLScalar(fieldName = "date_of_birth", graphQLTypeName = "String", javaClass = String.class)
	String date_of_birth;


	@GraphQLScalar(fieldName = "default_billing", graphQLTypeName = "String", javaClass = String.class)
	String default_billing;


	@GraphQLScalar(fieldName = "default_shipping", graphQLTypeName = "String", javaClass = String.class)
	String default_shipping;


	@GraphQLScalar(fieldName = "dob", graphQLTypeName = "String", javaClass = String.class)
	String dob;


	@GraphQLScalar(fieldName = "email", graphQLTypeName = "String", javaClass = String.class)
	String email;


	@GraphQLScalar(fieldName = "firstname", graphQLTypeName = "String", javaClass = String.class)
	String firstname;


	@GraphQLScalar(fieldName = "gender", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer gender;


	@GraphQLScalar(fieldName = "group_id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer group_id;


	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer id;


	@GraphQLScalar(fieldName = "is_subscribed", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean is_subscribed;


	@GraphQLScalar(fieldName = "lastname", graphQLTypeName = "String", javaClass = String.class)
	String lastname;


	@GraphQLScalar(fieldName = "middlename", graphQLTypeName = "String", javaClass = String.class)
	String middlename;


	@GraphQLScalar(fieldName = "prefix", graphQLTypeName = "String", javaClass = String.class)
	String prefix;


	@GraphQLScalar(fieldName = "suffix", graphQLTypeName = "String", javaClass = String.class)
	String suffix;


	@GraphQLScalar(fieldName = "taxvat", graphQLTypeName = "String", javaClass = String.class)
	String taxvat;


	@GraphQLNonScalar(fieldName = "wishlist", graphQLTypeName = "Wishlist", javaClass = Wishlist.class)
	Wishlist wishlist;



	public void setAddresses(List<CustomerAddress> addresses) {
		this.addresses = addresses;
	}

	public List<CustomerAddress> getAddresses() {
		return addresses;
	}

	public void setCreated_at(String created_at) {
		this.created_at = created_at;
	}

	public String getCreated_at() {
		return created_at;
	}

	public void setDate_of_birth(String date_of_birth) {
		this.date_of_birth = date_of_birth;
	}

	public String getDate_of_birth() {
		return date_of_birth;
	}

	public void setDefault_billing(String default_billing) {
		this.default_billing = default_billing;
	}

	public String getDefault_billing() {
		return default_billing;
	}

	public void setDefault_shipping(String default_shipping) {
		this.default_shipping = default_shipping;
	}

	public String getDefault_shipping() {
		return default_shipping;
	}

	public void setDob(String dob) {
		this.dob = dob;
	}

	public String getDob() {
		return dob;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getEmail() {
		return email;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	public String getFirstname() {
		return firstname;
	}

	public void setGender(Integer gender) {
		this.gender = gender;
	}

	public Integer getGender() {
		return gender;
	}

	public void setGroup_id(Integer group_id) {
		this.group_id = group_id;
	}

	public Integer getGroup_id() {
		return group_id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setIs_subscribed(Boolean is_subscribed) {
		this.is_subscribed = is_subscribed;
	}

	public Boolean getIs_subscribed() {
		return is_subscribed;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	public String getLastname() {
		return lastname;
	}

	public void setMiddlename(String middlename) {
		this.middlename = middlename;
	}

	public String getMiddlename() {
		return middlename;
	}

	public void setPrefix(String prefix) {
		this.prefix = prefix;
	}

	public String getPrefix() {
		return prefix;
	}

	public void setSuffix(String suffix) {
		this.suffix = suffix;
	}

	public String getSuffix() {
		return suffix;
	}

	public void setTaxvat(String taxvat) {
		this.taxvat = taxvat;
	}

	public String getTaxvat() {
		return taxvat;
	}

	public void setWishlist(Wishlist wishlist) {
		this.wishlist = wishlist;
	}

	public Wishlist getWishlist() {
		return wishlist;
	}

    public String toString() {
        return "Customer {"
				+ "addresses: " + addresses
				+ ", "
				+ "created_at: " + created_at
				+ ", "
				+ "date_of_birth: " + date_of_birth
				+ ", "
				+ "default_billing: " + default_billing
				+ ", "
				+ "default_shipping: " + default_shipping
				+ ", "
				+ "dob: " + dob
				+ ", "
				+ "email: " + email
				+ ", "
				+ "firstname: " + firstname
				+ ", "
				+ "gender: " + gender
				+ ", "
				+ "group_id: " + group_id
				+ ", "
				+ "id: " + id
				+ ", "
				+ "is_subscribed: " + is_subscribed
				+ ", "
				+ "lastname: " + lastname
				+ ", "
				+ "middlename: " + middlename
				+ ", "
				+ "prefix: " + prefix
				+ ", "
				+ "suffix: " + suffix
				+ ", "
				+ "taxvat: " + taxvat
				+ ", "
				+ "wishlist: " + wishlist
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Addresses("addresses"),
		Created_at("created_at"),
		Date_of_birth("date_of_birth"),
		Default_billing("default_billing"),
		Default_shipping("default_shipping"),
		Dob("dob"),
		Email("email"),
		Firstname("firstname"),
		Gender("gender"),
		Group_id("group_id"),
		Id("id"),
		Is_subscribed("is_subscribed"),
		Lastname("lastname"),
		Middlename("middlename"),
		Prefix("prefix"),
		Suffix("suffix"),
		Taxvat("taxvat"),
		Wishlist("wishlist");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private List<CustomerAddress> addresses;
		private String created_at;
		private String date_of_birth;
		private String default_billing;
		private String default_shipping;
		private String dob;
		private String email;
		private String firstname;
		private Integer gender;
		private Integer group_id;
		private Integer id;
		private Boolean is_subscribed;
		private String lastname;
		private String middlename;
		private String prefix;
		private String suffix;
		private String taxvat;
		private Wishlist wishlist;


		public Builder withAddresses(List<CustomerAddress> addresses) {
			this.addresses = addresses;
			return this;
		}
		public Builder withCreated_at(String created_at) {
			this.created_at = created_at;
			return this;
		}
		public Builder withDate_of_birth(String date_of_birth) {
			this.date_of_birth = date_of_birth;
			return this;
		}
		public Builder withDefault_billing(String default_billing) {
			this.default_billing = default_billing;
			return this;
		}
		public Builder withDefault_shipping(String default_shipping) {
			this.default_shipping = default_shipping;
			return this;
		}
		public Builder withDob(String dob) {
			this.dob = dob;
			return this;
		}
		public Builder withEmail(String email) {
			this.email = email;
			return this;
		}
		public Builder withFirstname(String firstname) {
			this.firstname = firstname;
			return this;
		}
		public Builder withGender(Integer gender) {
			this.gender = gender;
			return this;
		}
		public Builder withGroup_id(Integer group_id) {
			this.group_id = group_id;
			return this;
		}
		public Builder withId(Integer id) {
			this.id = id;
			return this;
		}
		public Builder withIs_subscribed(Boolean is_subscribed) {
			this.is_subscribed = is_subscribed;
			return this;
		}
		public Builder withLastname(String lastname) {
			this.lastname = lastname;
			return this;
		}
		public Builder withMiddlename(String middlename) {
			this.middlename = middlename;
			return this;
		}
		public Builder withPrefix(String prefix) {
			this.prefix = prefix;
			return this;
		}
		public Builder withSuffix(String suffix) {
			this.suffix = suffix;
			return this;
		}
		public Builder withTaxvat(String taxvat) {
			this.taxvat = taxvat;
			return this;
		}
		public Builder withWishlist(Wishlist wishlist) {
			this.wishlist = wishlist;
			return this;
		}

		public Customer build() {
			Customer _object = new Customer();
			_object.setAddresses(addresses);
			_object.setCreated_at(created_at);
			_object.setDate_of_birth(date_of_birth);
			_object.setDefault_billing(default_billing);
			_object.setDefault_shipping(default_shipping);
			_object.setDob(dob);
			_object.setEmail(email);
			_object.setFirstname(firstname);
			_object.setGender(gender);
			_object.setGroup_id(group_id);
			_object.setId(id);
			_object.setIs_subscribed(is_subscribed);
			_object.setLastname(lastname);
			_object.setMiddlename(middlename);
			_object.setPrefix(prefix);
			_object.setSuffix(suffix);
			_object.setTaxvat(taxvat);
			_object.setWishlist(wishlist);
			return _object;
		}
	}
}
