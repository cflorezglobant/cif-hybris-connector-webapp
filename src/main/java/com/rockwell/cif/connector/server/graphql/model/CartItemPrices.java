/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("CartItemPrices")
public class CartItemPrices  {

	public CartItemPrices(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "discounts", graphQLTypeName = "Discount", javaClass = Discount.class)
	List<Discount> discounts;


	@GraphQLNonScalar(fieldName = "price", graphQLTypeName = "Money", javaClass = Money.class)
	Money price;


	@GraphQLNonScalar(fieldName = "row_total", graphQLTypeName = "Money", javaClass = Money.class)
	Money row_total;


	@GraphQLNonScalar(fieldName = "row_total_including_tax", graphQLTypeName = "Money", javaClass = Money.class)
	Money row_total_including_tax;


	@GraphQLNonScalar(fieldName = "total_item_discount", graphQLTypeName = "Money", javaClass = Money.class)
	Money total_item_discount;



	public void setDiscounts(List<Discount> discounts) {
		this.discounts = discounts;
	}

	public List<Discount> getDiscounts() {
		return discounts;
	}

	public void setPrice(Money price) {
		this.price = price;
	}

	public Money getPrice() {
		return price;
	}

	public void setRow_total(Money row_total) {
		this.row_total = row_total;
	}

	public Money getRow_total() {
		return row_total;
	}

	public void setRow_total_including_tax(Money row_total_including_tax) {
		this.row_total_including_tax = row_total_including_tax;
	}

	public Money getRow_total_including_tax() {
		return row_total_including_tax;
	}

	public void setTotal_item_discount(Money total_item_discount) {
		this.total_item_discount = total_item_discount;
	}

	public Money getTotal_item_discount() {
		return total_item_discount;
	}

    public String toString() {
        return "CartItemPrices {"
				+ "discounts: " + discounts
				+ ", "
				+ "price: " + price
				+ ", "
				+ "row_total: " + row_total
				+ ", "
				+ "row_total_including_tax: " + row_total_including_tax
				+ ", "
				+ "total_item_discount: " + total_item_discount
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Discounts("discounts"),
		Price("price"),
		Row_total("row_total"),
		Row_total_including_tax("row_total_including_tax"),
		Total_item_discount("total_item_discount");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private List<Discount> discounts;
		private Money price;
		private Money row_total;
		private Money row_total_including_tax;
		private Money total_item_discount;


		public Builder withDiscounts(List<Discount> discounts) {
			this.discounts = discounts;
			return this;
		}
		public Builder withPrice(Money price) {
			this.price = price;
			return this;
		}
		public Builder withRow_total(Money row_total) {
			this.row_total = row_total;
			return this;
		}
		public Builder withRow_total_including_tax(Money row_total_including_tax) {
			this.row_total_including_tax = row_total_including_tax;
			return this;
		}
		public Builder withTotal_item_discount(Money total_item_discount) {
			this.total_item_discount = total_item_discount;
			return this;
		}

		public CartItemPrices build() {
			CartItemPrices _object = new CartItemPrices();
			_object.setDiscounts(discounts);
			_object.setPrice(price);
			_object.setRow_total(row_total);
			_object.setRow_total_including_tax(row_total_including_tax);
			_object.setTotal_item_discount(total_item_discount);
			return _object;
		}
	}
}
