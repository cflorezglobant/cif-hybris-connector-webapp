/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("ProductTierPrices")
public class ProductTierPrices  {

	public ProductTierPrices(){
		// No action
	}

	@GraphQLScalar(fieldName = "customer_group_id", graphQLTypeName = "String", javaClass = String.class)
	String customer_group_id;


	@GraphQLScalar(fieldName = "percentage_value", graphQLTypeName = "Float", javaClass = Double.class)
	Double percentage_value;


	@GraphQLScalar(fieldName = "qty", graphQLTypeName = "Float", javaClass = Double.class)
	Double qty;


	@GraphQLScalar(fieldName = "value", graphQLTypeName = "Float", javaClass = Double.class)
	Double value;


	@GraphQLScalar(fieldName = "website_id", graphQLTypeName = "Float", javaClass = Double.class)
	Double website_id;



	public void setCustomer_group_id(String customer_group_id) {
		this.customer_group_id = customer_group_id;
	}

	public String getCustomer_group_id() {
		return customer_group_id;
	}

	public void setPercentage_value(Double percentage_value) {
		this.percentage_value = percentage_value;
	}

	public Double getPercentage_value() {
		return percentage_value;
	}

	public void setQty(Double qty) {
		this.qty = qty;
	}

	public Double getQty() {
		return qty;
	}

	public void setValue(Double value) {
		this.value = value;
	}

	public Double getValue() {
		return value;
	}

	public void setWebsite_id(Double website_id) {
		this.website_id = website_id;
	}

	public Double getWebsite_id() {
		return website_id;
	}

    public String toString() {
        return "ProductTierPrices {"
				+ "customer_group_id: " + customer_group_id
				+ ", "
				+ "percentage_value: " + percentage_value
				+ ", "
				+ "qty: " + qty
				+ ", "
				+ "value: " + value
				+ ", "
				+ "website_id: " + website_id
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Customer_group_id("customer_group_id"),
		Percentage_value("percentage_value"),
		Qty("qty"),
		Value("value"),
		Website_id("website_id");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private String customer_group_id;
		private Double percentage_value;
		private Double qty;
		private Double value;
		private Double website_id;


		public Builder withCustomer_group_id(String customer_group_id) {
			this.customer_group_id = customer_group_id;
			return this;
		}
		public Builder withPercentage_value(Double percentage_value) {
			this.percentage_value = percentage_value;
			return this;
		}
		public Builder withQty(Double qty) {
			this.qty = qty;
			return this;
		}
		public Builder withValue(Double value) {
			this.value = value;
			return this;
		}
		public Builder withWebsite_id(Double website_id) {
			this.website_id = website_id;
			return this;
		}

		public ProductTierPrices build() {
			ProductTierPrices _object = new ProductTierPrices();
			_object.setCustomer_group_id(customer_group_id);
			_object.setPercentage_value(percentage_value);
			_object.setQty(qty);
			_object.setValue(value);
			_object.setWebsite_id(website_id);
			return _object;
		}
	}
}
