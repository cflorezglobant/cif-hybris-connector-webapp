/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("PriceAdjustment")
public class PriceAdjustment  {

	public PriceAdjustment(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "amount", graphQLTypeName = "Money", javaClass = Money.class)
	Money amount;


	@GraphQLScalar(fieldName = "code", graphQLTypeName = "PriceAdjustmentCodesEnum", javaClass = PriceAdjustmentCodesEnum.class)
	PriceAdjustmentCodesEnum code;


	@GraphQLScalar(fieldName = "description", graphQLTypeName = "PriceAdjustmentDescriptionEnum", javaClass = PriceAdjustmentDescriptionEnum.class)
	PriceAdjustmentDescriptionEnum description;



	public void setAmount(Money amount) {
		this.amount = amount;
	}

	public Money getAmount() {
		return amount;
	}

	public void setCode(PriceAdjustmentCodesEnum code) {
		this.code = code;
	}

	public PriceAdjustmentCodesEnum getCode() {
		return code;
	}

	public void setDescription(PriceAdjustmentDescriptionEnum description) {
		this.description = description;
	}

	public PriceAdjustmentDescriptionEnum getDescription() {
		return description;
	}

    public String toString() {
        return "PriceAdjustment {"
				+ "amount: " + amount
				+ ", "
				+ "code: " + code
				+ ", "
				+ "description: " + description
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Amount("amount"),
		Code("code"),
		Description("description");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Money amount;
		private PriceAdjustmentCodesEnum code;
		private PriceAdjustmentDescriptionEnum description;


		public Builder withAmount(Money amount) {
			this.amount = amount;
			return this;
		}
		public Builder withCode(PriceAdjustmentCodesEnum code) {
			this.code = code;
			return this;
		}
		public Builder withDescription(PriceAdjustmentDescriptionEnum description) {
			this.description = description;
			return this;
		}

		public PriceAdjustment build() {
			PriceAdjustment _object = new PriceAdjustment();
			_object.setAmount(amount);
			_object.setCode(code);
			_object.setDescription(description);
			return _object;
		}
	}
}
