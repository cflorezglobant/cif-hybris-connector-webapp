/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("BillingAddressInput")
public class BillingAddressInput  {

	public BillingAddressInput(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "address", graphQLTypeName = "CartAddressInput", javaClass = CartAddressInput.class)
	CartAddressInput address;


	@GraphQLScalar(fieldName = "customer_address_id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer customer_address_id;


	@GraphQLScalar(fieldName = "same_as_shipping", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean same_as_shipping;


	@GraphQLScalar(fieldName = "use_for_shipping", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean use_for_shipping;



	public void setAddress(CartAddressInput address) {
		this.address = address;
	}

	public CartAddressInput getAddress() {
		return address;
	}

	public void setCustomer_address_id(Integer customer_address_id) {
		this.customer_address_id = customer_address_id;
	}

	public Integer getCustomer_address_id() {
		return customer_address_id;
	}

	public void setSame_as_shipping(Boolean same_as_shipping) {
		this.same_as_shipping = same_as_shipping;
	}

	public Boolean getSame_as_shipping() {
		return same_as_shipping;
	}

	public void setUse_for_shipping(Boolean use_for_shipping) {
		this.use_for_shipping = use_for_shipping;
	}

	public Boolean getUse_for_shipping() {
		return use_for_shipping;
	}

    public String toString() {
        return "BillingAddressInput {"
				+ "address: " + address
				+ ", "
				+ "customer_address_id: " + customer_address_id
				+ ", "
				+ "same_as_shipping: " + same_as_shipping
				+ ", "
				+ "use_for_shipping: " + use_for_shipping
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Address("address"),
		Customer_address_id("customer_address_id"),
		Same_as_shipping("same_as_shipping"),
		Use_for_shipping("use_for_shipping");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private CartAddressInput address;
		private Integer customer_address_id;
		private Boolean same_as_shipping;
		private Boolean use_for_shipping;


		public Builder withAddress(CartAddressInput address) {
			this.address = address;
			return this;
		}
		public Builder withCustomer_address_id(Integer customer_address_id) {
			this.customer_address_id = customer_address_id;
			return this;
		}
		public Builder withSame_as_shipping(Boolean same_as_shipping) {
			this.same_as_shipping = same_as_shipping;
			return this;
		}
		public Builder withUse_for_shipping(Boolean use_for_shipping) {
			this.use_for_shipping = use_for_shipping;
			return this;
		}

		public BillingAddressInput build() {
			BillingAddressInput _object = new BillingAddressInput();
			_object.setAddress(address);
			_object.setCustomer_address_id(customer_address_id);
			_object.setSame_as_shipping(same_as_shipping);
			_object.setUse_for_shipping(use_for_shipping);
			return _object;
		}
	}
}
