/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("CategoryTree")
public class CategoryTree implements CategoryInterface {

	public CategoryTree(){
		// No action
	}



	@GraphQLScalar(fieldName = "available_sort_by", graphQLTypeName = "String", javaClass = String.class)
	List<String> available_sort_by;


	@GraphQLNonScalar(fieldName = "breadcrumbs", graphQLTypeName = "Breadcrumb", javaClass = Breadcrumb.class)
	List<Breadcrumb> breadcrumbs;


	@GraphQLScalar(fieldName = "canonical_url", graphQLTypeName = "String", javaClass = String.class)
	String canonical_url;


	@GraphQLNonScalar(fieldName = "children", graphQLTypeName = "CategoryTree", javaClass = CategoryTree.class)
	List<CategoryTree> children;


	@GraphQLScalar(fieldName = "children_count", graphQLTypeName = "String", javaClass = String.class)
	String children_count;


	@GraphQLNonScalar(fieldName = "cms_block", graphQLTypeName = "CmsBlock", javaClass = CmsBlock.class)
	CmsBlock cms_block;


	@GraphQLScalar(fieldName = "created_at", graphQLTypeName = "String", javaClass = String.class)
	String created_at;


	@GraphQLScalar(fieldName = "custom_layout_update_file", graphQLTypeName = "String", javaClass = String.class)
	String custom_layout_update_file;


	@GraphQLScalar(fieldName = "default_sort_by", graphQLTypeName = "String", javaClass = String.class)
	String default_sort_by;


	@GraphQLScalar(fieldName = "description", graphQLTypeName = "String", javaClass = String.class)
	String description;


	@GraphQLScalar(fieldName = "display_mode", graphQLTypeName = "String", javaClass = String.class)
	String display_mode;


	@GraphQLScalar(fieldName = "filter_price_range", graphQLTypeName = "Float", javaClass = Double.class)
	Double filter_price_range;


	@GraphQLScalar(fieldName = "id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer id;


	@GraphQLScalar(fieldName = "image", graphQLTypeName = "String", javaClass = String.class)
	String image;


	@GraphQLScalar(fieldName = "include_in_menu", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer include_in_menu;


	@GraphQLScalar(fieldName = "is_anchor", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer is_anchor;


	@GraphQLScalar(fieldName = "landing_page", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer landing_page;


	@GraphQLScalar(fieldName = "level", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer level;


	@GraphQLScalar(fieldName = "meta_description", graphQLTypeName = "String", javaClass = String.class)
	String meta_description;


	@GraphQLScalar(fieldName = "meta_keywords", graphQLTypeName = "String", javaClass = String.class)
	String meta_keywords;


	@GraphQLScalar(fieldName = "meta_title", graphQLTypeName = "String", javaClass = String.class)
	String meta_title;


	@GraphQLScalar(fieldName = "name", graphQLTypeName = "String", javaClass = String.class)
	String name;


	@GraphQLScalar(fieldName = "path", graphQLTypeName = "String", javaClass = String.class)
	String path;


	@GraphQLScalar(fieldName = "path_in_store", graphQLTypeName = "String", javaClass = String.class)
	String path_in_store;


	@GraphQLScalar(fieldName = "position", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer position;


	@GraphQLScalar(fieldName = "product_count", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer product_count;


	@GraphQLNonScalar(fieldName = "products", graphQLTypeName = "CategoryProducts", javaClass = CategoryProducts.class)
	CategoryProducts products;


	@GraphQLScalar(fieldName = "updated_at", graphQLTypeName = "String", javaClass = String.class)
	String updated_at;


	@GraphQLScalar(fieldName = "url_key", graphQLTypeName = "String", javaClass = String.class)
	String url_key;


	@GraphQLScalar(fieldName = "url_path", graphQLTypeName = "String", javaClass = String.class)
	String url_path;


	@GraphQLScalar(fieldName = "url_suffix", graphQLTypeName = "String", javaClass = String.class)
	String url_suffix;


	public CategoryTree(String children_count, Integer id, String name, String description, String path, Integer product_count, String url_key, String url_path) {
		this.children_count = children_count;
		this.id = id;
		this.name = name;
		this.path = path;
		this.product_count = product_count;
		this.url_key = url_key;
		this.url_path = url_path;
		this.description = description;
	}

	public CategoryTree(java.util.List<String> available_sort_by, java.util.List<Breadcrumb> breadcrumbs, String canonical_url, java.util.List<CategoryTree> children, String children_count, CmsBlock cms_block, String created_at, String custom_layout_update_file, String default_sort_by, String description, String display_mode, Double filter_price_range, Integer id, String image, Integer include_in_menu, Integer is_anchor, Integer landing_page, Integer level, String meta_description, String meta_keywords, String meta_title, String name, String path, String path_in_store, Integer position, Integer product_count, String updated_at, String url_key, String url_path, String url_suffix) {
		this.available_sort_by = available_sort_by;
		this.breadcrumbs = breadcrumbs;
		this.canonical_url = canonical_url;
		this.children = children;
		this.children_count = children_count;
		this.cms_block = cms_block;
		this.created_at = created_at;
		this.custom_layout_update_file = custom_layout_update_file;
		this.default_sort_by = default_sort_by;
		this.description = description;
		this.display_mode = display_mode;
		this.filter_price_range = filter_price_range;
		this.id = id;
		this.image = image;
		this.include_in_menu = include_in_menu;
		this.is_anchor = is_anchor;
		this.landing_page = landing_page;
		this.level = level;
		this.meta_description = meta_description;
		this.meta_keywords = meta_keywords;
		this.meta_title = meta_title;
		this.name = name;
		this.path = path;
		this.path_in_store = path_in_store;
		this.position = position;
		this.product_count = product_count;
		this.updated_at = updated_at;
		this.url_key = url_key;
		this.url_path = url_path;
		this.url_suffix = url_suffix;
	}



	public void setAvailable_sort_by(List<String> available_sort_by) {
		this.available_sort_by = available_sort_by;
	}

	public List<String> getAvailable_sort_by() {
		return available_sort_by;
	}

	public void setBreadcrumbs(List<Breadcrumb> breadcrumbs) {
		this.breadcrumbs = breadcrumbs;
	}

	public List<Breadcrumb> getBreadcrumbs() {
		return breadcrumbs;
	}

	public void setCanonical_url(String canonical_url) {
		this.canonical_url = canonical_url;
	}

	public String getCanonical_url() {
		return canonical_url;
	}

	public void setChildren(List<CategoryTree> children) {
		this.children = children;
	}

	public List<CategoryTree> getChildren() {
		return children;
	}

	public void setChildren_count(String children_count) {
		this.children_count = children_count;
	}

	public String getChildren_count() {
		return children_count;
	}

	public void setCms_block(CmsBlock cms_block) {
		this.cms_block = cms_block;
	}

	public CmsBlock getCms_block() {
		return cms_block;
	}

	public void setCreated_at(String created_at) {
		this.created_at = created_at;
	}

	public String getCreated_at() {
		return created_at;
	}

	public void setCustom_layout_update_file(String custom_layout_update_file) {
		this.custom_layout_update_file = custom_layout_update_file;
	}

	public String getCustom_layout_update_file() {
		return custom_layout_update_file;
	}

	public void setDefault_sort_by(String default_sort_by) {
		this.default_sort_by = default_sort_by;
	}

	public String getDefault_sort_by() {
		return default_sort_by;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getDescription() {
		return description;
	}

	public void setDisplay_mode(String display_mode) {
		this.display_mode = display_mode;
	}

	public String getDisplay_mode() {
		return display_mode;
	}

	public void setFilter_price_range(Double filter_price_range) {
		this.filter_price_range = filter_price_range;
	}

	public Double getFilter_price_range() {
		return filter_price_range;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setImage(String image) {
		this.image = image;
	}

	public String getImage() {
		return image;
	}

	public void setInclude_in_menu(Integer include_in_menu) {
		this.include_in_menu = include_in_menu;
	}

	public Integer getInclude_in_menu() {
		return include_in_menu;
	}

	public void setIs_anchor(Integer is_anchor) {
		this.is_anchor = is_anchor;
	}

	public Integer getIs_anchor() {
		return is_anchor;
	}

	public void setLanding_page(Integer landing_page) {
		this.landing_page = landing_page;
	}

	public Integer getLanding_page() {
		return landing_page;
	}

	public void setLevel(Integer level) {
		this.level = level;
	}

	public Integer getLevel() {
		return level;
	}

	public void setMeta_description(String meta_description) {
		this.meta_description = meta_description;
	}

	public String getMeta_description() {
		return meta_description;
	}

	public void setMeta_keywords(String meta_keywords) {
		this.meta_keywords = meta_keywords;
	}

	public String getMeta_keywords() {
		return meta_keywords;
	}

	public void setMeta_title(String meta_title) {
		this.meta_title = meta_title;
	}

	public String getMeta_title() {
		return meta_title;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return name;
	}

	public void setPath(String path) {
		this.path = path;
	}

	public String getPath() {
		return path;
	}

	public void setPath_in_store(String path_in_store) {
		this.path_in_store = path_in_store;
	}

	public String getPath_in_store() {
		return path_in_store;
	}

	public void setPosition(Integer position) {
		this.position = position;
	}

	public Integer getPosition() {
		return position;
	}

	public void setProduct_count(Integer product_count) {
		this.product_count = product_count;
	}

	public Integer getProduct_count() {
		return product_count;
	}

	public void setProducts(CategoryProducts products) {
		this.products = products;
	}

	public CategoryProducts getProducts() {
		return products;
	}

	public void setUpdated_at(String updated_at) {
		this.updated_at = updated_at;
	}

	public String getUpdated_at() {
		return updated_at;
	}

	public void setUrl_key(String url_key) {
		this.url_key = url_key;
	}

	public String getUrl_key() {
		return url_key;
	}

	public void setUrl_path(String url_path) {
		this.url_path = url_path;
	}

	public String getUrl_path() {
		return url_path;
	}

	public void setUrl_suffix(String url_suffix) {
		this.url_suffix = url_suffix;
	}

	public String getUrl_suffix() {
		return url_suffix;
	}

    public String toString() {
        return "CategoryTree {"
				+ "available_sort_by: " + available_sort_by
				+ ", "
				+ "breadcrumbs: " + breadcrumbs
				+ ", "
				+ "canonical_url: " + canonical_url
				+ ", "
				+ "children: " + children
				+ ", "
				+ "children_count: " + children_count
				+ ", "
				+ "cms_block: " + cms_block
				+ ", "
				+ "created_at: " + created_at
				+ ", "
				+ "custom_layout_update_file: " + custom_layout_update_file
				+ ", "
				+ "default_sort_by: " + default_sort_by
				+ ", "
				+ "description: " + description
				+ ", "
				+ "display_mode: " + display_mode
				+ ", "
				+ "filter_price_range: " + filter_price_range
				+ ", "
				+ "id: " + id
				+ ", "
				+ "image: " + image
				+ ", "
				+ "include_in_menu: " + include_in_menu
				+ ", "
				+ "is_anchor: " + is_anchor
				+ ", "
				+ "landing_page: " + landing_page
				+ ", "
				+ "level: " + level
				+ ", "
				+ "meta_description: " + meta_description
				+ ", "
				+ "meta_keywords: " + meta_keywords
				+ ", "
				+ "meta_title: " + meta_title
				+ ", "
				+ "name: " + name
				+ ", "
				+ "path: " + path
				+ ", "
				+ "path_in_store: " + path_in_store
				+ ", "
				+ "position: " + position
				+ ", "
				+ "product_count: " + product_count
				+ ", "
				+ "products: " + products
				+ ", "
				+ "updated_at: " + updated_at
				+ ", "
				+ "url_key: " + url_key
				+ ", "
				+ "url_path: " + url_path
				+ ", "
				+ "url_suffix: " + url_suffix
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Available_sort_by("available_sort_by"),
		Breadcrumbs("breadcrumbs"),
		Canonical_url("canonical_url"),
		Children("children"),
		Children_count("children_count"),
		Cms_block("cms_block"),
		Created_at("created_at"),
		Custom_layout_update_file("custom_layout_update_file"),
		Default_sort_by("default_sort_by"),
		Description("description"),
		Display_mode("display_mode"),
		Filter_price_range("filter_price_range"),
		Id("id"),
		Image("image"),
		Include_in_menu("include_in_menu"),
		Is_anchor("is_anchor"),
		Landing_page("landing_page"),
		Level("level"),
		Meta_description("meta_description"),
		Meta_keywords("meta_keywords"),
		Meta_title("meta_title"),
		Name("name"),
		Path("path"),
		Path_in_store("path_in_store"),
		Position("position"),
		Product_count("product_count"),
		Products("products"),
		Updated_at("updated_at"),
		Url_key("url_key"),
		Url_path("url_path"),
		Url_suffix("url_suffix");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private List<String> available_sort_by;
		private List<Breadcrumb> breadcrumbs;
		private String canonical_url;
		private List<CategoryTree> children;
		private String children_count;
		private CmsBlock cms_block;
		private String created_at;
		private String custom_layout_update_file;
		private String default_sort_by;
		private String description;
		private String display_mode;
		private Double filter_price_range;
		private Integer id;
		private String image;
		private Integer include_in_menu;
		private Integer is_anchor;
		private Integer landing_page;
		private Integer level;
		private String meta_description;
		private String meta_keywords;
		private String meta_title;
		private String name;
		private String path;
		private String path_in_store;
		private Integer position;
		private Integer product_count;
		private CategoryProducts products;
		private String updated_at;
		private String url_key;
		private String url_path;
		private String url_suffix;


		public Builder withAvailable_sort_by(List<String> available_sort_by) {
			this.available_sort_by = available_sort_by;
			return this;
		}
		public Builder withBreadcrumbs(List<Breadcrumb> breadcrumbs) {
			this.breadcrumbs = breadcrumbs;
			return this;
		}
		public Builder withCanonical_url(String canonical_url) {
			this.canonical_url = canonical_url;
			return this;
		}
		public Builder withChildren(List<CategoryTree> children) {
			this.children = children;
			return this;
		}
		public Builder withChildren_count(String children_count) {
			this.children_count = children_count;
			return this;
		}
		public Builder withCms_block(CmsBlock cms_block) {
			this.cms_block = cms_block;
			return this;
		}
		public Builder withCreated_at(String created_at) {
			this.created_at = created_at;
			return this;
		}
		public Builder withCustom_layout_update_file(String custom_layout_update_file) {
			this.custom_layout_update_file = custom_layout_update_file;
			return this;
		}
		public Builder withDefault_sort_by(String default_sort_by) {
			this.default_sort_by = default_sort_by;
			return this;
		}
		public Builder withDescription(String description) {
			this.description = description;
			return this;
		}
		public Builder withDisplay_mode(String display_mode) {
			this.display_mode = display_mode;
			return this;
		}
		public Builder withFilter_price_range(Double filter_price_range) {
			this.filter_price_range = filter_price_range;
			return this;
		}
		public Builder withId(Integer id) {
			this.id = id;
			return this;
		}
		public Builder withImage(String image) {
			this.image = image;
			return this;
		}
		public Builder withInclude_in_menu(Integer include_in_menu) {
			this.include_in_menu = include_in_menu;
			return this;
		}
		public Builder withIs_anchor(Integer is_anchor) {
			this.is_anchor = is_anchor;
			return this;
		}
		public Builder withLanding_page(Integer landing_page) {
			this.landing_page = landing_page;
			return this;
		}
		public Builder withLevel(Integer level) {
			this.level = level;
			return this;
		}
		public Builder withMeta_description(String meta_description) {
			this.meta_description = meta_description;
			return this;
		}
		public Builder withMeta_keywords(String meta_keywords) {
			this.meta_keywords = meta_keywords;
			return this;
		}
		public Builder withMeta_title(String meta_title) {
			this.meta_title = meta_title;
			return this;
		}
		public Builder withName(String name) {
			this.name = name;
			return this;
		}
		public Builder withPath(String path) {
			this.path = path;
			return this;
		}
		public Builder withPath_in_store(String path_in_store) {
			this.path_in_store = path_in_store;
			return this;
		}
		public Builder withPosition(Integer position) {
			this.position = position;
			return this;
		}
		public Builder withProduct_count(Integer product_count) {
			this.product_count = product_count;
			return this;
		}
		public Builder withProducts(CategoryProducts products) {
			this.products = products;
			return this;
		}
		public Builder withUpdated_at(String updated_at) {
			this.updated_at = updated_at;
			return this;
		}
		public Builder withUrl_key(String url_key) {
			this.url_key = url_key;
			return this;
		}
		public Builder withUrl_path(String url_path) {
			this.url_path = url_path;
			return this;
		}
		public Builder withUrl_suffix(String url_suffix) {
			this.url_suffix = url_suffix;
			return this;
		}

		public CategoryTree build() {
			CategoryTree _object = new CategoryTree();
			_object.setAvailable_sort_by(available_sort_by);
			_object.setBreadcrumbs(breadcrumbs);
			_object.setCanonical_url(canonical_url);
			_object.setChildren(children);
			_object.setChildren_count(children_count);
			_object.setCms_block(cms_block);
			_object.setCreated_at(created_at);
			_object.setCustom_layout_update_file(custom_layout_update_file);
			_object.setDefault_sort_by(default_sort_by);
			_object.setDescription(description);
			_object.setDisplay_mode(display_mode);
			_object.setFilter_price_range(filter_price_range);
			_object.setId(id);
			_object.setImage(image);
			_object.setInclude_in_menu(include_in_menu);
			_object.setIs_anchor(is_anchor);
			_object.setLanding_page(landing_page);
			_object.setLevel(level);
			_object.setMeta_description(meta_description);
			_object.setMeta_keywords(meta_keywords);
			_object.setMeta_title(meta_title);
			_object.setName(name);
			_object.setPath(path);
			_object.setPath_in_store(path_in_store);
			_object.setPosition(position);
			_object.setProduct_count(product_count);
			_object.setProducts(products);
			_object.setUpdated_at(updated_at);
			_object.setUrl_key(url_key);
			_object.setUrl_path(url_path);
			_object.setUrl_suffix(url_suffix);
			return _object;
		}
	}
}
