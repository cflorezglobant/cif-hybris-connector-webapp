/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("AvailableShippingMethod")
public class AvailableShippingMethod  {

	public AvailableShippingMethod(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "amount", graphQLTypeName = "Money", javaClass = Money.class)
	Money amount;


	@GraphQLScalar(fieldName = "available", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean available;


	@GraphQLNonScalar(fieldName = "base_amount", graphQLTypeName = "Money", javaClass = Money.class)
	Money base_amount;


	@GraphQLScalar(fieldName = "carrier_code", graphQLTypeName = "String", javaClass = String.class)
	String carrier_code;


	@GraphQLScalar(fieldName = "carrier_title", graphQLTypeName = "String", javaClass = String.class)
	String carrier_title;


	@GraphQLScalar(fieldName = "error_message", graphQLTypeName = "String", javaClass = String.class)
	String error_message;


	@GraphQLScalar(fieldName = "method_code", graphQLTypeName = "String", javaClass = String.class)
	String method_code;


	@GraphQLScalar(fieldName = "method_title", graphQLTypeName = "String", javaClass = String.class)
	String method_title;


	@GraphQLNonScalar(fieldName = "price_excl_tax", graphQLTypeName = "Money", javaClass = Money.class)
	Money price_excl_tax;


	@GraphQLNonScalar(fieldName = "price_incl_tax", graphQLTypeName = "Money", javaClass = Money.class)
	Money price_incl_tax;



	public void setAmount(Money amount) {
		this.amount = amount;
	}

	public Money getAmount() {
		return amount;
	}

	public void setAvailable(Boolean available) {
		this.available = available;
	}

	public Boolean getAvailable() {
		return available;
	}

	public void setBase_amount(Money base_amount) {
		this.base_amount = base_amount;
	}

	public Money getBase_amount() {
		return base_amount;
	}

	public void setCarrier_code(String carrier_code) {
		this.carrier_code = carrier_code;
	}

	public String getCarrier_code() {
		return carrier_code;
	}

	public void setCarrier_title(String carrier_title) {
		this.carrier_title = carrier_title;
	}

	public String getCarrier_title() {
		return carrier_title;
	}

	public void setError_message(String error_message) {
		this.error_message = error_message;
	}

	public String getError_message() {
		return error_message;
	}

	public void setMethod_code(String method_code) {
		this.method_code = method_code;
	}

	public String getMethod_code() {
		return method_code;
	}

	public void setMethod_title(String method_title) {
		this.method_title = method_title;
	}

	public String getMethod_title() {
		return method_title;
	}

	public void setPrice_excl_tax(Money price_excl_tax) {
		this.price_excl_tax = price_excl_tax;
	}

	public Money getPrice_excl_tax() {
		return price_excl_tax;
	}

	public void setPrice_incl_tax(Money price_incl_tax) {
		this.price_incl_tax = price_incl_tax;
	}

	public Money getPrice_incl_tax() {
		return price_incl_tax;
	}

    public String toString() {
        return "AvailableShippingMethod {"
				+ "amount: " + amount
				+ ", "
				+ "available: " + available
				+ ", "
				+ "base_amount: " + base_amount
				+ ", "
				+ "carrier_code: " + carrier_code
				+ ", "
				+ "carrier_title: " + carrier_title
				+ ", "
				+ "error_message: " + error_message
				+ ", "
				+ "method_code: " + method_code
				+ ", "
				+ "method_title: " + method_title
				+ ", "
				+ "price_excl_tax: " + price_excl_tax
				+ ", "
				+ "price_incl_tax: " + price_incl_tax
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Amount("amount"),
		Available("available"),
		Base_amount("base_amount"),
		Carrier_code("carrier_code"),
		Carrier_title("carrier_title"),
		Error_message("error_message"),
		Method_code("method_code"),
		Method_title("method_title"),
		Price_excl_tax("price_excl_tax"),
		Price_incl_tax("price_incl_tax");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Money amount;
		private Boolean available;
		private Money base_amount;
		private String carrier_code;
		private String carrier_title;
		private String error_message;
		private String method_code;
		private String method_title;
		private Money price_excl_tax;
		private Money price_incl_tax;


		public Builder withAmount(Money amount) {
			this.amount = amount;
			return this;
		}
		public Builder withAvailable(Boolean available) {
			this.available = available;
			return this;
		}
		public Builder withBase_amount(Money base_amount) {
			this.base_amount = base_amount;
			return this;
		}
		public Builder withCarrier_code(String carrier_code) {
			this.carrier_code = carrier_code;
			return this;
		}
		public Builder withCarrier_title(String carrier_title) {
			this.carrier_title = carrier_title;
			return this;
		}
		public Builder withError_message(String error_message) {
			this.error_message = error_message;
			return this;
		}
		public Builder withMethod_code(String method_code) {
			this.method_code = method_code;
			return this;
		}
		public Builder withMethod_title(String method_title) {
			this.method_title = method_title;
			return this;
		}
		public Builder withPrice_excl_tax(Money price_excl_tax) {
			this.price_excl_tax = price_excl_tax;
			return this;
		}
		public Builder withPrice_incl_tax(Money price_incl_tax) {
			this.price_incl_tax = price_incl_tax;
			return this;
		}

		public AvailableShippingMethod build() {
			AvailableShippingMethod _object = new AvailableShippingMethod();
			_object.setAmount(amount);
			_object.setAvailable(available);
			_object.setBase_amount(base_amount);
			_object.setCarrier_code(carrier_code);
			_object.setCarrier_title(carrier_title);
			_object.setError_message(error_message);
			_object.setMethod_code(method_code);
			_object.setMethod_title(method_title);
			_object.setPrice_excl_tax(price_excl_tax);
			_object.setPrice_incl_tax(price_incl_tax);
			return _object;
		}
	}
}
