/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("BundleCartItem")
public class BundleCartItem implements CartItemInterface {

	public BundleCartItem(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "bundle_options", graphQLTypeName = "SelectedBundleOption", javaClass = SelectedBundleOption.class)
	List<SelectedBundleOption> bundle_options;


	@GraphQLNonScalar(fieldName = "customizable_options", graphQLTypeName = "SelectedCustomizableOption", javaClass = SelectedCustomizableOption.class)
	List<SelectedCustomizableOption> customizable_options;


	@GraphQLScalar(fieldName = "id", graphQLTypeName = "String", javaClass = String.class)
	String id;


	@GraphQLNonScalar(fieldName = "prices", graphQLTypeName = "CartItemPrices", javaClass = CartItemPrices.class)
	CartItemPrices prices;


	@GraphQLNonScalar(fieldName = "product", graphQLTypeName = "ProductInterface", javaClass = ProductInterface.class)
	ProductInterface product;


	@GraphQLScalar(fieldName = "quantity", graphQLTypeName = "Float", javaClass = Double.class)
	Double quantity;



	public void setBundle_options(List<SelectedBundleOption> bundle_options) {
		this.bundle_options = bundle_options;
	}

	public List<SelectedBundleOption> getBundle_options() {
		return bundle_options;
	}

	public void setCustomizable_options(List<SelectedCustomizableOption> customizable_options) {
		this.customizable_options = customizable_options;
	}

	public List<SelectedCustomizableOption> getCustomizable_options() {
		return customizable_options;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getId() {
		return id;
	}

	public void setPrices(CartItemPrices prices) {
		this.prices = prices;
	}

	public CartItemPrices getPrices() {
		return prices;
	}

	public void setProduct(ProductInterface product) {
		this.product = product;
	}

	public ProductInterface getProduct() {
		return product;
	}

	public void setQuantity(Double quantity) {
		this.quantity = quantity;
	}

	public Double getQuantity() {
		return quantity;
	}

    public String toString() {
        return "BundleCartItem {"
				+ "bundle_options: " + bundle_options
				+ ", "
				+ "customizable_options: " + customizable_options
				+ ", "
				+ "id: " + id
				+ ", "
				+ "prices: " + prices
				+ ", "
				+ "product: " + product
				+ ", "
				+ "quantity: " + quantity
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Bundle_options("bundle_options"),
		Customizable_options("customizable_options"),
		Id("id"),
		Prices("prices"),
		Product("product"),
		Quantity("quantity");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private List<SelectedBundleOption> bundle_options;
		private List<SelectedCustomizableOption> customizable_options;
		private String id;
		private CartItemPrices prices;
		private ProductInterface product;
		private Double quantity;


		public Builder withBundle_options(List<SelectedBundleOption> bundle_options) {
			this.bundle_options = bundle_options;
			return this;
		}
		public Builder withCustomizable_options(List<SelectedCustomizableOption> customizable_options) {
			this.customizable_options = customizable_options;
			return this;
		}
		public Builder withId(String id) {
			this.id = id;
			return this;
		}
		public Builder withPrices(CartItemPrices prices) {
			this.prices = prices;
			return this;
		}
		public Builder withProduct(ProductInterface product) {
			this.product = product;
			return this;
		}
		public Builder withQuantity(Double quantity) {
			this.quantity = quantity;
			return this;
		}

		public BundleCartItem build() {
			BundleCartItem _object = new BundleCartItem();
			_object.setBundle_options(bundle_options);
			_object.setCustomizable_options(customizable_options);
			_object.setId(id);
			_object.setPrices(prices);
			_object.setProduct(product);
			_object.setQuantity(quantity);
			return _object;
		}
	}
}
