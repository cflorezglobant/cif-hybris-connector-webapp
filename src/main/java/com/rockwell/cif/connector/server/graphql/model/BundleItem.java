/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("BundleItem")
public class BundleItem  {

	public BundleItem(){
		// No action
	}

	@GraphQLScalar(fieldName = "option_id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer option_id;


	@GraphQLNonScalar(fieldName = "options", graphQLTypeName = "BundleItemOption", javaClass = BundleItemOption.class)
	List<BundleItemOption> options;


	@GraphQLScalar(fieldName = "position", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer position;


	@GraphQLScalar(fieldName = "required", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean required;


	@GraphQLScalar(fieldName = "sku", graphQLTypeName = "String", javaClass = String.class)
	String sku;


	@GraphQLScalar(fieldName = "title", graphQLTypeName = "String", javaClass = String.class)
	String title;


	@GraphQLScalar(fieldName = "type", graphQLTypeName = "String", javaClass = String.class)
	String type;



	public void setOption_id(Integer option_id) {
		this.option_id = option_id;
	}

	public Integer getOption_id() {
		return option_id;
	}

	public void setOptions(List<BundleItemOption> options) {
		this.options = options;
	}

	public List<BundleItemOption> getOptions() {
		return options;
	}

	public void setPosition(Integer position) {
		this.position = position;
	}

	public Integer getPosition() {
		return position;
	}

	public void setRequired(Boolean required) {
		this.required = required;
	}

	public Boolean getRequired() {
		return required;
	}

	public void setSku(String sku) {
		this.sku = sku;
	}

	public String getSku() {
		return sku;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getTitle() {
		return title;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getType() {
		return type;
	}

    public String toString() {
        return "BundleItem {"
				+ "option_id: " + option_id
				+ ", "
				+ "options: " + options
				+ ", "
				+ "position: " + position
				+ ", "
				+ "required: " + required
				+ ", "
				+ "sku: " + sku
				+ ", "
				+ "title: " + title
				+ ", "
				+ "type: " + type
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Option_id("option_id"),
		Options("options"),
		Position("position"),
		Required("required"),
		Sku("sku"),
		Title("title"),
		Type("type");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Integer option_id;
		private List<BundleItemOption> options;
		private Integer position;
		private Boolean required;
		private String sku;
		private String title;
		private String type;


		public Builder withOption_id(Integer option_id) {
			this.option_id = option_id;
			return this;
		}
		public Builder withOptions(List<BundleItemOption> options) {
			this.options = options;
			return this;
		}
		public Builder withPosition(Integer position) {
			this.position = position;
			return this;
		}
		public Builder withRequired(Boolean required) {
			this.required = required;
			return this;
		}
		public Builder withSku(String sku) {
			this.sku = sku;
			return this;
		}
		public Builder withTitle(String title) {
			this.title = title;
			return this;
		}
		public Builder withType(String type) {
			this.type = type;
			return this;
		}

		public BundleItem build() {
			BundleItem _object = new BundleItem();
			_object.setOption_id(option_id);
			_object.setOptions(options);
			_object.setPosition(position);
			_object.setRequired(required);
			_object.setSku(sku);
			_object.setTitle(title);
			_object.setType(type);
			return _object;
		}
	}
}
