/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("SendEmailToFriendInput")
public class SendEmailToFriendInput  {

	public SendEmailToFriendInput(){
		// No action
	}

	@GraphQLScalar(fieldName = "product_id", graphQLTypeName = "Int", javaClass = Integer.class)
	Integer product_id;


	@GraphQLNonScalar(fieldName = "recipients", graphQLTypeName = "SendEmailToFriendRecipientInput", javaClass = SendEmailToFriendRecipientInput.class)
	List<SendEmailToFriendRecipientInput> recipients;


	@GraphQLNonScalar(fieldName = "sender", graphQLTypeName = "SendEmailToFriendSenderInput", javaClass = SendEmailToFriendSenderInput.class)
	SendEmailToFriendSenderInput sender;



	public void setProduct_id(Integer product_id) {
		this.product_id = product_id;
	}

	public Integer getProduct_id() {
		return product_id;
	}

	public void setRecipients(List<SendEmailToFriendRecipientInput> recipients) {
		this.recipients = recipients;
	}

	public List<SendEmailToFriendRecipientInput> getRecipients() {
		return recipients;
	}

	public void setSender(SendEmailToFriendSenderInput sender) {
		this.sender = sender;
	}

	public SendEmailToFriendSenderInput getSender() {
		return sender;
	}

    public String toString() {
        return "SendEmailToFriendInput {"
				+ "product_id: " + product_id
				+ ", "
				+ "recipients: " + recipients
				+ ", "
				+ "sender: " + sender
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		Product_id("product_id"),
		Recipients("recipients"),
		Sender("sender");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private Integer product_id;
		private List<SendEmailToFriendRecipientInput> recipients;
		private SendEmailToFriendSenderInput sender;


		public Builder withProduct_id(Integer product_id) {
			this.product_id = product_id;
			return this;
		}
		public Builder withRecipients(List<SendEmailToFriendRecipientInput> recipients) {
			this.recipients = recipients;
			return this;
		}
		public Builder withSender(SendEmailToFriendSenderInput sender) {
			this.sender = sender;
			return this;
		}

		public SendEmailToFriendInput build() {
			SendEmailToFriendInput _object = new SendEmailToFriendInput();
			_object.setProduct_id(product_id);
			_object.setRecipients(recipients);
			_object.setSender(sender);
			return _object;
		}
	}
}
