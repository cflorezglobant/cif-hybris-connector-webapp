/** Generated by the default template from graphql-java-generator */
package com.rockwell.cif.connector.server.graphql.model;

import com.graphql_java_generator.GraphQLField;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Mutation")
public class Mutation  {

	public Mutation(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "addBundleProductsToCart", graphQLTypeName = "AddBundleProductsToCartOutput", javaClass = AddBundleProductsToCartOutput.class)
	AddBundleProductsToCartOutput addBundleProductsToCart;


	@GraphQLNonScalar(fieldName = "addConfigurableProductsToCart", graphQLTypeName = "AddConfigurableProductsToCartOutput", javaClass = AddConfigurableProductsToCartOutput.class)
	AddConfigurableProductsToCartOutput addConfigurableProductsToCart;


	@GraphQLNonScalar(fieldName = "addDownloadableProductsToCart", graphQLTypeName = "AddDownloadableProductsToCartOutput", javaClass = AddDownloadableProductsToCartOutput.class)
	AddDownloadableProductsToCartOutput addDownloadableProductsToCart;


	@GraphQLNonScalar(fieldName = "addSimpleProductsToCart", graphQLTypeName = "AddSimpleProductsToCartOutput", javaClass = AddSimpleProductsToCartOutput.class)
	AddSimpleProductsToCartOutput addSimpleProductsToCart;


	@GraphQLNonScalar(fieldName = "addVirtualProductsToCart", graphQLTypeName = "AddVirtualProductsToCartOutput", javaClass = AddVirtualProductsToCartOutput.class)
	AddVirtualProductsToCartOutput addVirtualProductsToCart;


	@GraphQLNonScalar(fieldName = "applyCouponToCart", graphQLTypeName = "ApplyCouponToCartOutput", javaClass = ApplyCouponToCartOutput.class)
	ApplyCouponToCartOutput applyCouponToCart;


	@GraphQLNonScalar(fieldName = "changeCustomerPassword", graphQLTypeName = "Customer", javaClass = Customer.class)
	Customer changeCustomerPassword;


	@GraphQLScalar(fieldName = "createBraintreeClientToken", graphQLTypeName = "String", javaClass = String.class)
	String createBraintreeClientToken;


	@GraphQLNonScalar(fieldName = "createCustomer", graphQLTypeName = "CustomerOutput", javaClass = CustomerOutput.class)
	CustomerOutput createCustomer;


	@GraphQLNonScalar(fieldName = "createCustomerAddress", graphQLTypeName = "CustomerAddress", javaClass = CustomerAddress.class)
	CustomerAddress createCustomerAddress;


	@GraphQLScalar(fieldName = "createEmptyCart", graphQLTypeName = "String", javaClass = String.class)
	String createEmptyCart;


	@GraphQLNonScalar(fieldName = "createPayflowProToken", graphQLTypeName = "CreatePayflowProTokenOutput", javaClass = CreatePayflowProTokenOutput.class)
	CreatePayflowProTokenOutput createPayflowProToken;


	@GraphQLNonScalar(fieldName = "createPaypalExpressToken", graphQLTypeName = "PaypalExpressTokenOutput", javaClass = PaypalExpressTokenOutput.class)
	PaypalExpressTokenOutput createPaypalExpressToken;


	@GraphQLScalar(fieldName = "deleteCustomerAddress", graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean deleteCustomerAddress;


	@GraphQLNonScalar(fieldName = "deletePaymentToken", graphQLTypeName = "DeletePaymentTokenOutput", javaClass = DeletePaymentTokenOutput.class)
	DeletePaymentTokenOutput deletePaymentToken;


	@GraphQLNonScalar(fieldName = "generateCustomerToken", graphQLTypeName = "CustomerToken", javaClass = CustomerToken.class)
	CustomerToken generateCustomerToken;


	@GraphQLNonScalar(fieldName = "handlePayflowProResponse", graphQLTypeName = "PayflowProResponseOutput", javaClass = PayflowProResponseOutput.class)
	PayflowProResponseOutput handlePayflowProResponse;


	@GraphQLNonScalar(fieldName = "mergeCarts", graphQLTypeName = "Cart", javaClass = Cart.class)
	Cart mergeCarts;


	@GraphQLNonScalar(fieldName = "placeOrder", graphQLTypeName = "PlaceOrderOutput", javaClass = PlaceOrderOutput.class)
	PlaceOrderOutput placeOrder;


	@GraphQLNonScalar(fieldName = "removeCouponFromCart", graphQLTypeName = "RemoveCouponFromCartOutput", javaClass = RemoveCouponFromCartOutput.class)
	RemoveCouponFromCartOutput removeCouponFromCart;


	@GraphQLNonScalar(fieldName = "removeItemFromCart", graphQLTypeName = "RemoveItemFromCartOutput", javaClass = RemoveItemFromCartOutput.class)
	RemoveItemFromCartOutput removeItemFromCart;


	@GraphQLNonScalar(fieldName = "revokeCustomerToken", graphQLTypeName = "RevokeCustomerTokenOutput", javaClass = RevokeCustomerTokenOutput.class)
	RevokeCustomerTokenOutput revokeCustomerToken;


	@GraphQLNonScalar(fieldName = "sendEmailToFriend", graphQLTypeName = "SendEmailToFriendOutput", javaClass = SendEmailToFriendOutput.class)
	SendEmailToFriendOutput sendEmailToFriend;


	@GraphQLNonScalar(fieldName = "setBillingAddressOnCart", graphQLTypeName = "SetBillingAddressOnCartOutput", javaClass = SetBillingAddressOnCartOutput.class)
	SetBillingAddressOnCartOutput setBillingAddressOnCart;


	@GraphQLNonScalar(fieldName = "setGuestEmailOnCart", graphQLTypeName = "SetGuestEmailOnCartOutput", javaClass = SetGuestEmailOnCartOutput.class)
	SetGuestEmailOnCartOutput setGuestEmailOnCart;


	@GraphQLNonScalar(fieldName = "setPaymentMethodAndPlaceOrder", graphQLTypeName = "PlaceOrderOutput", javaClass = PlaceOrderOutput.class)
	PlaceOrderOutput setPaymentMethodAndPlaceOrder;


	@GraphQLNonScalar(fieldName = "setPaymentMethodOnCart", graphQLTypeName = "SetPaymentMethodOnCartOutput", javaClass = SetPaymentMethodOnCartOutput.class)
	SetPaymentMethodOnCartOutput setPaymentMethodOnCart;


	@GraphQLNonScalar(fieldName = "setShippingAddressesOnCart", graphQLTypeName = "SetShippingAddressesOnCartOutput", javaClass = SetShippingAddressesOnCartOutput.class)
	SetShippingAddressesOnCartOutput setShippingAddressesOnCart;


	@GraphQLNonScalar(fieldName = "setShippingMethodsOnCart", graphQLTypeName = "SetShippingMethodsOnCartOutput", javaClass = SetShippingMethodsOnCartOutput.class)
	SetShippingMethodsOnCartOutput setShippingMethodsOnCart;


	@GraphQLNonScalar(fieldName = "updateCartItems", graphQLTypeName = "UpdateCartItemsOutput", javaClass = UpdateCartItemsOutput.class)
	UpdateCartItemsOutput updateCartItems;


	@GraphQLNonScalar(fieldName = "updateCustomer", graphQLTypeName = "CustomerOutput", javaClass = CustomerOutput.class)
	CustomerOutput updateCustomer;


	@GraphQLNonScalar(fieldName = "updateCustomerAddress", graphQLTypeName = "CustomerAddress", javaClass = CustomerAddress.class)
	CustomerAddress updateCustomerAddress;



	public void setAddBundleProductsToCart(AddBundleProductsToCartOutput addBundleProductsToCart) {
		this.addBundleProductsToCart = addBundleProductsToCart;
	}

	public AddBundleProductsToCartOutput getAddBundleProductsToCart() {
		return addBundleProductsToCart;
	}

	public void setAddConfigurableProductsToCart(AddConfigurableProductsToCartOutput addConfigurableProductsToCart) {
		this.addConfigurableProductsToCart = addConfigurableProductsToCart;
	}

	public AddConfigurableProductsToCartOutput getAddConfigurableProductsToCart() {
		return addConfigurableProductsToCart;
	}

	public void setAddDownloadableProductsToCart(AddDownloadableProductsToCartOutput addDownloadableProductsToCart) {
		this.addDownloadableProductsToCart = addDownloadableProductsToCart;
	}

	public AddDownloadableProductsToCartOutput getAddDownloadableProductsToCart() {
		return addDownloadableProductsToCart;
	}

	public void setAddSimpleProductsToCart(AddSimpleProductsToCartOutput addSimpleProductsToCart) {
		this.addSimpleProductsToCart = addSimpleProductsToCart;
	}

	public AddSimpleProductsToCartOutput getAddSimpleProductsToCart() {
		return addSimpleProductsToCart;
	}

	public void setAddVirtualProductsToCart(AddVirtualProductsToCartOutput addVirtualProductsToCart) {
		this.addVirtualProductsToCart = addVirtualProductsToCart;
	}

	public AddVirtualProductsToCartOutput getAddVirtualProductsToCart() {
		return addVirtualProductsToCart;
	}

	public void setApplyCouponToCart(ApplyCouponToCartOutput applyCouponToCart) {
		this.applyCouponToCart = applyCouponToCart;
	}

	public ApplyCouponToCartOutput getApplyCouponToCart() {
		return applyCouponToCart;
	}

	public void setChangeCustomerPassword(Customer changeCustomerPassword) {
		this.changeCustomerPassword = changeCustomerPassword;
	}

	public Customer getChangeCustomerPassword() {
		return changeCustomerPassword;
	}

	public void setCreateBraintreeClientToken(String createBraintreeClientToken) {
		this.createBraintreeClientToken = createBraintreeClientToken;
	}

	public String getCreateBraintreeClientToken() {
		return createBraintreeClientToken;
	}

	public void setCreateCustomer(CustomerOutput createCustomer) {
		this.createCustomer = createCustomer;
	}

	public CustomerOutput getCreateCustomer() {
		return createCustomer;
	}

	public void setCreateCustomerAddress(CustomerAddress createCustomerAddress) {
		this.createCustomerAddress = createCustomerAddress;
	}

	public CustomerAddress getCreateCustomerAddress() {
		return createCustomerAddress;
	}

	public void setCreateEmptyCart(String createEmptyCart) {
		this.createEmptyCart = createEmptyCart;
	}

	public String getCreateEmptyCart() {
		return createEmptyCart;
	}

	public void setCreatePayflowProToken(CreatePayflowProTokenOutput createPayflowProToken) {
		this.createPayflowProToken = createPayflowProToken;
	}

	public CreatePayflowProTokenOutput getCreatePayflowProToken() {
		return createPayflowProToken;
	}

	public void setCreatePaypalExpressToken(PaypalExpressTokenOutput createPaypalExpressToken) {
		this.createPaypalExpressToken = createPaypalExpressToken;
	}

	public PaypalExpressTokenOutput getCreatePaypalExpressToken() {
		return createPaypalExpressToken;
	}

	public void setDeleteCustomerAddress(Boolean deleteCustomerAddress) {
		this.deleteCustomerAddress = deleteCustomerAddress;
	}

	public Boolean getDeleteCustomerAddress() {
		return deleteCustomerAddress;
	}

	public void setDeletePaymentToken(DeletePaymentTokenOutput deletePaymentToken) {
		this.deletePaymentToken = deletePaymentToken;
	}

	public DeletePaymentTokenOutput getDeletePaymentToken() {
		return deletePaymentToken;
	}

	public void setGenerateCustomerToken(CustomerToken generateCustomerToken) {
		this.generateCustomerToken = generateCustomerToken;
	}

	public CustomerToken getGenerateCustomerToken() {
		return generateCustomerToken;
	}

	public void setHandlePayflowProResponse(PayflowProResponseOutput handlePayflowProResponse) {
		this.handlePayflowProResponse = handlePayflowProResponse;
	}

	public PayflowProResponseOutput getHandlePayflowProResponse() {
		return handlePayflowProResponse;
	}

	public void setMergeCarts(Cart mergeCarts) {
		this.mergeCarts = mergeCarts;
	}

	public Cart getMergeCarts() {
		return mergeCarts;
	}

	public void setPlaceOrder(PlaceOrderOutput placeOrder) {
		this.placeOrder = placeOrder;
	}

	public PlaceOrderOutput getPlaceOrder() {
		return placeOrder;
	}

	public void setRemoveCouponFromCart(RemoveCouponFromCartOutput removeCouponFromCart) {
		this.removeCouponFromCart = removeCouponFromCart;
	}

	public RemoveCouponFromCartOutput getRemoveCouponFromCart() {
		return removeCouponFromCart;
	}

	public void setRemoveItemFromCart(RemoveItemFromCartOutput removeItemFromCart) {
		this.removeItemFromCart = removeItemFromCart;
	}

	public RemoveItemFromCartOutput getRemoveItemFromCart() {
		return removeItemFromCart;
	}

	public void setRevokeCustomerToken(RevokeCustomerTokenOutput revokeCustomerToken) {
		this.revokeCustomerToken = revokeCustomerToken;
	}

	public RevokeCustomerTokenOutput getRevokeCustomerToken() {
		return revokeCustomerToken;
	}

	public void setSendEmailToFriend(SendEmailToFriendOutput sendEmailToFriend) {
		this.sendEmailToFriend = sendEmailToFriend;
	}

	public SendEmailToFriendOutput getSendEmailToFriend() {
		return sendEmailToFriend;
	}

	public void setSetBillingAddressOnCart(SetBillingAddressOnCartOutput setBillingAddressOnCart) {
		this.setBillingAddressOnCart = setBillingAddressOnCart;
	}

	public SetBillingAddressOnCartOutput getSetBillingAddressOnCart() {
		return setBillingAddressOnCart;
	}

	public void setSetGuestEmailOnCart(SetGuestEmailOnCartOutput setGuestEmailOnCart) {
		this.setGuestEmailOnCart = setGuestEmailOnCart;
	}

	public SetGuestEmailOnCartOutput getSetGuestEmailOnCart() {
		return setGuestEmailOnCart;
	}

	public void setSetPaymentMethodAndPlaceOrder(PlaceOrderOutput setPaymentMethodAndPlaceOrder) {
		this.setPaymentMethodAndPlaceOrder = setPaymentMethodAndPlaceOrder;
	}

	public PlaceOrderOutput getSetPaymentMethodAndPlaceOrder() {
		return setPaymentMethodAndPlaceOrder;
	}

	public void setSetPaymentMethodOnCart(SetPaymentMethodOnCartOutput setPaymentMethodOnCart) {
		this.setPaymentMethodOnCart = setPaymentMethodOnCart;
	}

	public SetPaymentMethodOnCartOutput getSetPaymentMethodOnCart() {
		return setPaymentMethodOnCart;
	}

	public void setSetShippingAddressesOnCart(SetShippingAddressesOnCartOutput setShippingAddressesOnCart) {
		this.setShippingAddressesOnCart = setShippingAddressesOnCart;
	}

	public SetShippingAddressesOnCartOutput getSetShippingAddressesOnCart() {
		return setShippingAddressesOnCart;
	}

	public void setSetShippingMethodsOnCart(SetShippingMethodsOnCartOutput setShippingMethodsOnCart) {
		this.setShippingMethodsOnCart = setShippingMethodsOnCart;
	}

	public SetShippingMethodsOnCartOutput getSetShippingMethodsOnCart() {
		return setShippingMethodsOnCart;
	}

	public void setUpdateCartItems(UpdateCartItemsOutput updateCartItems) {
		this.updateCartItems = updateCartItems;
	}

	public UpdateCartItemsOutput getUpdateCartItems() {
		return updateCartItems;
	}

	public void setUpdateCustomer(CustomerOutput updateCustomer) {
		this.updateCustomer = updateCustomer;
	}

	public CustomerOutput getUpdateCustomer() {
		return updateCustomer;
	}

	public void setUpdateCustomerAddress(CustomerAddress updateCustomerAddress) {
		this.updateCustomerAddress = updateCustomerAddress;
	}

	public CustomerAddress getUpdateCustomerAddress() {
		return updateCustomerAddress;
	}

    public String toString() {
        return "Mutation {"
				+ "addBundleProductsToCart: " + addBundleProductsToCart
				+ ", "
				+ "addConfigurableProductsToCart: " + addConfigurableProductsToCart
				+ ", "
				+ "addDownloadableProductsToCart: " + addDownloadableProductsToCart
				+ ", "
				+ "addSimpleProductsToCart: " + addSimpleProductsToCart
				+ ", "
				+ "addVirtualProductsToCart: " + addVirtualProductsToCart
				+ ", "
				+ "applyCouponToCart: " + applyCouponToCart
				+ ", "
				+ "changeCustomerPassword: " + changeCustomerPassword
				+ ", "
				+ "createBraintreeClientToken: " + createBraintreeClientToken
				+ ", "
				+ "createCustomer: " + createCustomer
				+ ", "
				+ "createCustomerAddress: " + createCustomerAddress
				+ ", "
				+ "createEmptyCart: " + createEmptyCart
				+ ", "
				+ "createPayflowProToken: " + createPayflowProToken
				+ ", "
				+ "createPaypalExpressToken: " + createPaypalExpressToken
				+ ", "
				+ "deleteCustomerAddress: " + deleteCustomerAddress
				+ ", "
				+ "deletePaymentToken: " + deletePaymentToken
				+ ", "
				+ "generateCustomerToken: " + generateCustomerToken
				+ ", "
				+ "handlePayflowProResponse: " + handlePayflowProResponse
				+ ", "
				+ "mergeCarts: " + mergeCarts
				+ ", "
				+ "placeOrder: " + placeOrder
				+ ", "
				+ "removeCouponFromCart: " + removeCouponFromCart
				+ ", "
				+ "removeItemFromCart: " + removeItemFromCart
				+ ", "
				+ "revokeCustomerToken: " + revokeCustomerToken
				+ ", "
				+ "sendEmailToFriend: " + sendEmailToFriend
				+ ", "
				+ "setBillingAddressOnCart: " + setBillingAddressOnCart
				+ ", "
				+ "setGuestEmailOnCart: " + setGuestEmailOnCart
				+ ", "
				+ "setPaymentMethodAndPlaceOrder: " + setPaymentMethodAndPlaceOrder
				+ ", "
				+ "setPaymentMethodOnCart: " + setPaymentMethodOnCart
				+ ", "
				+ "setShippingAddressesOnCart: " + setShippingAddressesOnCart
				+ ", "
				+ "setShippingMethodsOnCart: " + setShippingMethodsOnCart
				+ ", "
				+ "updateCartItems: " + updateCartItems
				+ ", "
				+ "updateCustomer: " + updateCustomer
				+ ", "
				+ "updateCustomerAddress: " + updateCustomerAddress
        		+ "}";
    }

    /**
	 * Enum of field names
	 */
	 public static enum Field implements GraphQLField {
		AddBundleProductsToCart("addBundleProductsToCart"),
		AddConfigurableProductsToCart("addConfigurableProductsToCart"),
		AddDownloadableProductsToCart("addDownloadableProductsToCart"),
		AddSimpleProductsToCart("addSimpleProductsToCart"),
		AddVirtualProductsToCart("addVirtualProductsToCart"),
		ApplyCouponToCart("applyCouponToCart"),
		ChangeCustomerPassword("changeCustomerPassword"),
		CreateBraintreeClientToken("createBraintreeClientToken"),
		CreateCustomer("createCustomer"),
		CreateCustomerAddress("createCustomerAddress"),
		CreateEmptyCart("createEmptyCart"),
		CreatePayflowProToken("createPayflowProToken"),
		CreatePaypalExpressToken("createPaypalExpressToken"),
		DeleteCustomerAddress("deleteCustomerAddress"),
		DeletePaymentToken("deletePaymentToken"),
		GenerateCustomerToken("generateCustomerToken"),
		HandlePayflowProResponse("handlePayflowProResponse"),
		MergeCarts("mergeCarts"),
		PlaceOrder("placeOrder"),
		RemoveCouponFromCart("removeCouponFromCart"),
		RemoveItemFromCart("removeItemFromCart"),
		RevokeCustomerToken("revokeCustomerToken"),
		SendEmailToFriend("sendEmailToFriend"),
		SetBillingAddressOnCart("setBillingAddressOnCart"),
		SetGuestEmailOnCart("setGuestEmailOnCart"),
		SetPaymentMethodAndPlaceOrder("setPaymentMethodAndPlaceOrder"),
		SetPaymentMethodOnCart("setPaymentMethodOnCart"),
		SetShippingAddressesOnCart("setShippingAddressesOnCart"),
		SetShippingMethodsOnCart("setShippingMethodsOnCart"),
		UpdateCartItems("updateCartItems"),
		UpdateCustomer("updateCustomer"),
		UpdateCustomerAddress("updateCustomerAddress");

		private String fieldName;

		Field(String fieldName) {
			this.fieldName = fieldName;
		}

		public String getFieldName() {
			return fieldName;
		}

		public Class<?> getGraphQLType() {
			return this.getClass().getDeclaringClass();
		}

	}

	public static Builder builder() {
			return new Builder();
		}



	/**
	 * Builder
	 */
	public static class Builder {
		private AddBundleProductsToCartOutput addBundleProductsToCart;
		private AddConfigurableProductsToCartOutput addConfigurableProductsToCart;
		private AddDownloadableProductsToCartOutput addDownloadableProductsToCart;
		private AddSimpleProductsToCartOutput addSimpleProductsToCart;
		private AddVirtualProductsToCartOutput addVirtualProductsToCart;
		private ApplyCouponToCartOutput applyCouponToCart;
		private Customer changeCustomerPassword;
		private String createBraintreeClientToken;
		private CustomerOutput createCustomer;
		private CustomerAddress createCustomerAddress;
		private String createEmptyCart;
		private CreatePayflowProTokenOutput createPayflowProToken;
		private PaypalExpressTokenOutput createPaypalExpressToken;
		private Boolean deleteCustomerAddress;
		private DeletePaymentTokenOutput deletePaymentToken;
		private CustomerToken generateCustomerToken;
		private PayflowProResponseOutput handlePayflowProResponse;
		private Cart mergeCarts;
		private PlaceOrderOutput placeOrder;
		private RemoveCouponFromCartOutput removeCouponFromCart;
		private RemoveItemFromCartOutput removeItemFromCart;
		private RevokeCustomerTokenOutput revokeCustomerToken;
		private SendEmailToFriendOutput sendEmailToFriend;
		private SetBillingAddressOnCartOutput setBillingAddressOnCart;
		private SetGuestEmailOnCartOutput setGuestEmailOnCart;
		private PlaceOrderOutput setPaymentMethodAndPlaceOrder;
		private SetPaymentMethodOnCartOutput setPaymentMethodOnCart;
		private SetShippingAddressesOnCartOutput setShippingAddressesOnCart;
		private SetShippingMethodsOnCartOutput setShippingMethodsOnCart;
		private UpdateCartItemsOutput updateCartItems;
		private CustomerOutput updateCustomer;
		private CustomerAddress updateCustomerAddress;


		public Builder withAddBundleProductsToCart(AddBundleProductsToCartOutput addBundleProductsToCart) {
			this.addBundleProductsToCart = addBundleProductsToCart;
			return this;
		}
		public Builder withAddConfigurableProductsToCart(AddConfigurableProductsToCartOutput addConfigurableProductsToCart) {
			this.addConfigurableProductsToCart = addConfigurableProductsToCart;
			return this;
		}
		public Builder withAddDownloadableProductsToCart(AddDownloadableProductsToCartOutput addDownloadableProductsToCart) {
			this.addDownloadableProductsToCart = addDownloadableProductsToCart;
			return this;
		}
		public Builder withAddSimpleProductsToCart(AddSimpleProductsToCartOutput addSimpleProductsToCart) {
			this.addSimpleProductsToCart = addSimpleProductsToCart;
			return this;
		}
		public Builder withAddVirtualProductsToCart(AddVirtualProductsToCartOutput addVirtualProductsToCart) {
			this.addVirtualProductsToCart = addVirtualProductsToCart;
			return this;
		}
		public Builder withApplyCouponToCart(ApplyCouponToCartOutput applyCouponToCart) {
			this.applyCouponToCart = applyCouponToCart;
			return this;
		}
		public Builder withChangeCustomerPassword(Customer changeCustomerPassword) {
			this.changeCustomerPassword = changeCustomerPassword;
			return this;
		}
		public Builder withCreateBraintreeClientToken(String createBraintreeClientToken) {
			this.createBraintreeClientToken = createBraintreeClientToken;
			return this;
		}
		public Builder withCreateCustomer(CustomerOutput createCustomer) {
			this.createCustomer = createCustomer;
			return this;
		}
		public Builder withCreateCustomerAddress(CustomerAddress createCustomerAddress) {
			this.createCustomerAddress = createCustomerAddress;
			return this;
		}
		public Builder withCreateEmptyCart(String createEmptyCart) {
			this.createEmptyCart = createEmptyCart;
			return this;
		}
		public Builder withCreatePayflowProToken(CreatePayflowProTokenOutput createPayflowProToken) {
			this.createPayflowProToken = createPayflowProToken;
			return this;
		}
		public Builder withCreatePaypalExpressToken(PaypalExpressTokenOutput createPaypalExpressToken) {
			this.createPaypalExpressToken = createPaypalExpressToken;
			return this;
		}
		public Builder withDeleteCustomerAddress(Boolean deleteCustomerAddress) {
			this.deleteCustomerAddress = deleteCustomerAddress;
			return this;
		}
		public Builder withDeletePaymentToken(DeletePaymentTokenOutput deletePaymentToken) {
			this.deletePaymentToken = deletePaymentToken;
			return this;
		}
		public Builder withGenerateCustomerToken(CustomerToken generateCustomerToken) {
			this.generateCustomerToken = generateCustomerToken;
			return this;
		}
		public Builder withHandlePayflowProResponse(PayflowProResponseOutput handlePayflowProResponse) {
			this.handlePayflowProResponse = handlePayflowProResponse;
			return this;
		}
		public Builder withMergeCarts(Cart mergeCarts) {
			this.mergeCarts = mergeCarts;
			return this;
		}
		public Builder withPlaceOrder(PlaceOrderOutput placeOrder) {
			this.placeOrder = placeOrder;
			return this;
		}
		public Builder withRemoveCouponFromCart(RemoveCouponFromCartOutput removeCouponFromCart) {
			this.removeCouponFromCart = removeCouponFromCart;
			return this;
		}
		public Builder withRemoveItemFromCart(RemoveItemFromCartOutput removeItemFromCart) {
			this.removeItemFromCart = removeItemFromCart;
			return this;
		}
		public Builder withRevokeCustomerToken(RevokeCustomerTokenOutput revokeCustomerToken) {
			this.revokeCustomerToken = revokeCustomerToken;
			return this;
		}
		public Builder withSendEmailToFriend(SendEmailToFriendOutput sendEmailToFriend) {
			this.sendEmailToFriend = sendEmailToFriend;
			return this;
		}
		public Builder withSetBillingAddressOnCart(SetBillingAddressOnCartOutput setBillingAddressOnCart) {
			this.setBillingAddressOnCart = setBillingAddressOnCart;
			return this;
		}
		public Builder withSetGuestEmailOnCart(SetGuestEmailOnCartOutput setGuestEmailOnCart) {
			this.setGuestEmailOnCart = setGuestEmailOnCart;
			return this;
		}
		public Builder withSetPaymentMethodAndPlaceOrder(PlaceOrderOutput setPaymentMethodAndPlaceOrder) {
			this.setPaymentMethodAndPlaceOrder = setPaymentMethodAndPlaceOrder;
			return this;
		}
		public Builder withSetPaymentMethodOnCart(SetPaymentMethodOnCartOutput setPaymentMethodOnCart) {
			this.setPaymentMethodOnCart = setPaymentMethodOnCart;
			return this;
		}
		public Builder withSetShippingAddressesOnCart(SetShippingAddressesOnCartOutput setShippingAddressesOnCart) {
			this.setShippingAddressesOnCart = setShippingAddressesOnCart;
			return this;
		}
		public Builder withSetShippingMethodsOnCart(SetShippingMethodsOnCartOutput setShippingMethodsOnCart) {
			this.setShippingMethodsOnCart = setShippingMethodsOnCart;
			return this;
		}
		public Builder withUpdateCartItems(UpdateCartItemsOutput updateCartItems) {
			this.updateCartItems = updateCartItems;
			return this;
		}
		public Builder withUpdateCustomer(CustomerOutput updateCustomer) {
			this.updateCustomer = updateCustomer;
			return this;
		}
		public Builder withUpdateCustomerAddress(CustomerAddress updateCustomerAddress) {
			this.updateCustomerAddress = updateCustomerAddress;
			return this;
		}

		public Mutation build() {
			Mutation _object = new Mutation();
			_object.setAddBundleProductsToCart(addBundleProductsToCart);
			_object.setAddConfigurableProductsToCart(addConfigurableProductsToCart);
			_object.setAddDownloadableProductsToCart(addDownloadableProductsToCart);
			_object.setAddSimpleProductsToCart(addSimpleProductsToCart);
			_object.setAddVirtualProductsToCart(addVirtualProductsToCart);
			_object.setApplyCouponToCart(applyCouponToCart);
			_object.setChangeCustomerPassword(changeCustomerPassword);
			_object.setCreateBraintreeClientToken(createBraintreeClientToken);
			_object.setCreateCustomer(createCustomer);
			_object.setCreateCustomerAddress(createCustomerAddress);
			_object.setCreateEmptyCart(createEmptyCart);
			_object.setCreatePayflowProToken(createPayflowProToken);
			_object.setCreatePaypalExpressToken(createPaypalExpressToken);
			_object.setDeleteCustomerAddress(deleteCustomerAddress);
			_object.setDeletePaymentToken(deletePaymentToken);
			_object.setGenerateCustomerToken(generateCustomerToken);
			_object.setHandlePayflowProResponse(handlePayflowProResponse);
			_object.setMergeCarts(mergeCarts);
			_object.setPlaceOrder(placeOrder);
			_object.setRemoveCouponFromCart(removeCouponFromCart);
			_object.setRemoveItemFromCart(removeItemFromCart);
			_object.setRevokeCustomerToken(revokeCustomerToken);
			_object.setSendEmailToFriend(sendEmailToFriend);
			_object.setSetBillingAddressOnCart(setBillingAddressOnCart);
			_object.setSetGuestEmailOnCart(setGuestEmailOnCart);
			_object.setSetPaymentMethodAndPlaceOrder(setPaymentMethodAndPlaceOrder);
			_object.setSetPaymentMethodOnCart(setPaymentMethodOnCart);
			_object.setSetShippingAddressesOnCart(setShippingAddressesOnCart);
			_object.setSetShippingMethodsOnCart(setShippingMethodsOnCart);
			_object.setUpdateCartItems(updateCartItems);
			_object.setUpdateCustomer(updateCustomer);
			_object.setUpdateCustomerAddress(updateCustomerAddress);
			return _object;
		}
	}
}
